// Generated by DDC, the Dart Development Compiler (to JavaScript).
// Version: 3.7.2 (stable) (Tue Mar 11 04:27:50 2025 -0700) on "macos_arm64"
// Module: packages/platform_detect/src/browser
// Flags: soundNullSafety(true), enableAsserts(true)
define(['dart_sdk', 'packages/pub_semver/pub_semver'], (function load__packages__platform_detect__src__browser(dart_sdk, packages__pub_semver__pub_semver) {
  'use strict';
  const dart_rti = dart_sdk.dart_rti;
  const core = dart_sdk.core;
  const _interceptors = dart_sdk._interceptors;
  const dart = dart_sdk.dart;
  const dartx = dart_sdk.dartx;
  const version = packages__pub_semver__pub_semver.src__version;
  var navigator = Object.create(dart.library);
  var browser = Object.create(dart.library);
  var operating_system = Object.create(dart.library);
  var $firstWhere = dartx.firstWhere;
  var $contains = dartx.contains;
  dart._checkModuleNullSafetyMode(true);
  const CT = Object.create({
    _: () => (C, CT)
  });
  dart.defineLazy(CT, {
    get C0() {
      return C[0] = dart.fn(browser._Chrome._isChrome, dart_rti._Universe.eval(dart_rti._theUniverse(), "core|bool(platform_detect__src__navigator|NavigatorProvider)", true));
    },
    get C1() {
      return C[1] = dart.fn(browser._Chrome._getVersion, dart_rti._Universe.eval(dart_rti._theUniverse(), "pub_semver__src__version|Version(platform_detect__src__navigator|NavigatorProvider{namePrefix:core|String})", true));
    },
    get C2() {
      return C[2] = dart.fn(browser.EdgeChrome._isEdge, dart_rti._Universe.eval(dart_rti._theUniverse(), "core|bool(platform_detect__src__navigator|NavigatorProvider)", true));
    },
    get C3() {
      return C[3] = dart.fn(browser.EdgeChrome._getVersion, dart_rti._Universe.eval(dart_rti._theUniverse(), "pub_semver__src__version|Version(platform_detect__src__navigator|NavigatorProvider)", true));
    },
    get C4() {
      return C[4] = dart.fn(browser._Firefox._isFirefox, dart_rti._Universe.eval(dart_rti._theUniverse(), "core|bool(platform_detect__src__navigator|NavigatorProvider)", true));
    },
    get C5() {
      return C[5] = dart.fn(browser._Firefox._getVersion, dart_rti._Universe.eval(dart_rti._theUniverse(), "pub_semver__src__version|Version(platform_detect__src__navigator|NavigatorProvider)", true));
    },
    get C6() {
      return C[6] = dart.fn(browser._Safari._isSafari, dart_rti._Universe.eval(dart_rti._theUniverse(), "core|bool(platform_detect__src__navigator|NavigatorProvider)", true));
    },
    get C7() {
      return C[7] = dart.fn(browser._Safari._getVersion, dart_rti._Universe.eval(dart_rti._theUniverse(), "pub_semver__src__version|Version(platform_detect__src__navigator|NavigatorProvider)", true));
    },
    get C8() {
      return C[8] = dart.fn(browser._WKWebView._isWKWebView, dart_rti._Universe.eval(dart_rti._theUniverse(), "core|bool(platform_detect__src__navigator|NavigatorProvider)", true));
    },
    get C9() {
      return C[9] = dart.fn(browser._WKWebView._getVersion, dart_rti._Universe.eval(dart_rti._theUniverse(), "pub_semver__src__version|Version(platform_detect__src__navigator|NavigatorProvider)", true));
    },
    get C10() {
      return C[10] = dart.fn(browser._InternetExplorer._isInternetExplorer, dart_rti._Universe.eval(dart_rti._theUniverse(), "core|bool(platform_detect__src__navigator|NavigatorProvider)", true));
    },
    get C11() {
      return C[11] = dart.fn(browser._InternetExplorer._getVersion, dart_rti._Universe.eval(dart_rti._theUniverse(), "pub_semver__src__version|Version(platform_detect__src__navigator|NavigatorProvider)", true));
    }
  });
  var C = Array(12).fill(void 0);
  var I = [
    "package:platform_detect/src/navigator.dart",
    "dart:core",
    "package:platform_detect/src/browser.dart",
    "package:pub_semver/src/version.dart",
    "package:platform_detect/src/operating_system.dart"
  ];
  navigator.NavigatorProvider = class NavigatorProvider extends core.Object {};
  (navigator.NavigatorProvider.new = function() {
    ;
  }).prototype = navigator.NavigatorProvider.prototype;
  dart.addRtiResources(navigator.NavigatorProvider, ["platform_detect__src__navigator|NavigatorProvider"]);
  dart.setLibraryUri(navigator.NavigatorProvider, I[0]);
  var vendor = dart.privateName(navigator, "TestNavigator.vendor");
  var appVersion = dart.privateName(navigator, "TestNavigator.appVersion");
  var appName = dart.privateName(navigator, "TestNavigator.appName");
  var userAgent = dart.privateName(navigator, "TestNavigator.userAgent");
  navigator.TestNavigator = class TestNavigator extends core.Object {
    get vendor() {
      return this[vendor];
    }
    set vendor(value) {
      this[vendor] = value;
    }
    get appVersion() {
      return this[appVersion];
    }
    set appVersion(value) {
      this[appVersion] = value;
    }
    get appName() {
      return this[appName];
    }
    set appName(value) {
      this[appName] = value;
    }
    get userAgent() {
      return this[userAgent];
    }
    set userAgent(value) {
      this[userAgent] = value;
    }
    static ['_#new#tearOff']() {
      return new navigator.TestNavigator.new();
    }
  };
  (navigator.TestNavigator.new = function() {
    this[vendor] = "";
    this[appVersion] = "";
    this[appName] = "";
    this[userAgent] = "";
    ;
  }).prototype = navigator.TestNavigator.prototype;
  dart.addRtiResources(navigator.TestNavigator, ["platform_detect__src__navigator|TestNavigator", "platform_detect__src__navigator|NavigatorProvider"]);
  dart.setLibraryUri(navigator.TestNavigator, I[0]);
  dart.setFieldSignature(navigator.TestNavigator, () => dart.global.Object.setPrototypeOf({
    vendor: {
      type: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|String", true),
      isConst: false,
      isFinal: false,
      libraryUri: I[1]
    },
    appVersion: {
      type: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|String", true),
      isConst: false,
      isFinal: false,
      libraryUri: I[1]
    },
    appName: {
      type: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|String", true),
      isConst: false,
      isFinal: false,
      libraryUri: I[1]
    },
    userAgent: {
      type: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|String", true),
      isConst: false,
      isFinal: false,
      libraryUri: I[1]
    }
  }, dart.getFields(dart.global.Object.getPrototypeOf(navigator.TestNavigator))));
  var name = dart.privateName(browser, "Browser.name");
  var className = dart.privateName(browser, "Browser.className");
  var _version = dart.privateName(browser, "_version");
  var _matchesNavigator = dart.privateName(browser, "_matchesNavigator");
  var _parseVersion = dart.privateName(browser, "_parseVersion");
  browser.Browser = class Browser extends core.Object {
    get name() {
      return this[name];
    }
    set name(value) {
      super.name = value;
    }
    get className() {
      return this[className];
    }
    set className(value) {
      super.className = value;
    }
    static getCurrentBrowser() {
      return browser.Browser._knownBrowsers[$firstWhere](dart.fn(browser$ => {
        let t$361, t$360;
        return browser.Browser.navigator != null && (t$360 = browser$, t$361 = dart.nullCheck(browser.Browser.navigator), t$360[_matchesNavigator](t$361));
      }, dart_rti._Universe.eval(dart_rti._theUniverse(), "core|bool(platform_detect__src__browser|Browser)", true)), {orElse: dart.fn(() => browser.Browser.UnknownBrowser, dart_rti._Universe.eval(dart_rti._theUniverse(), "platform_detect__src__browser|Browser()", true))});
    }
    clearVersion() {
      return this[_version] = null;
    }
    static ['_#new#tearOff'](name, _matchesNavigator, _parseVersion, opts) {
      let className = opts && 'className' in opts ? opts.className : "";
      return new browser.Browser.new(name, _matchesNavigator, _parseVersion, {className: className});
    }
    get version() {
      let t$361, t$361$, t$360;
      t$360 = this[_version];
      return t$360 == null ? this[_version] = (t$361$ = (t$361 = browser.Browser.navigator, t$361 == null ? new navigator.TestNavigator.new() : t$361), this[_parseVersion](t$361$)) : t$360;
    }
    get isChrome() {
      return dart.equals(this, browser.chrome) || dart.equals(this, browser.edgeChrome);
    }
    get isEdgeChrome() {
      return dart.equals(this, browser.edgeChrome);
    }
    get isFirefox() {
      return dart.equals(this, browser.firefox);
    }
    get isSafari() {
      return dart.equals(this, browser.safari);
    }
    get isInternetExplorer() {
      return dart.equals(this, browser.internetExplorer);
    }
    get isWKWebView() {
      return dart.equals(this, browser.wkWebView);
    }
  };
  (browser.Browser.new = function(name$, _matchesNavigator$, _parseVersion$, opts) {
    let className$ = opts && 'className' in opts ? opts.className : "";
    this[_version] = null;
    this[name] = name$;
    this[_matchesNavigator] = _matchesNavigator$;
    this[_parseVersion] = _parseVersion$;
    this[className] = className$;
    ;
  }).prototype = browser.Browser.prototype;
  dart.addRtiResources(browser.Browser, ["platform_detect__src__browser|Browser"]);
  dart.setMethodSignature(browser.Browser, () => dart.global.Object.setPrototypeOf({
    clearVersion: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "~()", true)
  }, dart.getMethods(dart.global.Object.getPrototypeOf(browser.Browser))));
  dart.setStaticMethodSignature(browser.Browser, () => ['getCurrentBrowser']);
  dart.setGetterSignature(browser.Browser, () => dart.global.Object.setPrototypeOf({
    version: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "pub_semver__src__version|Version", true),
    isChrome: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|bool", true),
    isEdgeChrome: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|bool", true),
    isFirefox: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|bool", true),
    isSafari: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|bool", true),
    isInternetExplorer: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|bool", true),
    isWKWebView: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|bool", true)
  }, dart.getGetters(dart.global.Object.getPrototypeOf(browser.Browser))));
  dart.setLibraryUri(browser.Browser, I[2]);
  dart.setFieldSignature(browser.Browser, () => dart.global.Object.setPrototypeOf({
    name: {
      type: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|String", true),
      isConst: false,
      isFinal: true,
      libraryUri: I[1]
    },
    className: {
      type: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|String", true),
      isConst: false,
      isFinal: true,
      libraryUri: I[1]
    },
    [_matchesNavigator]: {
      type: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|bool(platform_detect__src__navigator|NavigatorProvider)", true),
      isConst: false,
      isFinal: true
    },
    [_parseVersion]: {
      type: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "pub_semver__src__version|Version(platform_detect__src__navigator|NavigatorProvider)", true),
      isConst: false,
      isFinal: true
    },
    [_version]: {
      type: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "pub_semver__src__version|Version?", true),
      isConst: false,
      isFinal: false,
      libraryUri: I[3]
    }
  }, dart.getFields(dart.global.Object.getPrototypeOf(browser.Browser))));
  dart.setStaticFieldSignature(browser.Browser, () => ['navigator', 'UnknownBrowser', '_knownBrowsers']);
  dart.defineLazy(browser.Browser, {
    /*browser.Browser.navigator*/get navigator() {
      return null;
    },
    set navigator(value) {},
    /*browser.Browser.UnknownBrowser*/get UnknownBrowser() {
      return new browser.Browser.new("Unknown", dart.fn(_ => false, dart_rti._Universe.eval(dart_rti._theUniverse(), "core|bool(platform_detect__src__navigator|NavigatorProvider)", true)), dart.fn(_ => version.Version.new(0, 0, 0), dart_rti._Universe.eval(dart_rti._theUniverse(), "pub_semver__src__version|Version(platform_detect__src__navigator|NavigatorProvider)", true)));
    },
    set UnknownBrowser(value) {},
    /*browser.Browser._knownBrowsers*/get _knownBrowsers() {
      return _interceptors.JSArray.of(dart_rti._Universe.eval(dart_rti._theUniverse(), "_interceptors|JSArray<platform_detect__src__browser|Browser>", true), [browser.internetExplorer, browser.firefox, browser.safari, browser.wkWebView, browser.edgeChrome, browser.chrome]);
    },
    set _knownBrowsers(value) {}
  });
  browser._Chrome = class _Chrome extends browser.Browser {
    static ['_#new#tearOff']() {
      return new browser._Chrome.new();
    }
    static _isChrome(navigator) {
      return navigator.vendor[$contains]("Google");
    }
    static _getVersion(navigator, opts) {
      let namePrefix = opts && 'namePrefix' in opts ? opts.namePrefix : "Chrome";
      let match = core.RegExp.new(namePrefix + "/(\\d+)\\.(\\d+)\\.(\\d+)\\.(\\d+)").firstMatch(navigator.appVersion);
      if (match != null) {
        let major = core.int.parse(dart.nullCheck(match.group(1)));
        let minor = core.int.parse(dart.nullCheck(match.group(2)));
        let patch = core.int.parse(dart.nullCheck(match.group(3)));
        let build = match.group(4);
        return version.Version.new(major, minor, patch, {build: build});
      } else {
        return version.Version.new(0, 0, 0);
      }
    }
  };
  (browser._Chrome.new = function() {
    dart.global.Object.getPrototypeOf(browser._Chrome).new.call(this, "Chrome", C[0] || CT.C0, C[1] || CT.C1);
    ;
  }).prototype = browser._Chrome.prototype;
  dart.addRtiResources(browser._Chrome, ["platform_detect__src__browser|_Chrome"]);
  dart.setStaticMethodSignature(browser._Chrome, () => ['_isChrome', '_getVersion']);
  dart.setLibraryUri(browser._Chrome, I[2]);
  var _chromeVersion = dart.privateName(browser, "_chromeVersion");
  browser.EdgeChrome = class EdgeChrome extends browser.Browser {
    static ['_#_#tearOff']() {
      return new browser.EdgeChrome.__();
    }
    static _isEdge(navigator) {
      return navigator.userAgent[$contains]("Edg/");
    }
    static _getVersion(navigator$) {
      let t$360;
      return browser._Chrome._getVersion((t$360 = browser.Browser.navigator, t$360 == null ? new navigator.TestNavigator.new() : t$360), {namePrefix: "Edg"});
    }
    get chromeVersion() {
      let t$361, t$360;
      t$360 = this[_chromeVersion];
      return t$360 == null ? this[_chromeVersion] = browser._Chrome._getVersion((t$361 = browser.Browser.navigator, t$361 == null ? new navigator.TestNavigator.new() : t$361)) : t$360;
    }
  };
  (browser.EdgeChrome.__ = function() {
    this[_chromeVersion] = null;
    dart.global.Object.getPrototypeOf(browser.EdgeChrome).new.call(this, "Edge", C[2] || CT.C2, C[3] || CT.C3, {className: "chrome"});
    ;
  }).prototype = browser.EdgeChrome.prototype;
  dart.addRtiResources(browser.EdgeChrome, ["platform_detect__src__browser|EdgeChrome"]);
  dart.setStaticMethodSignature(browser.EdgeChrome, () => ['_isEdge', '_getVersion']);
  dart.setGetterSignature(browser.EdgeChrome, () => dart.global.Object.setPrototypeOf({
    chromeVersion: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "pub_semver__src__version|Version", true)
  }, dart.getGetters(dart.global.Object.getPrototypeOf(browser.EdgeChrome))));
  dart.setLibraryUri(browser.EdgeChrome, I[2]);
  dart.setFieldSignature(browser.EdgeChrome, () => dart.global.Object.setPrototypeOf({[_chromeVersion]: {
      type: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "pub_semver__src__version|Version?", true),
      isConst: false,
      isFinal: false,
      libraryUri: I[3]
    }}, dart.getFields(dart.global.Object.getPrototypeOf(browser.EdgeChrome))));
  browser._Firefox = class _Firefox extends browser.Browser {
    static ['_#new#tearOff']() {
      return new browser._Firefox.new();
    }
    static _isFirefox(navigator) {
      return navigator.userAgent[$contains]("Firefox");
    }
    static _getVersion(navigator) {
      let match = dart.nullCheck(core.RegExp.new("rv:(\\d+)\\.(\\d+)\\)").firstMatch(navigator.userAgent));
      let major = core.int.parse(dart.nullCheck(match.group(1)));
      let minor = core.int.parse(dart.nullCheck(match.group(2)));
      return version.Version.new(major, minor, 0);
    }
  };
  (browser._Firefox.new = function() {
    dart.global.Object.getPrototypeOf(browser._Firefox).new.call(this, "Firefox", C[4] || CT.C4, C[5] || CT.C5);
    ;
  }).prototype = browser._Firefox.prototype;
  dart.addRtiResources(browser._Firefox, ["platform_detect__src__browser|_Firefox"]);
  dart.setStaticMethodSignature(browser._Firefox, () => ['_isFirefox', '_getVersion']);
  dart.setLibraryUri(browser._Firefox, I[2]);
  browser._Safari = class _Safari extends browser.Browser {
    static ['_#new#tearOff']() {
      return new browser._Safari.new();
    }
    static _isSafari(navigator) {
      let vendor = navigator.vendor;
      return vendor[$contains]("Apple") && navigator.appVersion[$contains]("Version");
    }
    static _getVersion(navigator) {
      let t$360, t$360$;
      let match = dart.nullCheck(core.RegExp.new("Version/(\\d+)(\\.(\\d+))?(\\.(\\d+))?").firstMatch(navigator.appVersion));
      let major = core.int.parse(dart.nullCheck(match.group(1)));
      let minor = core.int.parse((t$360 = match.group(3), t$360 == null ? "0" : t$360));
      let patch = core.int.parse((t$360$ = match.group(5), t$360$ == null ? "0" : t$360$));
      return version.Version.new(major, minor, patch);
    }
  };
  (browser._Safari.new = function() {
    dart.global.Object.getPrototypeOf(browser._Safari).new.call(this, "Safari", C[6] || CT.C6, C[7] || CT.C7);
    ;
  }).prototype = browser._Safari.prototype;
  dart.addRtiResources(browser._Safari, ["platform_detect__src__browser|_Safari"]);
  dart.setStaticMethodSignature(browser._Safari, () => ['_isSafari', '_getVersion']);
  dart.setLibraryUri(browser._Safari, I[2]);
  browser._WKWebView = class _WKWebView extends browser.Browser {
    static ['_#new#tearOff']() {
      return new browser._WKWebView.new();
    }
    static _isWKWebView(navigator) {
      return navigator.vendor[$contains]("Apple") && !navigator.appVersion[$contains]("Version");
    }
    static _getVersion(navigator) {
      let match = dart.nullCheck(core.RegExp.new("AppleWebKit/(\\d+)\\.(\\d+)\\.(\\d+)").firstMatch(navigator.appVersion));
      let major = core.int.parse(dart.nullCheck(match.group(1)));
      let minor = core.int.parse(dart.nullCheck(match.group(2)));
      let patch = core.int.parse(dart.nullCheck(match.group(3)));
      return version.Version.new(major, minor, patch);
    }
  };
  (browser._WKWebView.new = function() {
    dart.global.Object.getPrototypeOf(browser._WKWebView).new.call(this, "WKWebView", C[8] || CT.C8, C[9] || CT.C9);
    ;
  }).prototype = browser._WKWebView.prototype;
  dart.addRtiResources(browser._WKWebView, ["platform_detect__src__browser|_WKWebView"]);
  dart.setStaticMethodSignature(browser._WKWebView, () => ['_isWKWebView', '_getVersion']);
  dart.setLibraryUri(browser._WKWebView, I[2]);
  browser._InternetExplorer = class _InternetExplorer extends browser.Browser {
    static ['_#new#tearOff']() {
      return new browser._InternetExplorer.new();
    }
    static _isInternetExplorer(navigator) {
      return navigator.appName[$contains]("Microsoft") || navigator.appVersion[$contains]("Trident") || navigator.appVersion[$contains]("Edge");
    }
    static _getVersion(navigator) {
      let match = core.RegExp.new("MSIE (\\d+)\\.(\\d+);").firstMatch(navigator.appVersion);
      if (match != null) {
        let major = core.int.parse(dart.nullCheck(match.group(1)));
        let minor = core.int.parse(dart.nullCheck(match.group(2)));
        return version.Version.new(major, minor, 0);
      }
      match = core.RegExp.new("rv[: ](\\d+)\\.(\\d+)").firstMatch(navigator.appVersion);
      if (match != null) {
        let major$ = core.int.parse(dart.nullCheck(match.group(1)));
        let minor$ = core.int.parse(dart.nullCheck(match.group(2)));
        return version.Version.new(major$, minor$, 0);
      }
      match = core.RegExp.new("Edge/(\\d+)\\.(\\d+)$").firstMatch(navigator.appVersion);
      if (match != null) {
        let major$0 = core.int.parse(dart.nullCheck(match.group(1)));
        let minor$0 = core.int.parse(dart.nullCheck(match.group(2)));
        return version.Version.new(major$0, minor$0, 0);
      }
      return version.Version.new(0, 0, 0);
    }
  };
  (browser._InternetExplorer.new = function() {
    dart.global.Object.getPrototypeOf(browser._InternetExplorer).new.call(this, "Internet Explorer", C[10] || CT.C10, C[11] || CT.C11, {className: "ie"});
    ;
  }).prototype = browser._InternetExplorer.prototype;
  dart.addRtiResources(browser._InternetExplorer, ["platform_detect__src__browser|_InternetExplorer"]);
  dart.setStaticMethodSignature(browser._InternetExplorer, () => ['_isInternetExplorer', '_getVersion']);
  dart.setLibraryUri(browser._InternetExplorer, I[2]);
  dart.defineLazy(browser, {
    /*browser.chrome*/get chrome() {
      return new browser._Chrome.new();
    },
    set chrome(value) {},
    /*browser.firefox*/get firefox() {
      return new browser._Firefox.new();
    },
    set firefox(value) {},
    /*browser.safari*/get safari() {
      return new browser._Safari.new();
    },
    set safari(value) {},
    /*browser.internetExplorer*/get internetExplorer() {
      return new browser._InternetExplorer.new();
    },
    set internetExplorer(value) {},
    /*browser.wkWebView*/get wkWebView() {
      return new browser._WKWebView.new();
    },
    set wkWebView(value) {},
    /*browser.edgeChrome*/get edgeChrome() {
      return new browser.EdgeChrome.__();
    },
    set edgeChrome(value) {}
  });
  var name$ = dart.privateName(operating_system, "OperatingSystem.name");
  var _matchesNavigator$ = dart.privateName(operating_system, "_matchesNavigator");
  operating_system.OperatingSystem = class OperatingSystem extends core.Object {
    get name() {
      return this[name$];
    }
    set name(value) {
      super.name = value;
    }
    static getCurrentOperatingSystem() {
      return operating_system.OperatingSystem._knownSystems[$firstWhere](dart.fn(system => {
        let t$361, t$360;
        return operating_system.OperatingSystem.navigator != null && (t$360 = system, t$361 = dart.nullCheck(operating_system.OperatingSystem.navigator), t$360[_matchesNavigator$](t$361));
      }, dart_rti._Universe.eval(dart_rti._theUniverse(), "core|bool(platform_detect__src__operating_system|OperatingSystem)", true)), {orElse: dart.fn(() => operating_system.OperatingSystem.UnknownOS, dart_rti._Universe.eval(dart_rti._theUniverse(), "platform_detect__src__operating_system|OperatingSystem()", true))});
    }
    static ['_#new#tearOff'](name, _matchesNavigator) {
      return new operating_system.OperatingSystem.new(name, _matchesNavigator);
    }
    get isLinux() {
      return dart.equals(this, operating_system.linux);
    }
    get isMac() {
      return dart.equals(this, operating_system.mac);
    }
    get isUnix() {
      return dart.equals(this, operating_system.unix);
    }
    get isWindows() {
      return dart.equals(this, operating_system.windows);
    }
    get isChromeOS() {
      return dart.equals(this, operating_system.chrome);
    }
  };
  (operating_system.OperatingSystem.new = function(name, _matchesNavigator) {
    this[name$] = name;
    this[_matchesNavigator$] = _matchesNavigator;
    ;
  }).prototype = operating_system.OperatingSystem.prototype;
  dart.addRtiResources(operating_system.OperatingSystem, ["platform_detect__src__operating_system|OperatingSystem"]);
  dart.setStaticMethodSignature(operating_system.OperatingSystem, () => ['getCurrentOperatingSystem']);
  dart.setGetterSignature(operating_system.OperatingSystem, () => dart.global.Object.setPrototypeOf({
    isLinux: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|bool", true),
    isMac: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|bool", true),
    isUnix: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|bool", true),
    isWindows: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|bool", true),
    isChromeOS: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|bool", true)
  }, dart.getGetters(dart.global.Object.getPrototypeOf(operating_system.OperatingSystem))));
  dart.setLibraryUri(operating_system.OperatingSystem, I[4]);
  dart.setFieldSignature(operating_system.OperatingSystem, () => dart.global.Object.setPrototypeOf({
    name: {
      type: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|String", true),
      isConst: false,
      isFinal: true,
      libraryUri: I[1]
    },
    [_matchesNavigator$]: {
      type: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|bool(platform_detect__src__navigator|NavigatorProvider)", true),
      isConst: false,
      isFinal: true
    }
  }, dart.getFields(dart.global.Object.getPrototypeOf(operating_system.OperatingSystem))));
  dart.setStaticFieldSignature(operating_system.OperatingSystem, () => ['navigator', 'UnknownOS', '_knownSystems']);
  dart.defineLazy(operating_system.OperatingSystem, {
    /*operating_system.OperatingSystem.navigator*/get navigator() {
      return null;
    },
    set navigator(value) {},
    /*operating_system.OperatingSystem.UnknownOS*/get UnknownOS() {
      return new operating_system.OperatingSystem.new("Unknown", dart.fn(_ => false, dart_rti._Universe.eval(dart_rti._theUniverse(), "core|bool(platform_detect__src__navigator|NavigatorProvider)", true)));
    },
    set UnknownOS(value) {},
    /*operating_system.OperatingSystem._knownSystems*/get _knownSystems() {
      return _interceptors.JSArray.of(dart_rti._Universe.eval(dart_rti._theUniverse(), "_interceptors|JSArray<platform_detect__src__operating_system|OperatingSystem>", true), [operating_system.chrome, operating_system.mac, operating_system.windows, operating_system.linux, operating_system.unix]);
    },
    set _knownSystems(value) {}
  });
  dart.defineLazy(operating_system, {
    /*operating_system.linux*/get linux() {
      return new operating_system.OperatingSystem.new("Linux", dart.fn(navigator => navigator.appVersion[$contains]("Linux"), dart_rti._Universe.eval(dart_rti._theUniverse(), "core|bool(platform_detect__src__navigator|NavigatorProvider)", true)));
    },
    set linux(value) {},
    /*operating_system.mac*/get mac() {
      return new operating_system.OperatingSystem.new("Mac", dart.fn(navigator => navigator.appVersion[$contains]("Mac"), dart_rti._Universe.eval(dart_rti._theUniverse(), "core|bool(platform_detect__src__navigator|NavigatorProvider)", true)));
    },
    set mac(value) {},
    /*operating_system.unix*/get unix() {
      return new operating_system.OperatingSystem.new("Unix", dart.fn(navigator => navigator.appVersion[$contains]("X11"), dart_rti._Universe.eval(dart_rti._theUniverse(), "core|bool(platform_detect__src__navigator|NavigatorProvider)", true)));
    },
    set unix(value) {},
    /*operating_system.windows*/get windows() {
      return new operating_system.OperatingSystem.new("Windows", dart.fn(navigator => navigator.appVersion[$contains]("Win"), dart_rti._Universe.eval(dart_rti._theUniverse(), "core|bool(platform_detect__src__navigator|NavigatorProvider)", true)));
    },
    set windows(value) {},
    /*operating_system.chrome*/get chrome() {
      return new operating_system.OperatingSystem.new("ChromeOS", dart.fn(navigator => navigator.appVersion[$contains]("CrOS"), dart_rti._Universe.eval(dart_rti._theUniverse(), "core|bool(platform_detect__src__navigator|NavigatorProvider)", true)));
    },
    set chrome(value) {}
  });
  dart.moduleConstCaches.set("packages/platform_detect/src/browser", C);
  dart_rti._Universe.addRules(dart.typeUniverse, JSON.parse('{"core|String":{"Comparable.T":"core|String","core|Comparable":["core|String"],"core|Pattern":[]},"core|Comparable":{"Comparable.T":"1"},"pub_semver__src__version|Version":{"pub_semver__src__version_constraint|VersionConstraint":[],"pub_semver__src__version_range|VersionRange":[],"Comparable.T":"pub_semver__src__version_range|VersionRange","core|Comparable":["pub_semver__src__version_range|VersionRange"]},"pub_semver__src__version_range|VersionRange":{"Comparable.T":"pub_semver__src__version_range|VersionRange","core|Comparable":["pub_semver__src__version_range|VersionRange"],"pub_semver__src__version_constraint|VersionConstraint":[]},"core|List":{"List.E":"1","Iterable.E":"1","core|Iterable":["1"],"_ListIterable.E":"1","core|_ListIterable":["1"],"EfficientLengthIterable.T":"1","_internal|EfficientLengthIterable":["1"],"HideEfficientLengthIterable.T":"1","_internal|HideEfficientLengthIterable":["1"]},"core|Iterable":{"Iterable.E":"1"},"core|_ListIterable":{"_ListIterable.E":"1","EfficientLengthIterable.T":"1","_internal|EfficientLengthIterable":["1"],"HideEfficientLengthIterable.T":"1","_internal|HideEfficientLengthIterable":["1"],"Iterable.E":"1","core|Iterable":["1"]},"_internal|EfficientLengthIterable":{"EfficientLengthIterable.T":"1","Iterable.E":"1","core|Iterable":["1"]},"_internal|HideEfficientLengthIterable":{"HideEfficientLengthIterable.T":"1","Iterable.E":"1","core|Iterable":["1"]},"_interceptors|JSArray":{"JSArray.E":"1","_interceptors|JavaScriptObject":[],"List.E":"1","core|List":["1"],"JSIndexable.E":"1","_interceptors|JSIndexable":["1"],"_js_helper|TrustedGetRuntimeType":[],"_interceptors|Interceptor":[],"_interceptors|JSObject":[],"Iterable.E":"1","core|Iterable":["1"],"_ListIterable.E":"1","core|_ListIterable":["1"],"EfficientLengthIterable.T":"1","_internal|EfficientLengthIterable":["1"],"HideEfficientLengthIterable.T":"1","_internal|HideEfficientLengthIterable":["1"]},"_interceptors|JavaScriptObject":{"_interceptors|Interceptor":[],"_interceptors|JSObject":[]},"_interceptors|JSIndexable":{"JSIndexable.E":"1"},"platform_detect__src__navigator|TestNavigator":{"platform_detect__src__navigator|NavigatorProvider":[]},"platform_detect__src__browser|_Chrome":{"platform_detect__src__browser|Browser":[]},"platform_detect__src__browser|EdgeChrome":{"platform_detect__src__browser|Browser":[]},"platform_detect__src__browser|_Firefox":{"platform_detect__src__browser|Browser":[]},"platform_detect__src__browser|_Safari":{"platform_detect__src__browser|Browser":[]},"platform_detect__src__browser|_WKWebView":{"platform_detect__src__browser|Browser":[]},"platform_detect__src__browser|_InternetExplorer":{"platform_detect__src__browser|Browser":[]}}'));
  dart.trackLibraries("packages/platform_detect/src/browser", {
    "package:platform_detect/src/navigator.dart": navigator,
    "package:platform_detect/src/browser.dart": browser,
    "package:platform_detect/src/operating_system.dart": operating_system
  }, {
  }, '{"version":3,"sourceRoot":"","sources":["navigator.dart","browser.dart","operating_system.dart"],"names":[],"mappings":"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","file":"browser.ddc.js"}');
  // Exports:
  return {
    src__navigator: navigator,
    src__browser: browser,
    src__operating_system: operating_system
  };
}));

//# sourceMappingURL=browser.ddc.js.map
