// Generated by DDC, the Dart Development Compiler (to JavaScript).
// Version: 3.7.2 (stable) (Tue Mar 11 04:27:50 2025 -0700) on "macos_arm64"
// Module: packages/collection/src/comparators
// Flags: soundNullSafety(true), enableAsserts(true)
define(['dart_sdk'], (function load__packages__collection__src__comparators(dart_sdk) {
  'use strict';
  const dart_rti = dart_sdk.dart_rti;
  const core = dart_sdk.core;
  const collection = dart_sdk.collection;
  const _js_helper = dart_sdk._js_helper;
  const dart = dart_sdk.dart;
  const dartx = dart_sdk.dartx;
  var comparators = Object.create(dart.library);
  var equality = Object.create(dart.library);
  var $codeUnitAt = dartx.codeUnitAt;
  var $rightShift = dartx['>>'];
  var $sign = dartx.sign;
  var $iterator = dartx.iterator;
  var $length = dartx.length;
  var $_get = dartx._get;
  var $_set = dartx._set;
  var $keys = dartx.keys;
  dart._checkModuleNullSafetyMode(true);
  const CT = Object.create({
    _: () => (C, CT)
  });
  dart.defineLazy(CT, {
    get C0() {
      return C[0] = dart.const(Object.setPrototypeOf({
        $ti: dart_rti._Universe.eval(dart_rti._theUniverse(), "collection__src__equality|DefaultEquality<0&>", true)
      }, equality.DefaultEquality.prototype));
    }
  });
  var C = [void 0];
  var I = [
    "org-dartlang-app:///packages/collection/src/comparators.dart",
    "package:collection/src/equality.dart",
    "dart:core"
  ];
  comparators.equalsIgnoreAsciiCase = function equalsIgnoreAsciiCase(a, b) {
    if (a.length !== b.length) return false;
    for (let i = 0; i < a.length; i = i + 1) {
      let aChar = a[$codeUnitAt](i);
      let bChar = b[$codeUnitAt](i);
      if (aChar === bChar) continue;
      if ((aChar ^ bChar) >>> 0 !== 32) return false;
      let aCharLowerCase = (aChar | 32) >>> 0;
      if (97 <= aCharLowerCase && aCharLowerCase <= 122) {
        continue;
      }
      return false;
    }
    return true;
  };
  comparators.hashIgnoreAsciiCase = function hashIgnoreAsciiCase(string) {
    let hash = 0;
    for (let i = 0; i < string.length; i = i + 1) {
      let char = string[$codeUnitAt](i);
      if (97 <= char && char <= 122) char = char - 32;
      hash = 536870911 & hash + char;
      hash = 536870911 & hash + ((524287 & hash) << 10);
      hash = hash[$rightShift](6);
    }
    hash = 536870911 & hash + ((67108863 & hash) << 3);
    hash = hash[$rightShift](11);
    return 536870911 & hash + ((16383 & hash) << 15);
  };
  comparators.compareAsciiUpperCase = function compareAsciiUpperCase(a, b) {
    let defaultResult = 0;
    for (let i = 0; i < a.length; i = i + 1) {
      if (i >= b.length) return 1;
      let aChar = a[$codeUnitAt](i);
      let bChar = b[$codeUnitAt](i);
      if (aChar === bChar) continue;
      let aUpperCase = aChar;
      let bUpperCase = bChar;
      if (97 <= aChar && aChar <= 122) {
        aUpperCase = aUpperCase - 32;
      }
      if (97 <= bChar && bChar <= 122) {
        bUpperCase = bUpperCase - 32;
      }
      if (aUpperCase !== bUpperCase) return (aUpperCase - bUpperCase)[$sign];
      if (defaultResult === 0) defaultResult = aChar - bChar;
    }
    if (b.length > a.length) return -1;
    return defaultResult[$sign];
  };
  comparators.compareAsciiLowerCase = function compareAsciiLowerCase(a, b) {
    let defaultResult = 0;
    for (let i = 0; i < a.length; i = i + 1) {
      if (i >= b.length) return 1;
      let aChar = a[$codeUnitAt](i);
      let bChar = b[$codeUnitAt](i);
      if (aChar === bChar) continue;
      let aLowerCase = aChar;
      let bLowerCase = bChar;
      if (65 <= bChar && bChar <= 90) {
        bLowerCase = bLowerCase + 32;
      }
      if (65 <= aChar && aChar <= 90) {
        aLowerCase = aLowerCase + 32;
      }
      if (aLowerCase !== bLowerCase) return (aLowerCase - bLowerCase)[$sign];
      if (defaultResult === 0) defaultResult = aChar - bChar;
    }
    if (b.length > a.length) return -1;
    return defaultResult[$sign];
  };
  comparators.compareNatural = function compareNatural(a, b) {
    for (let i = 0; i < a.length; i = i + 1) {
      if (i >= b.length) return 1;
      let aChar = a[$codeUnitAt](i);
      let bChar = b[$codeUnitAt](i);
      if (aChar !== bChar) {
        return comparators._compareNaturally(a, b, i, aChar, bChar);
      }
    }
    if (b.length > a.length) return -1;
    return 0;
  };
  comparators.compareAsciiLowerCaseNatural = function compareAsciiLowerCaseNatural(a, b) {
    let defaultResult = 0;
    for (let i = 0; i < a.length; i = i + 1) {
      if (i >= b.length) return 1;
      let aChar = a[$codeUnitAt](i);
      let bChar = b[$codeUnitAt](i);
      if (aChar === bChar) continue;
      let aLowerCase = aChar;
      let bLowerCase = bChar;
      if (65 <= aChar && aChar <= 90) {
        aLowerCase = aLowerCase + 32;
      }
      if (65 <= bChar && bChar <= 90) {
        bLowerCase = bLowerCase + 32;
      }
      if (aLowerCase !== bLowerCase) {
        return comparators._compareNaturally(a, b, i, aLowerCase, bLowerCase);
      }
      if (defaultResult === 0) defaultResult = aChar - bChar;
    }
    if (b.length > a.length) return -1;
    return defaultResult[$sign];
  };
  comparators.compareAsciiUpperCaseNatural = function compareAsciiUpperCaseNatural(a, b) {
    let defaultResult = 0;
    for (let i = 0; i < a.length; i = i + 1) {
      if (i >= b.length) return 1;
      let aChar = a[$codeUnitAt](i);
      let bChar = b[$codeUnitAt](i);
      if (aChar === bChar) continue;
      let aUpperCase = aChar;
      let bUpperCase = bChar;
      if (97 <= aChar && aChar <= 122) {
        aUpperCase = aUpperCase - 32;
      }
      if (97 <= bChar && bChar <= 122) {
        bUpperCase = bUpperCase - 32;
      }
      if (aUpperCase !== bUpperCase) {
        return comparators._compareNaturally(a, b, i, aUpperCase, bUpperCase);
      }
      if (defaultResult === 0) defaultResult = aChar - bChar;
    }
    if (b.length > a.length) return -1;
    return defaultResult[$sign];
  };
  comparators._compareNaturally = function _compareNaturally(a, b, index, aChar, bChar) {
    if (!(aChar !== bChar)) dart.assertFailed(null, I[0], 259, 10, "aChar != bChar");
    let aIsDigit = comparators._isDigit(aChar);
    let bIsDigit = comparators._isDigit(bChar);
    if (aIsDigit) {
      if (bIsDigit) {
        return comparators._compareNumerically(a, b, aChar, bChar, index);
      } else if (index > 0 && comparators._isDigit(a[$codeUnitAt](index - 1))) {
        return 1;
      }
    } else if (bIsDigit && index > 0 && comparators._isDigit(b[$codeUnitAt](index - 1))) {
      return -1;
    }
    return (aChar - bChar)[$sign];
  };
  comparators._compareNumerically = function _compareNumerically(a, b, aChar, bChar, index) {
    if (comparators._isNonZeroNumberSuffix(a, index)) {
      let result = comparators._compareDigitCount(a, b, index, index);
      if (result !== 0) return result;
      return (aChar - bChar)[$sign];
    }
    let aIndex = index;
    let bIndex = index;
    if (aChar === 48) {
      do {
        aIndex = aIndex + 1;
        if (aIndex === a.length) return -1;
        aChar = a[$codeUnitAt](aIndex);
      } while (aChar === 48);
      if (!comparators._isDigit(aChar)) return -1;
    } else if (bChar === 48) {
      do {
        bIndex = bIndex + 1;
        if (bIndex === b.length) return 1;
        bChar = b[$codeUnitAt](bIndex);
      } while (bChar === 48);
      if (!comparators._isDigit(bChar)) return 1;
    }
    if (aChar !== bChar) {
      let result$ = comparators._compareDigitCount(a, b, aIndex, bIndex);
      if (result$ !== 0) return result$;
      return (aChar - bChar)[$sign];
    }
    while (true) {
      let aIsDigit = false;
      let bIsDigit = false;
      aChar = 0;
      bChar = 0;
      if ((aIndex = aIndex + 1) < a.length) {
        aChar = a[$codeUnitAt](aIndex);
        aIsDigit = comparators._isDigit(aChar);
      }
      if ((bIndex = bIndex + 1) < b.length) {
        bChar = b[$codeUnitAt](bIndex);
        bIsDigit = comparators._isDigit(bChar);
      }
      if (aIsDigit) {
        if (bIsDigit) {
          if (aChar === bChar) continue;
          break;
        }
        return 1;
      } else if (bIsDigit) {
        return -1;
      } else {
        return (aIndex - bIndex)[$sign];
      }
    }
    let result$0 = comparators._compareDigitCount(a, b, aIndex, bIndex);
    if (result$0 !== 0) return result$0;
    return (aChar - bChar)[$sign];
  };
  comparators._compareDigitCount = function _compareDigitCount(a, b, i, j) {
    while ((i = i + 1) < a.length) {
      let aIsDigit = comparators._isDigit(a[$codeUnitAt](i));
      if ((j = j + 1) === b.length) return aIsDigit ? 1 : 0;
      let bIsDigit = comparators._isDigit(b[$codeUnitAt](j));
      if (aIsDigit) {
        if (bIsDigit) continue;
        return 1;
      } else if (bIsDigit) {
        return -1;
      } else {
        return 0;
      }
    }
    if ((j = j + 1) < b.length && comparators._isDigit(b[$codeUnitAt](j))) {
      return -1;
    }
    return 0;
  };
  comparators._isDigit = function _isDigit(charCode) {
    return (charCode ^ 48) >>> 0 <= 9;
  };
  comparators._isNonZeroNumberSuffix = function _isNonZeroNumberSuffix(string, index) {
    while ((index = index - 1) >= 0) {
      let char = string[$codeUnitAt](index);
      if (char !== 48) return comparators._isDigit(char);
    }
    return false;
  };
  dart.defineLazy(comparators, {
    /*comparators._zero*/get _zero() {
      return 48;
    },
    /*comparators._upperCaseA*/get _upperCaseA() {
      return 65;
    },
    /*comparators._upperCaseZ*/get _upperCaseZ() {
      return 90;
    },
    /*comparators._lowerCaseA*/get _lowerCaseA() {
      return 97;
    },
    /*comparators._lowerCaseZ*/get _lowerCaseZ() {
      return 122;
    },
    /*comparators._asciiCaseBit*/get _asciiCaseBit() {
      return 32;
    }
  });
  var _bind = dart.privateName(dart_rti, "_bind");
  var _eval = dart.privateName(dart_rti, "_eval");
  equality.Equality = class Equality extends core.Object {
    static ['_#new#tearOff'](E) {
      return new equality.DefaultEquality.new(dart_rti.instanceType(this)[_bind](E)[_eval]("collection__src__equality|DefaultEquality<1>"));
    }
  };
  (equality.Equality[dart.mixinNew] = function() {
  }).prototype = equality.Equality.prototype;
  dart.addRtiResources(equality.Equality, ["collection__src__equality|Equality"]);
  dart.setStaticMethodSignature(equality.Equality, () => ['new']);
  dart.setLibraryUri(equality.Equality, I[1]);
  var _comparisonKey = dart.privateName(equality, "_comparisonKey");
  var _inner = dart.privateName(equality, "_inner");
  var _as = dart.privateName(dart_rti, "_as");
  var _is = dart.privateName(dart_rti, "_is");
  equality.EqualityBy = class EqualityBy extends core.Object {
    static ['_#new#tearOff'](E, F, comparisonKey, inner = C[0] || CT.C0) {
      return new equality.EqualityBy.new(dart_rti.instanceType(this)[_bind](E)[_bind](F)[_eval]("collection__src__equality|EqualityBy<1,2>"), comparisonKey, inner);
    }
    equals(e1, e2) {
      let t$360, t$360$;
      dart_rti.instanceType(this)[_eval]("EqualityBy.E")[_as](e1);
      dart_rti.instanceType(this)[_eval]("EqualityBy.E")[_as](e2);
      return this[_inner].equals((t$360 = e1, this[_comparisonKey](t$360)), (t$360$ = e2, this[_comparisonKey](t$360$)));
    }
    hash(e) {
      let t$360;
      dart_rti.instanceType(this)[_eval]("EqualityBy.E")[_as](e);
      return this[_inner].hash((t$360 = e, this[_comparisonKey](t$360)));
    }
    isValidKey(o) {
      let t$360;
      if (dart_rti.instanceType(this)[_eval]("EqualityBy.E")[_is](o)) {
        let value = (t$360 = o, this[_comparisonKey](t$360));
        return this[_inner].isValidKey(value);
      }
      return false;
    }
  };
  (equality.EqualityBy.new = function(_ti, comparisonKey, inner = C[0] || CT.C0) {
    this.$ti = this.$ti || _ti || dart.getReifiedType(this);
    this[_comparisonKey] = comparisonKey;
    this[_inner] = inner;
    ;
  }).prototype = equality.EqualityBy.prototype;
  dart.addRtiResources(equality.EqualityBy, ["collection__src__equality|EqualityBy", "collection__src__equality|Equality"]);
  dart.setMethodSignature(equality.EqualityBy, () => dart.global.Object.setPrototypeOf({
    equals: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|bool(core|Object?,core|Object?)", true),
    hash: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|int(core|Object?)", true),
    isValidKey: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|bool(core|Object?)", true)
  }, dart.getMethods(dart.global.Object.getPrototypeOf(equality.EqualityBy))));
  dart.setLibraryUri(equality.EqualityBy, I[1]);
  dart.setFieldSignature(equality.EqualityBy, () => dart.global.Object.setPrototypeOf({
    [_comparisonKey]: {
      type: _ti => _ti[_eval]("EqualityBy.F(EqualityBy.E)"),
      isConst: false,
      isFinal: true
    },
    [_inner]: {
      type: _ti => _ti[_eval]("collection__src__equality|Equality<EqualityBy.F>"),
      isConst: false,
      isFinal: true,
      libraryUri: I[1]
    }
  }, dart.getFields(dart.global.Object.getPrototypeOf(equality.EqualityBy))));
  equality.DefaultEquality = class DefaultEquality extends core.Object {
    static ['_#new#tearOff'](E) {
      return new equality.DefaultEquality.new(dart_rti.instanceType(this)[_bind](E)[_eval]("collection__src__equality|DefaultEquality<1>"));
    }
    equals(e1, e2) {
      return dart.equals(e1, e2);
    }
    hash(e) {
      return dart.hashCode(e);
    }
    isValidKey(o) {
      return true;
    }
  };
  (equality.DefaultEquality.new = function(_ti) {
    this.$ti = this.$ti || _ti || dart.getReifiedType(this);
    ;
  }).prototype = equality.DefaultEquality.prototype;
  dart.addRtiResources(equality.DefaultEquality, ["collection__src__equality|DefaultEquality", "collection__src__equality|Equality"]);
  dart.setMethodSignature(equality.DefaultEquality, () => dart.global.Object.setPrototypeOf({
    equals: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|bool(core|Object?,core|Object?)", true),
    hash: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|int(core|Object?)", true),
    isValidKey: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|bool(core|Object?)", true)
  }, dart.getMethods(dart.global.Object.getPrototypeOf(equality.DefaultEquality))));
  dart.setLibraryUri(equality.DefaultEquality, I[1]);
  equality.IdentityEquality = class IdentityEquality extends core.Object {
    static ['_#new#tearOff'](E) {
      return new equality.IdentityEquality.new(dart_rti.instanceType(this)[_bind](E)[_eval]("collection__src__equality|IdentityEquality<1>"));
    }
    equals(e1, e2) {
      dart_rti.instanceType(this)[_eval]("IdentityEquality.E")[_as](e1);
      dart_rti.instanceType(this)[_eval]("IdentityEquality.E")[_as](e2);
      return core.identical(e1, e2);
    }
    hash(e) {
      dart_rti.instanceType(this)[_eval]("IdentityEquality.E")[_as](e);
      return core.identityHashCode(e);
    }
    isValidKey(o) {
      return true;
    }
  };
  (equality.IdentityEquality.new = function(_ti) {
    this.$ti = this.$ti || _ti || dart.getReifiedType(this);
    ;
  }).prototype = equality.IdentityEquality.prototype;
  dart.addRtiResources(equality.IdentityEquality, ["collection__src__equality|IdentityEquality", "collection__src__equality|Equality"]);
  dart.setMethodSignature(equality.IdentityEquality, () => dart.global.Object.setPrototypeOf({
    equals: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|bool(core|Object?,core|Object?)", true),
    hash: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|int(core|Object?)", true),
    isValidKey: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|bool(core|Object?)", true)
  }, dart.getMethods(dart.global.Object.getPrototypeOf(equality.IdentityEquality))));
  dart.setLibraryUri(equality.IdentityEquality, I[1]);
  var _elementEquality = dart.privateName(equality, "IterableEquality._elementEquality");
  var _elementEquality$ = dart.privateName(equality, "_elementEquality");
  equality.IterableEquality = class IterableEquality extends core.Object {
    get [_elementEquality$]() {
      return this[_elementEquality];
    }
    set [_elementEquality$](value) {
      super[_elementEquality$] = value;
    }
    static ['_#new#tearOff'](E, elementEquality = C[0] || CT.C0) {
      return new equality.IterableEquality.new(dart_rti.instanceType(this)[_bind](E)[_eval]("collection__src__equality|IterableEquality<1>"), elementEquality);
    }
    equals(elements1, elements2) {
      dart_rti.instanceType(this)[_eval]("core|Iterable<IterableEquality.E>?")[_as](elements1);
      dart_rti.instanceType(this)[_eval]("core|Iterable<IterableEquality.E>?")[_as](elements2);
      if (elements1 == elements2) return true;
      if (elements1 == null || elements2 == null) return false;
      let it1 = elements1[$iterator];
      let it2 = elements2[$iterator];
      while (true) {
        let hasNext = it1.moveNext();
        if (hasNext !== it2.moveNext()) return false;
        if (!hasNext) return true;
        if (!this[_elementEquality$].equals(it1.current, it2.current)) return false;
      }
    }
    hash(elements) {
      dart_rti.instanceType(this)[_eval]("core|Iterable<IterableEquality.E>?")[_as](elements);
      if (elements == null) return dart.hashCode(null);
      let hash = 0;
      for (let element of elements) {
        let c = this[_elementEquality$].hash(element);
        hash = (hash + c & 2147483647) >>> 0;
        hash = (hash + (hash << 10 >>> 0) & 2147483647) >>> 0;
        hash = (hash ^ hash[$rightShift](6)) >>> 0;
      }
      hash = (hash + (hash << 3 >>> 0) & 2147483647) >>> 0;
      hash = (hash ^ hash[$rightShift](11)) >>> 0;
      hash = (hash + (hash << 15 >>> 0) & 2147483647) >>> 0;
      return hash;
    }
    isValidKey(o) {
      return dart_rti.instanceType(this)[_eval]("core|Iterable<IterableEquality.E>")[_is](o);
    }
  };
  (equality.IterableEquality.new = function(_ti, elementEquality = C[0] || CT.C0) {
    this.$ti = this.$ti || _ti || dart.getReifiedType(this);
    this[_elementEquality] = elementEquality;
    ;
  }).prototype = equality.IterableEquality.prototype;
  dart.addRtiResources(equality.IterableEquality, ["collection__src__equality|IterableEquality", "collection__src__equality|Equality"]);
  dart.setMethodSignature(equality.IterableEquality, () => dart.global.Object.setPrototypeOf({
    equals: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|bool(core|Object?,core|Object?)", true),
    hash: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|int(core|Object?)", true),
    isValidKey: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|bool(core|Object?)", true)
  }, dart.getMethods(dart.global.Object.getPrototypeOf(equality.IterableEquality))));
  dart.setLibraryUri(equality.IterableEquality, I[1]);
  dart.setFieldSignature(equality.IterableEquality, () => dart.global.Object.setPrototypeOf({[_elementEquality$]: {
      type: _ti => _ti[_eval]("collection__src__equality|Equality<IterableEquality.E?>"),
      isConst: false,
      isFinal: true,
      libraryUri: I[1]
    }}, dart.getFields(dart.global.Object.getPrototypeOf(equality.IterableEquality))));
  var _elementEquality$0 = dart.privateName(equality, "ListEquality._elementEquality");
  equality.ListEquality = class ListEquality extends core.Object {
    get [_elementEquality$]() {
      return this[_elementEquality$0];
    }
    set [_elementEquality$](value) {
      super[_elementEquality$] = value;
    }
    static ['_#new#tearOff'](E, elementEquality = C[0] || CT.C0) {
      return new equality.ListEquality.new(dart_rti.instanceType(this)[_bind](E)[_eval]("collection__src__equality|ListEquality<1>"), elementEquality);
    }
    equals(list1, list2) {
      dart_rti.instanceType(this)[_eval]("core|List<ListEquality.E>?")[_as](list1);
      dart_rti.instanceType(this)[_eval]("core|List<ListEquality.E>?")[_as](list2);
      if (list1 == list2) return true;
      if (list1 == null || list2 == null) return false;
      let length = list1[$length];
      if (length !== list2[$length]) return false;
      for (let i = 0; i < length; i = i + 1) {
        if (!this[_elementEquality$].equals(list1[$_get](i), list2[$_get](i))) return false;
      }
      return true;
    }
    hash(list) {
      dart_rti.instanceType(this)[_eval]("core|List<ListEquality.E>?")[_as](list);
      if (list == null) return dart.hashCode(null);
      let hash = 0;
      for (let i = 0; i < list[$length]; i = i + 1) {
        let c = this[_elementEquality$].hash(list[$_get](i));
        hash = (hash + c & 2147483647) >>> 0;
        hash = (hash + (hash << 10 >>> 0) & 2147483647) >>> 0;
        hash = (hash ^ hash[$rightShift](6)) >>> 0;
      }
      hash = (hash + (hash << 3 >>> 0) & 2147483647) >>> 0;
      hash = (hash ^ hash[$rightShift](11)) >>> 0;
      hash = (hash + (hash << 15 >>> 0) & 2147483647) >>> 0;
      return hash;
    }
    isValidKey(o) {
      return dart_rti.instanceType(this)[_eval]("core|List<ListEquality.E>")[_is](o);
    }
  };
  (equality.ListEquality.new = function(_ti, elementEquality = C[0] || CT.C0) {
    this.$ti = this.$ti || _ti || dart.getReifiedType(this);
    this[_elementEquality$0] = elementEquality;
    ;
  }).prototype = equality.ListEquality.prototype;
  dart.addRtiResources(equality.ListEquality, ["collection__src__equality|ListEquality", "collection__src__equality|Equality"]);
  dart.setMethodSignature(equality.ListEquality, () => dart.global.Object.setPrototypeOf({
    equals: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|bool(core|Object?,core|Object?)", true),
    hash: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|int(core|Object?)", true),
    isValidKey: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|bool(core|Object?)", true)
  }, dart.getMethods(dart.global.Object.getPrototypeOf(equality.ListEquality))));
  dart.setLibraryUri(equality.ListEquality, I[1]);
  dart.setFieldSignature(equality.ListEquality, () => dart.global.Object.setPrototypeOf({[_elementEquality$]: {
      type: _ti => _ti[_eval]("collection__src__equality|Equality<ListEquality.E>"),
      isConst: false,
      isFinal: true,
      libraryUri: I[1]
    }}, dart.getFields(dart.global.Object.getPrototypeOf(equality.ListEquality))));
  var _elementEquality$1 = dart.privateName(equality, "_UnorderedEquality._elementEquality");
  equality._UnorderedEquality = class _UnorderedEquality extends core.Object {
    get [_elementEquality$]() {
      return this[_elementEquality$1];
    }
    set [_elementEquality$](value) {
      super[_elementEquality$] = value;
    }
    equals(elements1, elements2) {
      let t$360;
      dart_rti.instanceType(this)[_eval]("_UnorderedEquality.T?")[_as](elements1);
      dart_rti.instanceType(this)[_eval]("_UnorderedEquality.T?")[_as](elements2);
      if (elements1 == elements2) return true;
      if (elements1 == null || elements2 == null) return false;
      let counts = collection.HashMap.new(dart_rti.instanceType(this)[_eval]("collection|HashMap<_UnorderedEquality.E,core|int>"), {equals: dart_rti.instanceType(this)[_eval]("core|bool(_UnorderedEquality.E,_UnorderedEquality.E)")[_as](dart.bind(this[_elementEquality$], 'equals')), hashCode: dart_rti.instanceType(this)[_eval]("core|int(_UnorderedEquality.E)")[_as](dart.bind(this[_elementEquality$], 'hash')), isValidKey: dart.bind(this[_elementEquality$], 'isValidKey')});
      let length = 0;
      for (let e of elements1) {
        let count = (t$360 = counts[$_get](e), t$360 == null ? 0 : t$360);
        counts[$_set](e, count + 1);
        length = length + 1;
      }
      for (let e$ of elements2) {
        let count$ = counts[$_get](e$);
        if (count$ == null || count$ === 0) return false;
        counts[$_set](e$, dart.notNull(count$) - 1);
        length = length - 1;
      }
      return length === 0;
    }
    hash(elements) {
      dart_rti.instanceType(this)[_eval]("_UnorderedEquality.T?")[_as](elements);
      if (elements == null) return dart.hashCode(null);
      let hash = 0;
      for (let element of elements) {
        let c = this[_elementEquality$].hash(element);
        hash = (hash + c & 2147483647) >>> 0;
      }
      hash = (hash + (hash << 3 >>> 0) & 2147483647) >>> 0;
      hash = (hash ^ hash[$rightShift](11)) >>> 0;
      hash = (hash + (hash << 15 >>> 0) & 2147483647) >>> 0;
      return hash;
    }
  };
  (equality._UnorderedEquality.new = function(_ti, _elementEquality) {
    this.$ti = this.$ti || _ti || dart.getReifiedType(this);
    this[_elementEquality$1] = _elementEquality;
    ;
  }).prototype = equality._UnorderedEquality.prototype;
  dart.addRtiResources(equality._UnorderedEquality, ["collection__src__equality|_UnorderedEquality", "collection__src__equality|Equality"]);
  dart.setMethodSignature(equality._UnorderedEquality, () => dart.global.Object.setPrototypeOf({
    equals: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|bool(core|Object?,core|Object?)", true),
    hash: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|int(core|Object?)", true)
  }, dart.getMethods(dart.global.Object.getPrototypeOf(equality._UnorderedEquality))));
  dart.setLibraryUri(equality._UnorderedEquality, I[1]);
  dart.setFieldSignature(equality._UnorderedEquality, () => dart.global.Object.setPrototypeOf({[_elementEquality$]: {
      type: _ti => _ti[_eval]("collection__src__equality|Equality<_UnorderedEquality.E>"),
      isConst: false,
      isFinal: true,
      libraryUri: I[1]
    }}, dart.getFields(dart.global.Object.getPrototypeOf(equality._UnorderedEquality))));
  equality.UnorderedIterableEquality = class UnorderedIterableEquality extends equality._UnorderedEquality {
    static ['_#new#tearOff'](E, elementEquality = C[0] || CT.C0) {
      return new equality.UnorderedIterableEquality.new(dart_rti.instanceType(this)[_bind](E)[_eval]("collection__src__equality|UnorderedIterableEquality<1>"), elementEquality);
    }
    isValidKey(o) {
      return dart_rti.instanceType(this)[_eval]("core|Iterable<UnorderedIterableEquality.E>")[_is](o);
    }
  };
  (equality.UnorderedIterableEquality.new = function(_ti, elementEquality = C[0] || CT.C0) {
    this.$ti = this.$ti || _ti || dart.getReifiedType(this);
    dart.global.Object.getPrototypeOf(equality.UnorderedIterableEquality).new.call(this, null, elementEquality);
    ;
  }).prototype = equality.UnorderedIterableEquality.prototype;
  dart.addRtiResources(equality.UnorderedIterableEquality, ["collection__src__equality|UnorderedIterableEquality"]);
  dart.setMethodSignature(equality.UnorderedIterableEquality, () => dart.global.Object.setPrototypeOf({
    isValidKey: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|bool(core|Object?)", true)
  }, dart.getMethods(dart.global.Object.getPrototypeOf(equality.UnorderedIterableEquality))));
  dart.setLibraryUri(equality.UnorderedIterableEquality, I[1]);
  equality.SetEquality = class SetEquality extends equality._UnorderedEquality {
    static ['_#new#tearOff'](E, elementEquality = C[0] || CT.C0) {
      return new equality.SetEquality.new(dart_rti.instanceType(this)[_bind](E)[_eval]("collection__src__equality|SetEquality<1>"), elementEquality);
    }
    isValidKey(o) {
      return dart_rti.instanceType(this)[_eval]("core|Set<SetEquality.E>")[_is](o);
    }
  };
  (equality.SetEquality.new = function(_ti, elementEquality = C[0] || CT.C0) {
    this.$ti = this.$ti || _ti || dart.getReifiedType(this);
    dart.global.Object.getPrototypeOf(equality.SetEquality).new.call(this, null, elementEquality);
    ;
  }).prototype = equality.SetEquality.prototype;
  dart.addRtiResources(equality.SetEquality, ["collection__src__equality|SetEquality"]);
  dart.setMethodSignature(equality.SetEquality, () => dart.global.Object.setPrototypeOf({
    isValidKey: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|bool(core|Object?)", true)
  }, dart.getMethods(dart.global.Object.getPrototypeOf(equality.SetEquality))));
  dart.setLibraryUri(equality.SetEquality, I[1]);
  var _keyEquality = dart.privateName(equality, "_keyEquality");
  var _valueEquality = dart.privateName(equality, "_valueEquality");
  equality._MapEntry = class _MapEntry extends core.Object {
    static ['_#new#tearOff'](equality$, key, value) {
      return new equality._MapEntry.new(equality$, key, value);
    }
    get hashCode() {
      return (3 * this.equality[_keyEquality].hash(this.key) + 7 * this.equality[_valueEquality].hash(this.value) & 2147483647) >>> 0;
    }
    _equals(other) {
      if (other == null) return false;
      return dart_rti._Universe.eval(dart_rti._theUniverse(), "collection__src__equality|_MapEntry", true)[_is](other) && this.equality[_keyEquality].equals(this.key, other.key) && this.equality[_valueEquality].equals(this.value, other.value);
    }
  };
  (equality._MapEntry.new = function(equality, key, value) {
    this.equality = equality;
    this.key = key;
    this.value = value;
    ;
  }).prototype = equality._MapEntry.prototype;
  dart.addRtiResources(equality._MapEntry, ["collection__src__equality|_MapEntry"]);
  dart.setLibraryUri(equality._MapEntry, I[1]);
  dart.setFieldSignature(equality._MapEntry, () => dart.global.Object.setPrototypeOf({
    equality: {
      type: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "collection__src__equality|MapEquality<@,@>", true),
      isConst: false,
      isFinal: true,
      libraryUri: I[1]
    },
    key: {
      type: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|Object?", true),
      isConst: false,
      isFinal: true,
      libraryUri: I[2]
    },
    value: {
      type: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|Object?", true),
      isConst: false,
      isFinal: true,
      libraryUri: I[2]
    }
  }, dart.getFields(dart.global.Object.getPrototypeOf(equality._MapEntry))));
  dart.defineExtensionMethods(equality._MapEntry, ['_equals']);
  dart.defineExtensionAccessors(equality._MapEntry, ['hashCode']);
  var _keyEquality$ = dart.privateName(equality, "MapEquality._keyEquality");
  var _valueEquality$ = dart.privateName(equality, "MapEquality._valueEquality");
  equality.MapEquality = class MapEquality extends core.Object {
    get [_keyEquality]() {
      return this[_keyEquality$];
    }
    set [_keyEquality](value) {
      super[_keyEquality] = value;
    }
    get [_valueEquality]() {
      return this[_valueEquality$];
    }
    set [_valueEquality](value) {
      super[_valueEquality] = value;
    }
    static ['_#new#tearOff'](K, V, opts) {
      let keys = opts && 'keys' in opts ? opts.keys : C[0] || CT.C0;
      let values = opts && 'values' in opts ? opts.values : C[0] || CT.C0;
      return new equality.MapEquality.new(dart_rti.instanceType(this)[_bind](K)[_bind](V)[_eval]("collection__src__equality|MapEquality<1,2>"), {keys: keys, values: values});
    }
    equals(map1, map2) {
      let t$360;
      dart_rti.instanceType(this)[_eval]("core|Map<MapEquality.K,MapEquality.V>?")[_as](map1);
      dart_rti.instanceType(this)[_eval]("core|Map<MapEquality.K,MapEquality.V>?")[_as](map2);
      if (map1 == map2) return true;
      if (map1 == null || map2 == null) return false;
      let length = map1[$length];
      if (length !== map2[$length]) return false;
      let equalElementCounts = new _js_helper.LinkedMap.new(dart_rti._Universe.eval(dart_rti._theUniverse(), "_js_helper|LinkedMap<collection__src__equality|_MapEntry,core|int>", true));
      for (let key of map1[$keys]) {
        let entry = new equality._MapEntry.new(this, key, map1[$_get](key));
        let count = (t$360 = equalElementCounts[$_get](entry), t$360 == null ? 0 : t$360);
        equalElementCounts[$_set](entry, count + 1);
      }
      for (let key$ of map2[$keys]) {
        let entry$ = new equality._MapEntry.new(this, key$, map2[$_get](key$));
        let count$ = equalElementCounts[$_get](entry$);
        if (count$ == null || count$ === 0) return false;
        equalElementCounts[$_set](entry$, dart.notNull(count$) - 1);
      }
      return true;
    }
    hash(map) {
      dart_rti.instanceType(this)[_eval]("core|Map<MapEquality.K,MapEquality.V>?")[_as](map);
      if (map == null) return dart.hashCode(null);
      let hash = 0;
      for (let key of map[$keys]) {
        let keyHash = this[_keyEquality].hash(key);
        let valueHash = this[_valueEquality].hash(dart_rti.instanceType(this)[_eval]("MapEquality.V")[_as](map[$_get](key)));
        hash = (hash + 3 * keyHash + 7 * valueHash & 2147483647) >>> 0;
      }
      hash = (hash + (hash << 3 >>> 0) & 2147483647) >>> 0;
      hash = (hash ^ hash[$rightShift](11)) >>> 0;
      hash = (hash + (hash << 15 >>> 0) & 2147483647) >>> 0;
      return hash;
    }
    isValidKey(o) {
      return dart_rti.instanceType(this)[_eval]("core|Map<MapEquality.K,MapEquality.V>")[_is](o);
    }
  };
  (equality.MapEquality.new = function(_ti, opts) {
    let keys = opts && 'keys' in opts ? opts.keys : C[0] || CT.C0;
    let values = opts && 'values' in opts ? opts.values : C[0] || CT.C0;
    this.$ti = this.$ti || _ti || dart.getReifiedType(this);
    this[_keyEquality$] = keys;
    this[_valueEquality$] = values;
    ;
  }).prototype = equality.MapEquality.prototype;
  dart.addRtiResources(equality.MapEquality, ["collection__src__equality|MapEquality", "collection__src__equality|Equality"]);
  dart.setMethodSignature(equality.MapEquality, () => dart.global.Object.setPrototypeOf({
    equals: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|bool(core|Object?,core|Object?)", true),
    hash: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|int(core|Object?)", true),
    isValidKey: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|bool(core|Object?)", true)
  }, dart.getMethods(dart.global.Object.getPrototypeOf(equality.MapEquality))));
  dart.setLibraryUri(equality.MapEquality, I[1]);
  dart.setFieldSignature(equality.MapEquality, () => dart.global.Object.setPrototypeOf({
    [_keyEquality]: {
      type: _ti => _ti[_eval]("collection__src__equality|Equality<MapEquality.K>"),
      isConst: false,
      isFinal: true,
      libraryUri: I[1]
    },
    [_valueEquality]: {
      type: _ti => _ti[_eval]("collection__src__equality|Equality<MapEquality.V>"),
      isConst: false,
      isFinal: true,
      libraryUri: I[1]
    }
  }, dart.getFields(dart.global.Object.getPrototypeOf(equality.MapEquality))));
  var _equalities = dart.privateName(equality, "MultiEquality._equalities");
  var _equalities$ = dart.privateName(equality, "_equalities");
  equality.MultiEquality = class MultiEquality extends core.Object {
    get [_equalities$]() {
      return this[_equalities];
    }
    set [_equalities$](value) {
      super[_equalities$] = value;
    }
    static ['_#new#tearOff'](E, equalities) {
      return new equality.MultiEquality.new(dart_rti.instanceType(this)[_bind](E)[_eval]("collection__src__equality|MultiEquality<1>"), equalities);
    }
    equals(e1, e2) {
      dart_rti.instanceType(this)[_eval]("MultiEquality.E")[_as](e1);
      dart_rti.instanceType(this)[_eval]("MultiEquality.E")[_as](e2);
      for (let eq of this[_equalities$]) {
        if (eq.isValidKey(e1)) return eq.isValidKey(e2) && eq.equals(e1, e2);
      }
      return false;
    }
    hash(e) {
      dart_rti.instanceType(this)[_eval]("MultiEquality.E")[_as](e);
      for (let eq of this[_equalities$]) {
        if (eq.isValidKey(e)) return eq.hash(e);
      }
      return 0;
    }
    isValidKey(o) {
      for (let eq of this[_equalities$]) {
        if (eq.isValidKey(o)) return true;
      }
      return false;
    }
  };
  (equality.MultiEquality.new = function(_ti, equalities) {
    this.$ti = this.$ti || _ti || dart.getReifiedType(this);
    this[_equalities] = equalities;
    ;
  }).prototype = equality.MultiEquality.prototype;
  dart.addRtiResources(equality.MultiEquality, ["collection__src__equality|MultiEquality", "collection__src__equality|Equality"]);
  dart.setMethodSignature(equality.MultiEquality, () => dart.global.Object.setPrototypeOf({
    equals: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|bool(core|Object?,core|Object?)", true),
    hash: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|int(core|Object?)", true),
    isValidKey: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|bool(core|Object?)", true)
  }, dart.getMethods(dart.global.Object.getPrototypeOf(equality.MultiEquality))));
  dart.setLibraryUri(equality.MultiEquality, I[1]);
  dart.setFieldSignature(equality.MultiEquality, () => dart.global.Object.setPrototypeOf({[_equalities$]: {
      type: _ti => _ti[_eval]("core|Iterable<collection__src__equality|Equality<MultiEquality.E>>"),
      isConst: false,
      isFinal: true,
      libraryUri: I[2]
    }}, dart.getFields(dart.global.Object.getPrototypeOf(equality.MultiEquality))));
  var _base = dart.privateName(equality, "DeepCollectionEquality._base");
  var _unordered = dart.privateName(equality, "DeepCollectionEquality._unordered");
  var _base$ = dart.privateName(equality, "_base");
  var _unordered$ = dart.privateName(equality, "_unordered");
  equality.DeepCollectionEquality = class DeepCollectionEquality extends core.Object {
    get [_base$]() {
      return this[_base];
    }
    set [_base$](value) {
      super[_base$] = value;
    }
    get [_unordered$]() {
      return this[_unordered];
    }
    set [_unordered$](value) {
      super[_unordered$] = value;
    }
    static ['_#new#tearOff'](base = C[0] || CT.C0) {
      return new equality.DeepCollectionEquality.new(base);
    }
    static ['_#unordered#tearOff'](base = C[0] || CT.C0) {
      return new equality.DeepCollectionEquality.unordered(base);
    }
    equals(e1, e2) {
      if (dart_rti._Universe.eval(dart_rti._theUniverse(), "core|Set<@>", true)[_is](e1)) {
        return dart_rti._Universe.eval(dart_rti._theUniverse(), "core|Set<@>", true)[_is](e2) && new equality.SetEquality.new(dart_rti._Universe.eval(dart_rti._theUniverse(), "collection__src__equality|SetEquality<@>", true), this).equals(e1, e2);
      }
      if (dart_rti._Universe.eval(dart_rti._theUniverse(), "core|Map<@,@>", true)[_is](e1)) {
        return dart_rti._Universe.eval(dart_rti._theUniverse(), "core|Map<@,@>", true)[_is](e2) && new equality.MapEquality.new(dart_rti._Universe.eval(dart_rti._theUniverse(), "collection__src__equality|MapEquality<@,@>", true), {keys: this, values: this}).equals(e1, e2);
      }
      if (!this[_unordered$]) {
        if (dart_rti._Universe.eval(dart_rti._theUniverse(), "core|List<@>", true)[_is](e1)) {
          return dart_rti._Universe.eval(dart_rti._theUniverse(), "core|List<@>", true)[_is](e2) && new equality.ListEquality.new(dart_rti._Universe.eval(dart_rti._theUniverse(), "collection__src__equality|ListEquality<@>", true), this).equals(e1, e2);
        }
        if (dart_rti._Universe.eval(dart_rti._theUniverse(), "core|Iterable<@>", true)[_is](e1)) {
          return dart_rti._Universe.eval(dart_rti._theUniverse(), "core|Iterable<@>", true)[_is](e2) && new equality.IterableEquality.new(dart_rti._Universe.eval(dart_rti._theUniverse(), "collection__src__equality|IterableEquality<@>", true), this).equals(e1, e2);
        }
      } else if (dart_rti._Universe.eval(dart_rti._theUniverse(), "core|Iterable<@>", true)[_is](e1)) {
        if (dart_rti._Universe.eval(dart_rti._theUniverse(), "core|List<@>", true)[_is](e1) !== dart_rti._Universe.eval(dart_rti._theUniverse(), "core|List<@>", true)[_is](e2)) return false;
        return dart_rti._Universe.eval(dart_rti._theUniverse(), "core|Iterable<@>", true)[_is](e2) && new equality.UnorderedIterableEquality.new(dart_rti._Universe.eval(dart_rti._theUniverse(), "collection__src__equality|UnorderedIterableEquality<@>", true), this).equals(e1, e2);
      }
      return this[_base$].equals(e1, e2);
    }
    hash(o) {
      if (dart_rti._Universe.eval(dart_rti._theUniverse(), "core|Set<@>", true)[_is](o)) return new equality.SetEquality.new(dart_rti._Universe.eval(dart_rti._theUniverse(), "collection__src__equality|SetEquality<@>", true), this).hash(o);
      if (dart_rti._Universe.eval(dart_rti._theUniverse(), "core|Map<@,@>", true)[_is](o)) return new equality.MapEquality.new(dart_rti._Universe.eval(dart_rti._theUniverse(), "collection__src__equality|MapEquality<@,@>", true), {keys: this, values: this}).hash(o);
      if (!this[_unordered$]) {
        if (dart_rti._Universe.eval(dart_rti._theUniverse(), "core|List<@>", true)[_is](o)) return new equality.ListEquality.new(dart_rti._Universe.eval(dart_rti._theUniverse(), "collection__src__equality|ListEquality<@>", true), this).hash(o);
        if (dart_rti._Universe.eval(dart_rti._theUniverse(), "core|Iterable<@>", true)[_is](o)) return new equality.IterableEquality.new(dart_rti._Universe.eval(dart_rti._theUniverse(), "collection__src__equality|IterableEquality<@>", true), this).hash(o);
      } else if (dart_rti._Universe.eval(dart_rti._theUniverse(), "core|Iterable<@>", true)[_is](o)) {
        return new equality.UnorderedIterableEquality.new(dart_rti._Universe.eval(dart_rti._theUniverse(), "collection__src__equality|UnorderedIterableEquality<@>", true), this).hash(o);
      }
      return this[_base$].hash(o);
    }
    isValidKey(o) {
      return dart_rti._Universe.eval(dart_rti._theUniverse(), "core|Iterable<@>", true)[_is](o) || dart_rti._Universe.eval(dart_rti._theUniverse(), "core|Map<@,@>", true)[_is](o) || this[_base$].isValidKey(o);
    }
  };
  (equality.DeepCollectionEquality.new = function(base = C[0] || CT.C0) {
    this[_base] = base;
    this[_unordered] = false;
    ;
  }).prototype = equality.DeepCollectionEquality.prototype;
  (equality.DeepCollectionEquality.unordered = function(base = C[0] || CT.C0) {
    this[_base] = base;
    this[_unordered] = true;
    ;
  }).prototype = equality.DeepCollectionEquality.prototype;
  dart.addRtiResources(equality.DeepCollectionEquality, ["collection__src__equality|DeepCollectionEquality", "collection__src__equality|Equality"]);
  dart.setMethodSignature(equality.DeepCollectionEquality, () => dart.global.Object.setPrototypeOf({
    equals: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|bool(core|Object?,core|Object?)", true),
    hash: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|int(core|Object?)", true),
    isValidKey: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|bool(core|Object?)", true)
  }, dart.getMethods(dart.global.Object.getPrototypeOf(equality.DeepCollectionEquality))));
  dart.setLibraryUri(equality.DeepCollectionEquality, I[1]);
  dart.setFieldSignature(equality.DeepCollectionEquality, () => dart.global.Object.setPrototypeOf({
    [_base$]: {
      type: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "collection__src__equality|Equality<@>", true),
      isConst: false,
      isFinal: true,
      libraryUri: I[1]
    },
    [_unordered$]: {
      type: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|bool", true),
      isConst: false,
      isFinal: true,
      libraryUri: I[2]
    }
  }, dart.getFields(dart.global.Object.getPrototypeOf(equality.DeepCollectionEquality))));
  equality.CaseInsensitiveEquality = class CaseInsensitiveEquality extends core.Object {
    static ['_#new#tearOff']() {
      return new equality.CaseInsensitiveEquality.new();
    }
    equals(string1, string2) {
      dart_rti._Universe.eval(dart_rti._theUniverse(), "core|String", true)[_as](string1);
      dart_rti._Universe.eval(dart_rti._theUniverse(), "core|String", true)[_as](string2);
      return comparators.equalsIgnoreAsciiCase(string1, string2);
    }
    hash(string) {
      dart_rti._Universe.eval(dart_rti._theUniverse(), "core|String", true)[_as](string);
      return comparators.hashIgnoreAsciiCase(string);
    }
    isValidKey(object) {
      return typeof object == 'string';
    }
  };
  (equality.CaseInsensitiveEquality.new = function() {
    ;
  }).prototype = equality.CaseInsensitiveEquality.prototype;
  dart.addRtiResources(equality.CaseInsensitiveEquality, ["collection__src__equality|CaseInsensitiveEquality", "collection__src__equality|Equality"]);
  dart.setMethodSignature(equality.CaseInsensitiveEquality, () => dart.global.Object.setPrototypeOf({
    equals: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|bool(core|Object?,core|Object?)", true),
    hash: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|int(core|Object?)", true),
    isValidKey: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|bool(core|Object?)", true)
  }, dart.getMethods(dart.global.Object.getPrototypeOf(equality.CaseInsensitiveEquality))));
  dart.setLibraryUri(equality.CaseInsensitiveEquality, I[1]);
  dart.defineLazy(equality, {
    /*equality._hashMask*/get _hashMask() {
      return 2147483647;
    }
  });
  dart.moduleConstCaches.set("packages/collection/src/comparators", C);
  dart_rti._Universe.addRules(dart.typeUniverse, JSON.parse('{"collection__src__equality|DefaultEquality":{"DefaultEquality.E":"1","Equality.E":"1","collection__src__equality|Equality":["1"]},"collection__src__equality|Equality":{"Equality.E":"1"},"collection__src__equality|EqualityBy":{"EqualityBy.E":"1","EqualityBy.F":"2","Equality.E":"1","collection__src__equality|Equality":["1"]},"core|int":{"core|num":[],"Comparable.T":"core|num","core|Comparable":["core|num"]},"core|num":{"Comparable.T":"core|num","core|Comparable":["core|num"]},"core|Comparable":{"Comparable.T":"1"},"collection__src__equality|IdentityEquality":{"IdentityEquality.E":"1","Equality.E":"1","collection__src__equality|Equality":["1"]},"collection__src__equality|IterableEquality":{"IterableEquality.E":"1","Equality.E":"core|Iterable<1>","collection__src__equality|Equality":["core|Iterable<1>"]},"core|Iterable":{"Iterable.E":"1"},"collection__src__equality|ListEquality":{"ListEquality.E":"1","Equality.E":"core|List<1>","collection__src__equality|Equality":["core|List<1>"]},"core|List":{"List.E":"1","Iterable.E":"1","core|Iterable":["1"],"_ListIterable.E":"1","core|_ListIterable":["1"],"EfficientLengthIterable.T":"1","_internal|EfficientLengthIterable":["1"],"HideEfficientLengthIterable.T":"1","_internal|HideEfficientLengthIterable":["1"]},"core|_ListIterable":{"_ListIterable.E":"1","EfficientLengthIterable.T":"1","_internal|EfficientLengthIterable":["1"],"HideEfficientLengthIterable.T":"1","_internal|HideEfficientLengthIterable":["1"],"Iterable.E":"1","core|Iterable":["1"]},"_internal|EfficientLengthIterable":{"EfficientLengthIterable.T":"1","Iterable.E":"1","core|Iterable":["1"]},"_internal|HideEfficientLengthIterable":{"HideEfficientLengthIterable.T":"1","Iterable.E":"1","core|Iterable":["1"]},"collection|HashMap":{"HashMap.K":"1","HashMap.V":"2","Map.K":"1","Map.V":"2","core|Map":["1","2"]},"core|Map":{"Map.K":"1","Map.V":"2"},"collection__src__equality|UnorderedIterableEquality":{"UnorderedIterableEquality.E":"1","_UnorderedEquality.E":"1","_UnorderedEquality.T":"core|Iterable<1>","collection__src__equality|_UnorderedEquality":["1","core|Iterable<1>"],"Equality.E":"core|Iterable<1>","collection__src__equality|Equality":["core|Iterable<1>"]},"collection__src__equality|_UnorderedEquality":{"_UnorderedEquality.E":"1","_UnorderedEquality.T":"2","Equality.E":"2","collection__src__equality|Equality":["2"]},"collection__src__equality|SetEquality":{"SetEquality.E":"1","_UnorderedEquality.E":"1","_UnorderedEquality.T":"core|Set<1>","collection__src__equality|_UnorderedEquality":["1","core|Set<1>"],"Equality.E":"core|Set<1>","collection__src__equality|Equality":["core|Set<1>"]},"core|Set":{"Set.E":"1","Iterable.E":"1","core|Iterable":["1"],"_SetIterable.E":"1","core|_SetIterable":["1"],"EfficientLengthIterable.T":"1","_internal|EfficientLengthIterable":["1"],"HideEfficientLengthIterable.T":"1","_internal|HideEfficientLengthIterable":["1"]},"core|_SetIterable":{"_SetIterable.E":"1","EfficientLengthIterable.T":"1","_internal|EfficientLengthIterable":["1"],"HideEfficientLengthIterable.T":"1","_internal|HideEfficientLengthIterable":["1"],"Iterable.E":"1","core|Iterable":["1"]},"collection__src__equality|MapEquality":{"MapEquality.K":"1","MapEquality.V":"2","Equality.E":"core|Map<1,2>","collection__src__equality|Equality":["core|Map<1,2>"]},"_js_helper|LinkedMap":{"LinkedMap.K":"1","LinkedMap.V":"2","InternalMap.K":"1","InternalMap.V":"2","_js_helper|InternalMap":["1","2"],"MapBase.K":"1","MapBase.V":"2","collection|MapBase":["1","2"],"LinkedHashMap.K":"1","LinkedHashMap.V":"2","collection|LinkedHashMap":["1","2"],"HashMap.K":"1","HashMap.V":"2","collection|HashMap":["1","2"],"Map.K":"1","Map.V":"2","core|Map":["1","2"]},"_js_helper|InternalMap":{"InternalMap.K":"1","InternalMap.V":"2","MapBase.K":"1","MapBase.V":"2","collection|MapBase":["1","2"],"LinkedHashMap.K":"1","LinkedHashMap.V":"2","collection|LinkedHashMap":["1","2"],"HashMap.K":"1","HashMap.V":"2","collection|HashMap":["1","2"],"Map.K":"1","Map.V":"2","core|Map":["1","2"]},"collection|MapBase":{"MapBase.K":"1","MapBase.V":"2","Map.K":"1","Map.V":"2","core|Map":["1","2"]},"collection|LinkedHashMap":{"LinkedHashMap.K":"1","LinkedHashMap.V":"2","Map.K":"1","Map.V":"2","core|Map":["1","2"]},"collection__src__equality|MultiEquality":{"MultiEquality.E":"1","Equality.E":"1","collection__src__equality|Equality":["1"]},"core|String":{"Comparable.T":"core|String","core|Comparable":["core|String"],"core|Pattern":[]},"collection__src__equality|DeepCollectionEquality":{"Equality.E":"@","collection__src__equality|Equality":["@"]},"collection__src__equality|CaseInsensitiveEquality":{"Equality.E":"core|String","collection__src__equality|Equality":["core|String"]}}'));
  dart.trackLibraries("packages/collection/src/comparators", {
    "package:collection/src/comparators.dart": comparators,
    "package:collection/src/equality.dart": equality
  }, {
  }, '{"version":3,"sourceRoot":"","sources":["comparators.dart","equality.dart"],"names":[],"mappings":"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","file":"comparators.ddc.js"}');
  // Exports:
  return {
    src__comparators: comparators,
    src__equality: equality
  };
}));

//# sourceMappingURL=comparators.ddc.js.map
