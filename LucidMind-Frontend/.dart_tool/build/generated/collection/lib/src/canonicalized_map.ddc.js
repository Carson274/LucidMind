// Generated by DDC, the Dart Development Compiler (to JavaScript).
// Version: 3.7.2 (stable) (Tue Mar 11 04:27:50 2025 -0700) on "macos_arm64"
// Module: packages/collection/src/canonicalized_map
// Flags: soundNullSafety(true), enableAsserts(true)
define(['dart_sdk'], (function load__packages__collection__src__canonicalized_map(dart_sdk) {
  'use strict';
  const dart_rti = dart_sdk.dart_rti;
  const core = dart_sdk.core;
  const _js_helper = dart_sdk._js_helper;
  const collection = dart_sdk.collection;
  const _interceptors = dart_sdk._interceptors;
  const _internal = dart_sdk._internal;
  const dart = dart_sdk.dart;
  const dartx = dart_sdk.dartx;
  var canonicalized_map = Object.create(dart.library);
  var wrappers = Object.create(dart.library);
  var unmodifiable_wrappers = Object.create(dart.library);
  var empty_unmodifiable_set = Object.create(dart.library);
  var $addAll = dartx.addAll;
  var $_get = dartx._get;
  var $_set = dartx._set;
  var $forEach = dartx.forEach;
  var $map = dartx.map;
  var $addEntries = dartx.addEntries;
  var $cast = dartx.cast;
  var $clear = dartx.clear;
  var $containsKey = dartx.containsKey;
  var $values = dartx.values;
  var $any = dartx.any;
  var $entries = dartx.entries;
  var $isEmpty = dartx.isEmpty;
  var $isNotEmpty = dartx.isNotEmpty;
  var $length = dartx.length;
  var $putIfAbsent = dartx.putIfAbsent;
  var $remove = dartx.remove;
  var $removeWhere = dartx.removeWhere;
  var $update = dartx.update;
  var $updateAll = dartx.updateAll;
  var $containsValue = dartx.containsValue;
  var $keys = dartx.keys;
  var $contains = dartx.contains;
  var $elementAt = dartx.elementAt;
  var $every = dartx.every;
  var $expand = dartx.expand;
  var $first = dartx.first;
  var $firstWhere = dartx.firstWhere;
  var $fold = dartx.fold;
  var $followedBy = dartx.followedBy;
  var $iterator = dartx.iterator;
  var $join = dartx.join;
  var $last = dartx.last;
  var $lastWhere = dartx.lastWhere;
  var $reduce = dartx.reduce;
  var $single = dartx.single;
  var $singleWhere = dartx.singleWhere;
  var $skip = dartx.skip;
  var $skipWhile = dartx.skipWhile;
  var $take = dartx.take;
  var $takeWhile = dartx.takeWhile;
  var $toList = dartx.toList;
  var $toSet = dartx.toSet;
  var $where = dartx.where;
  var $whereType = dartx.whereType;
  var $toString = dartx.toString;
  var $plus = dartx['+'];
  var $add = dartx.add;
  var $asMap = dartx.asMap;
  var $fillRange = dartx.fillRange;
  var $getRange = dartx.getRange;
  var $indexOf = dartx.indexOf;
  var $indexWhere = dartx.indexWhere;
  var $insert = dartx.insert;
  var $insertAll = dartx.insertAll;
  var $lastIndexOf = dartx.lastIndexOf;
  var $lastIndexWhere = dartx.lastIndexWhere;
  var $removeAt = dartx.removeAt;
  var $removeLast = dartx.removeLast;
  var $removeRange = dartx.removeRange;
  var $replaceRange = dartx.replaceRange;
  var $retainWhere = dartx.retainWhere;
  var $reversed = dartx.reversed;
  var $setAll = dartx.setAll;
  var $setRange = dartx.setRange;
  var $shuffle = dartx.shuffle;
  var $sort = dartx.sort;
  var $sublist = dartx.sublist;
  dart._checkModuleNullSafetyMode(true);
  const CT = Object.create({
    _: () => (C, CT)
  });
  dart.defineLazy(CT, {
    get C0() {
      return C[0] = dart.const(new _js_helper.PrivateSymbol.new('_base', _base$5));
    }
  });
  var C = [void 0];
  var I = [
    "package:collection/src/canonicalized_map.dart",
    "dart:core",
    "package:collection/src/wrappers.dart",
    "dart:collection",
    "package:collection/src/unmodifiable_wrappers.dart",
    "package:collection/src/empty_unmodifiable_set.dart"
  ];
  var _base = dart.privateName(canonicalized_map, "_base");
  var _eval = dart.privateName(dart_rti, "_eval");
  var _canonicalize = dart.privateName(canonicalized_map, "_canonicalize");
  var _isValidKeyFn = dart.privateName(canonicalized_map, "_isValidKeyFn");
  var _bind = dart.privateName(dart_rti, "_bind");
  var _isValidKey = dart.privateName(canonicalized_map, "_isValidKey");
  var _as = dart.privateName(dart_rti, "_as");
  var _is = dart.privateName(dart_rti, "_is");
  canonicalized_map.CanonicalizedMap = class CanonicalizedMap extends core.Object {
    static ['_#new#tearOff'](C, K, V, canonicalize, opts) {
      let isValidKey = opts && 'isValidKey' in opts ? opts.isValidKey : null;
      return new canonicalized_map.CanonicalizedMap.new(dart_rti.instanceType(this)[_bind](C)[_bind](K)[_bind](V)[_eval]("collection__src__canonicalized_map|CanonicalizedMap<1,2,3>"), canonicalize, {isValidKey: isValidKey});
    }
    static ['_#from#tearOff'](C, K, V, other, canonicalize, opts) {
      let isValidKey = opts && 'isValidKey' in opts ? opts.isValidKey : null;
      return new canonicalized_map.CanonicalizedMap.from(dart_rti.instanceType(this)[_bind](C)[_bind](K)[_bind](V)[_eval]("collection__src__canonicalized_map|CanonicalizedMap<1,2,3>"), other, canonicalize, {isValidKey: isValidKey});
    }
    static ['_#fromEntries#tearOff'](C, K, V, entries, canonicalize, opts) {
      let isValidKey = opts && 'isValidKey' in opts ? opts.isValidKey : null;
      return new canonicalized_map.CanonicalizedMap.fromEntries(dart_rti.instanceType(this)[_bind](C)[_bind](K)[_bind](V)[_eval]("collection__src__canonicalized_map|CanonicalizedMap<1,2,3>"), entries, canonicalize, {isValidKey: isValidKey});
    }
    static ['_#_#tearOff'](C, K, V, _canonicalize, _isValidKeyFn, base) {
      return new canonicalized_map.CanonicalizedMap.__(dart_rti.instanceType(this)[_bind](C)[_bind](K)[_bind](V)[_eval]("collection__src__canonicalized_map|CanonicalizedMap<1,2,3>"), _canonicalize, _isValidKeyFn, base);
    }
    copy() {
      return new canonicalized_map.CanonicalizedMap.__(dart_rti.instanceType(this)[_eval]("collection__src__canonicalized_map|CanonicalizedMap<CanonicalizedMap.C,CanonicalizedMap.K,CanonicalizedMap.V>"), this[_canonicalize], this[_isValidKeyFn], this[_base]);
    }
    _get(key) {
      let t$360, t$360$;
      if (!this[_isValidKey](key)) return null;
      let pair = this[_base][$_get]((t$360 = dart_rti.instanceType(this)[_eval]("CanonicalizedMap.K")[_as](key), this[_canonicalize](t$360)));
      t$360$ = pair;
      return t$360$ == null ? null : t$360$.value;
    }
    _set(key, value) {
      let value$ = value;
      let t$360;
      dart_rti.instanceType(this)[_eval]("CanonicalizedMap.K")[_as](key);
      dart_rti.instanceType(this)[_eval]("CanonicalizedMap.V")[_as](value$);
      if (!this[_isValidKey](key)) return value;
      this[_base][$_set]((t$360 = key, this[_canonicalize](t$360)), new core.MapEntry.__(dart_rti.instanceType(this)[_eval]("core|MapEntry<CanonicalizedMap.K,CanonicalizedMap.V>"), key, value$));
      return value;
    }
    addAll(other) {
      dart_rti.instanceType(this)[_eval]("core|Map<CanonicalizedMap.K,CanonicalizedMap.V>")[_as](other);
      other[$forEach](dart.fn((key, value) => {
        let t$361, t$360;
        t$360 = key;
        t$361 = value;
        this._set(t$360, t$361);
        return t$361;
      }, dart_rti.instanceType(this)[_eval]("~(CanonicalizedMap.K,CanonicalizedMap.V)")));
    }
    addEntries(entries) {
      dart_rti.instanceType(this)[_eval]("core|Iterable<core|MapEntry<CanonicalizedMap.K,CanonicalizedMap.V>>")[_as](entries);
      return this[_base][$addEntries](entries[$map](dart_rti.instanceType(this)[_eval]("core|MapEntry<CanonicalizedMap.C,core|MapEntry<CanonicalizedMap.K,CanonicalizedMap.V>>"), dart.fn(e => {
        let t$360;
        return new core.MapEntry.__(dart_rti.instanceType(this)[_eval]("core|MapEntry<CanonicalizedMap.C,core|MapEntry<CanonicalizedMap.K,CanonicalizedMap.V>>"), (t$360 = e.key, this[_canonicalize](t$360)), new core.MapEntry.__(dart_rti.instanceType(this)[_eval]("core|MapEntry<CanonicalizedMap.K,CanonicalizedMap.V>"), e.key, e.value));
      }, dart_rti.instanceType(this)[_eval]("core|MapEntry<CanonicalizedMap.C,core|MapEntry<CanonicalizedMap.K,CanonicalizedMap.V>>(core|MapEntry<CanonicalizedMap.K,CanonicalizedMap.V>)"))));
    }
    cast(K2, V2) {
      return this[_base][$cast](dart_rti.instanceType(this)[_bind](K2)[_eval]("1"), dart_rti.instanceType(this)[_bind](V2)[_eval]("1"));
    }
    clear() {
      this[_base][$clear]();
    }
    containsKey(key) {
      let t$360;
      if (!this[_isValidKey](key)) return false;
      return this[_base][$containsKey]((t$360 = dart_rti.instanceType(this)[_eval]("CanonicalizedMap.K")[_as](key), this[_canonicalize](t$360)));
    }
    containsValue(value) {
      return this[_base][$values][$any](dart.fn(pair => dart.equals(pair.value, value), dart_rti.instanceType(this)[_eval]("core|bool(core|MapEntry<CanonicalizedMap.K,CanonicalizedMap.V>)")));
    }
    get entries() {
      return this[_base][$entries][$map](dart_rti.instanceType(this)[_eval]("core|MapEntry<CanonicalizedMap.K,CanonicalizedMap.V>"), dart.fn(e => new core.MapEntry.__(dart_rti.instanceType(this)[_eval]("core|MapEntry<CanonicalizedMap.K,CanonicalizedMap.V>"), e.value.key, e.value.value), dart_rti.instanceType(this)[_eval]("core|MapEntry<CanonicalizedMap.K,CanonicalizedMap.V>(core|MapEntry<CanonicalizedMap.C,core|MapEntry<CanonicalizedMap.K,CanonicalizedMap.V>>)")));
    }
    forEach(f) {
      this[_base][$forEach](dart.fn((key, pair) => f(pair.key, pair.value), dart_rti.instanceType(this)[_eval]("~(CanonicalizedMap.C,core|MapEntry<CanonicalizedMap.K,CanonicalizedMap.V>)")));
    }
    get isEmpty() {
      return this[_base][$isEmpty];
    }
    get isNotEmpty() {
      return this[_base][$isNotEmpty];
    }
    get keys() {
      return this[_base][$values][$map](dart_rti.instanceType(this)[_eval]("CanonicalizedMap.K"), dart.fn(pair => pair.key, dart_rti.instanceType(this)[_eval]("CanonicalizedMap.K(core|MapEntry<CanonicalizedMap.K,CanonicalizedMap.V>)")));
    }
    get length() {
      return this[_base][$length];
    }
    map(K2, V2, transform) {
      return this[_base][$map](dart_rti.instanceType(this)[_bind](K2)[_eval]("1"), dart_rti.instanceType(this)[_bind](V2)[_eval]("1"), dart.fn((_, pair) => transform(pair.key, pair.value), dart_rti.instanceType(this)[_bind](K2)[_bind](V2)[_eval]("core|MapEntry<1,2>(CanonicalizedMap.C,core|MapEntry<CanonicalizedMap.K,CanonicalizedMap.V>)")));
    }
    putIfAbsent(key, ifAbsent) {
      let t$360;
      dart_rti.instanceType(this)[_eval]("CanonicalizedMap.K")[_as](key);
      dart_rti.instanceType(this)[_eval]("CanonicalizedMap.V()")[_as](ifAbsent);
      return this[_base][$putIfAbsent]((t$360 = key, this[_canonicalize](t$360)), dart.fn(() => new core.MapEntry.__(dart_rti.instanceType(this)[_eval]("core|MapEntry<CanonicalizedMap.K,CanonicalizedMap.V>"), key, ifAbsent()), dart_rti.instanceType(this)[_eval]("core|MapEntry<CanonicalizedMap.K,CanonicalizedMap.V>()"))).value;
    }
    remove(key) {
      let t$360, t$360$;
      if (!this[_isValidKey](key)) return null;
      let pair = this[_base][$remove]((t$360 = dart_rti.instanceType(this)[_eval]("CanonicalizedMap.K")[_as](key), this[_canonicalize](t$360)));
      t$360$ = pair;
      return t$360$ == null ? null : t$360$.value;
    }
    removeWhere(test) {
      return this[_base][$removeWhere](dart.fn((_, pair) => test(pair.key, pair.value), dart_rti.instanceType(this)[_eval]("core|bool(CanonicalizedMap.C,core|MapEntry<CanonicalizedMap.K,CanonicalizedMap.V>)")));
    }
    retype(K2, V2) {
      return this.cast(dart_rti.instanceType(this)[_bind](K2)[_eval]("1"), dart_rti.instanceType(this)[_bind](V2)[_eval]("1"));
    }
    update(key, update, opts) {
      let t$360;
      dart_rti.instanceType(this)[_eval]("CanonicalizedMap.K")[_as](key);
      dart_rti.instanceType(this)[_eval]("CanonicalizedMap.V(CanonicalizedMap.V)")[_as](update);
      let ifAbsent = opts && 'ifAbsent' in opts ? opts.ifAbsent : null;
      dart_rti.instanceType(this)[_eval]("CanonicalizedMap.V()?")[_as](ifAbsent);
      return this[_base][$update]((t$360 = key, this[_canonicalize](t$360)), dart.fn(pair => {
        let value = pair.value;
        let newValue = update(value);
        if (core.identical(newValue, value)) return pair;
        return new core.MapEntry.__(dart_rti.instanceType(this)[_eval]("core|MapEntry<CanonicalizedMap.K,CanonicalizedMap.V>"), key, newValue);
      }, dart_rti.instanceType(this)[_eval]("core|MapEntry<CanonicalizedMap.K,CanonicalizedMap.V>(core|MapEntry<CanonicalizedMap.K,CanonicalizedMap.V>)")), {ifAbsent: ifAbsent == null ? null : dart.fn(() => new core.MapEntry.__(dart_rti.instanceType(this)[_eval]("core|MapEntry<CanonicalizedMap.K,CanonicalizedMap.V>"), key, ifAbsent()), dart_rti.instanceType(this)[_eval]("core|MapEntry<CanonicalizedMap.K,CanonicalizedMap.V>()"))}).value;
    }
    updateAll(update) {
      dart_rti.instanceType(this)[_eval]("CanonicalizedMap.V(CanonicalizedMap.K,CanonicalizedMap.V)")[_as](update);
      return this[_base][$updateAll](dart.fn((_, pair) => {
        let value = pair.value;
        let key = pair.key;
        let newValue = update(key, value);
        if (core.identical(value, newValue)) return pair;
        return new core.MapEntry.__(dart_rti.instanceType(this)[_eval]("core|MapEntry<CanonicalizedMap.K,CanonicalizedMap.V>"), key, newValue);
      }, dart_rti.instanceType(this)[_eval]("core|MapEntry<CanonicalizedMap.K,CanonicalizedMap.V>(CanonicalizedMap.C,core|MapEntry<CanonicalizedMap.K,CanonicalizedMap.V>)")));
    }
    get values() {
      return this[_base][$values][$map](dart_rti.instanceType(this)[_eval]("CanonicalizedMap.V"), dart.fn(pair => pair.value, dart_rti.instanceType(this)[_eval]("CanonicalizedMap.V(core|MapEntry<CanonicalizedMap.K,CanonicalizedMap.V>)")));
    }
    toString() {
      return collection.MapBase.mapToString(this);
    }
    [_isValidKey](key) {
      let t$360;
      return dart_rti.instanceType(this)[_eval]("CanonicalizedMap.K")[_is](key) && (this[_isValidKeyFn] == null || (t$360 = key, this[_isValidKeyFn](t$360)));
    }
    toMap() {
      return core.Map.fromEntries(dart_rti.instanceType(this)[_eval]("core|Map<CanonicalizedMap.K,CanonicalizedMap.V>"), this[_base][$values]);
    }
    toMapOfCanonicalKeys() {
      return core.Map.fromEntries(dart_rti.instanceType(this)[_eval]("core|Map<CanonicalizedMap.C,CanonicalizedMap.V>"), this[_base][$entries][$map](dart_rti.instanceType(this)[_eval]("core|MapEntry<CanonicalizedMap.C,CanonicalizedMap.V>"), dart.fn(e => new core.MapEntry.__(dart_rti.instanceType(this)[_eval]("core|MapEntry<CanonicalizedMap.C,CanonicalizedMap.V>"), e.key, e.value.value), dart_rti.instanceType(this)[_eval]("core|MapEntry<CanonicalizedMap.C,CanonicalizedMap.V>(core|MapEntry<CanonicalizedMap.C,core|MapEntry<CanonicalizedMap.K,CanonicalizedMap.V>>)"))));
    }
  };
  (canonicalized_map.CanonicalizedMap.new = function(_ti, canonicalize, opts) {
    let isValidKey = opts && 'isValidKey' in opts ? opts.isValidKey : null;
    this.$ti = this.$ti || _ti || dart.getReifiedType(this);
    this[_base] = new _js_helper.LinkedMap.new(dart_rti.instanceType(this)[_eval]("_js_helper|LinkedMap<CanonicalizedMap.C,core|MapEntry<CanonicalizedMap.K,CanonicalizedMap.V>>"));
    this[_canonicalize] = canonicalize;
    this[_isValidKeyFn] = isValidKey;
    ;
  }).prototype = canonicalized_map.CanonicalizedMap.prototype;
  (canonicalized_map.CanonicalizedMap.from = function(_ti, other, canonicalize, opts) {
    let isValidKey = opts && 'isValidKey' in opts ? opts.isValidKey : null;
    this.$ti = this.$ti || _ti || dart.getReifiedType(this);
    this[_base] = new _js_helper.LinkedMap.new(dart_rti.instanceType(this)[_eval]("_js_helper|LinkedMap<CanonicalizedMap.C,core|MapEntry<CanonicalizedMap.K,CanonicalizedMap.V>>"));
    this[_canonicalize] = canonicalize;
    this[_isValidKeyFn] = isValidKey;
    this.addAll(other);
  }).prototype = canonicalized_map.CanonicalizedMap.prototype;
  (canonicalized_map.CanonicalizedMap.fromEntries = function(_ti, entries, canonicalize, opts) {
    let isValidKey = opts && 'isValidKey' in opts ? opts.isValidKey : null;
    this.$ti = this.$ti || _ti || dart.getReifiedType(this);
    this[_base] = new _js_helper.LinkedMap.new(dart_rti.instanceType(this)[_eval]("_js_helper|LinkedMap<CanonicalizedMap.C,core|MapEntry<CanonicalizedMap.K,CanonicalizedMap.V>>"));
    this[_canonicalize] = canonicalize;
    this[_isValidKeyFn] = isValidKey;
    this.addEntries(entries);
  }).prototype = canonicalized_map.CanonicalizedMap.prototype;
  (canonicalized_map.CanonicalizedMap.__ = function(_ti, _canonicalize$, _isValidKeyFn$, base) {
    this.$ti = this.$ti || _ti || dart.getReifiedType(this);
    this[_base] = new _js_helper.LinkedMap.new(dart_rti.instanceType(this)[_eval]("_js_helper|LinkedMap<CanonicalizedMap.C,core|MapEntry<CanonicalizedMap.K,CanonicalizedMap.V>>"));
    this[_canonicalize] = _canonicalize$;
    this[_isValidKeyFn] = _isValidKeyFn$;
    this[_base][$addAll](base);
  }).prototype = canonicalized_map.CanonicalizedMap.prototype;
  dart.addRtiResources(canonicalized_map.CanonicalizedMap, ["collection__src__canonicalized_map|CanonicalizedMap", "core|Map"]);
  dart.setMethodSignature(canonicalized_map.CanonicalizedMap, () => dart.global.Object.setPrototypeOf({
    copy: _ti => _ti[_eval]("collection__src__canonicalized_map|CanonicalizedMap<CanonicalizedMap.C,CanonicalizedMap.K,CanonicalizedMap.V>()"),
    _get: _ti => _ti[_eval]("CanonicalizedMap.V?(core|Object?)"),
    [$_get]: _ti => _ti[_eval]("CanonicalizedMap.V?(core|Object?)"),
    _set: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "~(core|Object?,core|Object?)", true),
    [$_set]: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "~(core|Object?,core|Object?)", true),
    addAll: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "~(core|Object?)", true),
    [$addAll]: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "~(core|Object?)", true),
    addEntries: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "~(core|Object?)", true),
    [$addEntries]: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "~(core|Object?)", true),
    cast: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|Map<0^,1^>()<core|Object?,core|Object?>", true),
    [$cast]: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|Map<0^,1^>()<core|Object?,core|Object?>", true),
    clear: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "~()", true),
    [$clear]: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "~()", true),
    containsKey: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|bool(core|Object?)", true),
    [$containsKey]: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|bool(core|Object?)", true),
    containsValue: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|bool(core|Object?)", true),
    [$containsValue]: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|bool(core|Object?)", true),
    forEach: _ti => _ti[_eval]("~(~(CanonicalizedMap.K,CanonicalizedMap.V))"),
    [$forEach]: _ti => _ti[_eval]("~(~(CanonicalizedMap.K,CanonicalizedMap.V))"),
    map: _ti => _ti[_eval]("core|Map<0^,1^>(core|MapEntry<0^,1^>(CanonicalizedMap.K,CanonicalizedMap.V))<core|Object?,core|Object?>"),
    [$map]: _ti => _ti[_eval]("core|Map<0^,1^>(core|MapEntry<0^,1^>(CanonicalizedMap.K,CanonicalizedMap.V))<core|Object?,core|Object?>"),
    putIfAbsent: _ti => _ti[_eval]("CanonicalizedMap.V(core|Object?,core|Object?)"),
    [$putIfAbsent]: _ti => _ti[_eval]("CanonicalizedMap.V(core|Object?,core|Object?)"),
    remove: _ti => _ti[_eval]("CanonicalizedMap.V?(core|Object?)"),
    [$remove]: _ti => _ti[_eval]("CanonicalizedMap.V?(core|Object?)"),
    removeWhere: _ti => _ti[_eval]("~(core|bool(CanonicalizedMap.K,CanonicalizedMap.V))"),
    [$removeWhere]: _ti => _ti[_eval]("~(core|bool(CanonicalizedMap.K,CanonicalizedMap.V))"),
    retype: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|Map<0^,1^>()<core|Object?,core|Object?>", true),
    update: _ti => _ti[_eval]("CanonicalizedMap.V(core|Object?,core|Object?{ifAbsent:core|Object?})"),
    [$update]: _ti => _ti[_eval]("CanonicalizedMap.V(core|Object?,core|Object?{ifAbsent:core|Object?})"),
    updateAll: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "~(core|Object?)", true),
    [$updateAll]: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "~(core|Object?)", true),
    [_isValidKey]: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|bool(core|Object?)", true),
    toMap: _ti => _ti[_eval]("core|Map<CanonicalizedMap.K,CanonicalizedMap.V>()"),
    toMapOfCanonicalKeys: _ti => _ti[_eval]("core|Map<CanonicalizedMap.C,CanonicalizedMap.V>()")
  }, dart.getMethods(dart.global.Object.getPrototypeOf(canonicalized_map.CanonicalizedMap))));
  dart.setMethodsDefaultTypeArgSignature(canonicalized_map.CanonicalizedMap, () => dart.global.Object.setPrototypeOf({
    cast: _ti => [dart_rti._Universe.eval(dart_rti._theUniverse(), "@", true), dart_rti._Universe.eval(dart_rti._theUniverse(), "@", true)],
    [$cast]: _ti => [dart_rti._Universe.eval(dart_rti._theUniverse(), "@", true), dart_rti._Universe.eval(dart_rti._theUniverse(), "@", true)],
    map: _ti => [dart_rti._Universe.eval(dart_rti._theUniverse(), "@", true), dart_rti._Universe.eval(dart_rti._theUniverse(), "@", true)],
    [$map]: _ti => [dart_rti._Universe.eval(dart_rti._theUniverse(), "@", true), dart_rti._Universe.eval(dart_rti._theUniverse(), "@", true)],
    retype: _ti => [dart_rti._Universe.eval(dart_rti._theUniverse(), "@", true), dart_rti._Universe.eval(dart_rti._theUniverse(), "@", true)]
  }, dart.getMethodsDefaultTypeArgs(dart.global.Object.getPrototypeOf(canonicalized_map.CanonicalizedMap))));
  dart.setGetterSignature(canonicalized_map.CanonicalizedMap, () => dart.global.Object.setPrototypeOf({
    entries: _ti => _ti[_eval]("core|Iterable<core|MapEntry<CanonicalizedMap.K,CanonicalizedMap.V>>"),
    [$entries]: _ti => _ti[_eval]("core|Iterable<core|MapEntry<CanonicalizedMap.K,CanonicalizedMap.V>>"),
    isEmpty: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|bool", true),
    [$isEmpty]: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|bool", true),
    isNotEmpty: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|bool", true),
    [$isNotEmpty]: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|bool", true),
    keys: _ti => _ti[_eval]("core|Iterable<CanonicalizedMap.K>"),
    [$keys]: _ti => _ti[_eval]("core|Iterable<CanonicalizedMap.K>"),
    length: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|int", true),
    [$length]: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|int", true),
    values: _ti => _ti[_eval]("core|Iterable<CanonicalizedMap.V>"),
    [$values]: _ti => _ti[_eval]("core|Iterable<CanonicalizedMap.V>")
  }, dart.getGetters(dart.global.Object.getPrototypeOf(canonicalized_map.CanonicalizedMap))));
  dart.setLibraryUri(canonicalized_map.CanonicalizedMap, I[0]);
  dart.setFieldSignature(canonicalized_map.CanonicalizedMap, () => dart.global.Object.setPrototypeOf({
    [_canonicalize]: {
      type: _ti => _ti[_eval]("CanonicalizedMap.C(CanonicalizedMap.K)"),
      isConst: false,
      isFinal: true
    },
    [_isValidKeyFn]: {
      type: _ti => _ti[_eval]("core|bool(CanonicalizedMap.K)?"),
      isConst: false,
      isFinal: true
    },
    [_base]: {
      type: _ti => _ti[_eval]("core|Map<CanonicalizedMap.C,core|MapEntry<CanonicalizedMap.K,CanonicalizedMap.V>>"),
      isConst: false,
      isFinal: true,
      libraryUri: I[1]
    }
  }, dart.getFields(dart.global.Object.getPrototypeOf(canonicalized_map.CanonicalizedMap))));
  dart.defineExtensionMethods(canonicalized_map.CanonicalizedMap, [
    '_get',
    '_set',
    'addAll',
    'addEntries',
    'cast',
    'clear',
    'containsKey',
    'containsValue',
    'forEach',
    'map',
    'putIfAbsent',
    'remove',
    'removeWhere',
    'update',
    'updateAll',
    'toString'
  ]);
  dart.defineExtensionAccessors(canonicalized_map.CanonicalizedMap, [
    'entries',
    'isEmpty',
    'isNotEmpty',
    'keys',
    'length',
    'values'
  ]);
  var _base$ = dart.privateName(wrappers, "_base");
  wrappers._DelegatingIterableBase = class _DelegatingIterableBase extends core.Object {
    any(test) {
      return this[_base$][$any](test);
    }
    cast(T) {
      return this[_base$][$cast](dart_rti.instanceType(this)[_bind](T)[_eval]("1"));
    }
    contains(element) {
      return this[_base$][$contains](element);
    }
    elementAt(index) {
      return this[_base$][$elementAt](index);
    }
    every(test) {
      return this[_base$][$every](test);
    }
    expand(T, f) {
      return this[_base$][$expand](dart_rti.instanceType(this)[_bind](T)[_eval]("1"), f);
    }
    get first() {
      return this[_base$][$first];
    }
    firstWhere(test, opts) {
      let orElse = opts && 'orElse' in opts ? opts.orElse : null;
      dart_rti.instanceType(this)[_eval]("_DelegatingIterableBase.E()?")[_as](orElse);
      return this[_base$][$firstWhere](test, {orElse: orElse});
    }
    fold(T, initialValue, combine) {
      return this[_base$][$fold](dart_rti.instanceType(this)[_bind](T)[_eval]("1"), initialValue, combine);
    }
    followedBy(other) {
      dart_rti.instanceType(this)[_eval]("core|Iterable<_DelegatingIterableBase.E>")[_as](other);
      return this[_base$][$followedBy](other);
    }
    forEach(f) {
      return this[_base$][$forEach](f);
    }
    get isEmpty() {
      return this[_base$][$isEmpty];
    }
    get isNotEmpty() {
      return this[_base$][$isNotEmpty];
    }
    get iterator() {
      return this[_base$][$iterator];
    }
    [Symbol.iterator]() {
      return new dart.JsIterator(this[$iterator]);
    }
    join(separator = "") {
      return this[_base$][$join](separator);
    }
    get last() {
      return this[_base$][$last];
    }
    lastWhere(test, opts) {
      let orElse = opts && 'orElse' in opts ? opts.orElse : null;
      dart_rti.instanceType(this)[_eval]("_DelegatingIterableBase.E()?")[_as](orElse);
      return this[_base$][$lastWhere](test, {orElse: orElse});
    }
    get length() {
      return this[_base$][$length];
    }
    map(T, f) {
      return this[_base$][$map](dart_rti.instanceType(this)[_bind](T)[_eval]("1"), f);
    }
    reduce(combine) {
      dart_rti.instanceType(this)[_eval]("_DelegatingIterableBase.E(_DelegatingIterableBase.E,_DelegatingIterableBase.E)")[_as](combine);
      return this[_base$][$reduce](combine);
    }
    retype(T) {
      return this.cast(dart_rti.instanceType(this)[_bind](T)[_eval]("1"));
    }
    get single() {
      return this[_base$][$single];
    }
    singleWhere(test, opts) {
      let orElse = opts && 'orElse' in opts ? opts.orElse : null;
      dart_rti.instanceType(this)[_eval]("_DelegatingIterableBase.E()?")[_as](orElse);
      return this[_base$][$singleWhere](test, {orElse: orElse});
    }
    skip(n) {
      return this[_base$][$skip](n);
    }
    skipWhile(test) {
      return this[_base$][$skipWhile](test);
    }
    take(n) {
      return this[_base$][$take](n);
    }
    takeWhile(test) {
      return this[_base$][$takeWhile](test);
    }
    toList(opts) {
      let growable = opts && 'growable' in opts ? opts.growable : true;
      return this[_base$][$toList]({growable: growable});
    }
    toSet() {
      return this[_base$][$toSet]();
    }
    where(test) {
      return this[_base$][$where](test);
    }
    whereType(T) {
      return this[_base$][$whereType](dart_rti.instanceType(this)[_bind](T)[_eval]("1"));
    }
    toString() {
      return dart.toString(this[_base$]);
    }
  };
  (wrappers._DelegatingIterableBase.new = function(_ti) {
    this.$ti = this.$ti || _ti || dart.getReifiedType(this);
    ;
  }).prototype = wrappers._DelegatingIterableBase.prototype;
  dart.addRtiResources(wrappers._DelegatingIterableBase, ["collection__src__wrappers|_DelegatingIterableBase", "core|Iterable"]);
  dart.setMethodSignature(wrappers._DelegatingIterableBase, () => dart.global.Object.setPrototypeOf({
    any: _ti => _ti[_eval]("core|bool(core|bool(_DelegatingIterableBase.E))"),
    [$any]: _ti => _ti[_eval]("core|bool(core|bool(_DelegatingIterableBase.E))"),
    cast: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|Iterable<0^>()<core|Object?>", true),
    [$cast]: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|Iterable<0^>()<core|Object?>", true),
    contains: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|bool(core|Object?)", true),
    [$contains]: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|bool(core|Object?)", true),
    elementAt: _ti => _ti[_eval]("_DelegatingIterableBase.E(core|int)"),
    [$elementAt]: _ti => _ti[_eval]("_DelegatingIterableBase.E(core|int)"),
    every: _ti => _ti[_eval]("core|bool(core|bool(_DelegatingIterableBase.E))"),
    [$every]: _ti => _ti[_eval]("core|bool(core|bool(_DelegatingIterableBase.E))"),
    expand: _ti => _ti[_eval]("core|Iterable<0^>(core|Iterable<0^>(_DelegatingIterableBase.E))<core|Object?>"),
    [$expand]: _ti => _ti[_eval]("core|Iterable<0^>(core|Iterable<0^>(_DelegatingIterableBase.E))<core|Object?>"),
    firstWhere: _ti => _ti[_eval]("_DelegatingIterableBase.E(core|bool(_DelegatingIterableBase.E){orElse:core|Object?})"),
    [$firstWhere]: _ti => _ti[_eval]("_DelegatingIterableBase.E(core|bool(_DelegatingIterableBase.E){orElse:core|Object?})"),
    fold: _ti => _ti[_eval]("0^(0^,0^(0^,_DelegatingIterableBase.E))<core|Object?>"),
    [$fold]: _ti => _ti[_eval]("0^(0^,0^(0^,_DelegatingIterableBase.E))<core|Object?>"),
    followedBy: _ti => _ti[_eval]("core|Iterable<_DelegatingIterableBase.E>(core|Object?)"),
    [$followedBy]: _ti => _ti[_eval]("core|Iterable<_DelegatingIterableBase.E>(core|Object?)"),
    forEach: _ti => _ti[_eval]("~(~(_DelegatingIterableBase.E))"),
    [$forEach]: _ti => _ti[_eval]("~(~(_DelegatingIterableBase.E))"),
    join: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|String([core|String])", true),
    [$join]: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|String([core|String])", true),
    lastWhere: _ti => _ti[_eval]("_DelegatingIterableBase.E(core|bool(_DelegatingIterableBase.E){orElse:core|Object?})"),
    [$lastWhere]: _ti => _ti[_eval]("_DelegatingIterableBase.E(core|bool(_DelegatingIterableBase.E){orElse:core|Object?})"),
    map: _ti => _ti[_eval]("core|Iterable<0^>(0^(_DelegatingIterableBase.E))<core|Object?>"),
    [$map]: _ti => _ti[_eval]("core|Iterable<0^>(0^(_DelegatingIterableBase.E))<core|Object?>"),
    reduce: _ti => _ti[_eval]("_DelegatingIterableBase.E(core|Object?)"),
    [$reduce]: _ti => _ti[_eval]("_DelegatingIterableBase.E(core|Object?)"),
    retype: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|Iterable<0^>()<core|Object?>", true),
    singleWhere: _ti => _ti[_eval]("_DelegatingIterableBase.E(core|bool(_DelegatingIterableBase.E){orElse:core|Object?})"),
    [$singleWhere]: _ti => _ti[_eval]("_DelegatingIterableBase.E(core|bool(_DelegatingIterableBase.E){orElse:core|Object?})"),
    skip: _ti => _ti[_eval]("core|Iterable<_DelegatingIterableBase.E>(core|int)"),
    [$skip]: _ti => _ti[_eval]("core|Iterable<_DelegatingIterableBase.E>(core|int)"),
    skipWhile: _ti => _ti[_eval]("core|Iterable<_DelegatingIterableBase.E>(core|bool(_DelegatingIterableBase.E))"),
    [$skipWhile]: _ti => _ti[_eval]("core|Iterable<_DelegatingIterableBase.E>(core|bool(_DelegatingIterableBase.E))"),
    take: _ti => _ti[_eval]("core|Iterable<_DelegatingIterableBase.E>(core|int)"),
    [$take]: _ti => _ti[_eval]("core|Iterable<_DelegatingIterableBase.E>(core|int)"),
    takeWhile: _ti => _ti[_eval]("core|Iterable<_DelegatingIterableBase.E>(core|bool(_DelegatingIterableBase.E))"),
    [$takeWhile]: _ti => _ti[_eval]("core|Iterable<_DelegatingIterableBase.E>(core|bool(_DelegatingIterableBase.E))"),
    toList: _ti => _ti[_eval]("core|List<_DelegatingIterableBase.E>({growable:core|bool})"),
    [$toList]: _ti => _ti[_eval]("core|List<_DelegatingIterableBase.E>({growable:core|bool})"),
    toSet: _ti => _ti[_eval]("core|Set<_DelegatingIterableBase.E>()"),
    [$toSet]: _ti => _ti[_eval]("core|Set<_DelegatingIterableBase.E>()"),
    where: _ti => _ti[_eval]("core|Iterable<_DelegatingIterableBase.E>(core|bool(_DelegatingIterableBase.E))"),
    [$where]: _ti => _ti[_eval]("core|Iterable<_DelegatingIterableBase.E>(core|bool(_DelegatingIterableBase.E))"),
    whereType: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|Iterable<0^>()<core|Object?>", true),
    [$whereType]: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|Iterable<0^>()<core|Object?>", true)
  }, dart.getMethods(dart.global.Object.getPrototypeOf(wrappers._DelegatingIterableBase))));
  dart.setMethodsDefaultTypeArgSignature(wrappers._DelegatingIterableBase, () => dart.global.Object.setPrototypeOf({
    cast: _ti => [dart_rti._Universe.eval(dart_rti._theUniverse(), "@", true)],
    [$cast]: _ti => [dart_rti._Universe.eval(dart_rti._theUniverse(), "@", true)],
    expand: _ti => [dart_rti._Universe.eval(dart_rti._theUniverse(), "@", true)],
    [$expand]: _ti => [dart_rti._Universe.eval(dart_rti._theUniverse(), "@", true)],
    fold: _ti => [dart_rti._Universe.eval(dart_rti._theUniverse(), "@", true)],
    [$fold]: _ti => [dart_rti._Universe.eval(dart_rti._theUniverse(), "@", true)],
    map: _ti => [dart_rti._Universe.eval(dart_rti._theUniverse(), "@", true)],
    [$map]: _ti => [dart_rti._Universe.eval(dart_rti._theUniverse(), "@", true)],
    retype: _ti => [dart_rti._Universe.eval(dart_rti._theUniverse(), "@", true)],
    whereType: _ti => [dart_rti._Universe.eval(dart_rti._theUniverse(), "@", true)],
    [$whereType]: _ti => [dart_rti._Universe.eval(dart_rti._theUniverse(), "@", true)]
  }, dart.getMethodsDefaultTypeArgs(dart.global.Object.getPrototypeOf(wrappers._DelegatingIterableBase))));
  dart.setGetterSignature(wrappers._DelegatingIterableBase, () => dart.global.Object.setPrototypeOf({
    first: _ti => _ti[_eval]("_DelegatingIterableBase.E"),
    [$first]: _ti => _ti[_eval]("_DelegatingIterableBase.E"),
    isEmpty: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|bool", true),
    [$isEmpty]: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|bool", true),
    isNotEmpty: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|bool", true),
    [$isNotEmpty]: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|bool", true),
    iterator: _ti => _ti[_eval]("core|Iterator<_DelegatingIterableBase.E>"),
    [$iterator]: _ti => _ti[_eval]("core|Iterator<_DelegatingIterableBase.E>"),
    last: _ti => _ti[_eval]("_DelegatingIterableBase.E"),
    [$last]: _ti => _ti[_eval]("_DelegatingIterableBase.E"),
    length: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|int", true),
    [$length]: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|int", true),
    single: _ti => _ti[_eval]("_DelegatingIterableBase.E"),
    [$single]: _ti => _ti[_eval]("_DelegatingIterableBase.E")
  }, dart.getGetters(dart.global.Object.getPrototypeOf(wrappers._DelegatingIterableBase))));
  dart.setLibraryUri(wrappers._DelegatingIterableBase, I[2]);
  dart.defineExtensionMethods(wrappers._DelegatingIterableBase, [
    'any',
    'cast',
    'contains',
    'elementAt',
    'every',
    'expand',
    'firstWhere',
    'fold',
    'followedBy',
    'forEach',
    'join',
    'lastWhere',
    'map',
    'reduce',
    'singleWhere',
    'skip',
    'skipWhile',
    'take',
    'takeWhile',
    'toList',
    'toSet',
    'where',
    'whereType',
    'toString'
  ]);
  dart.defineExtensionAccessors(wrappers._DelegatingIterableBase, [
    'first',
    'isEmpty',
    'isNotEmpty',
    'iterator',
    'last',
    'length',
    'single'
  ]);
  var _base$0 = dart.privateName(wrappers, "DelegatingIterable._base");
  wrappers.DelegatingIterable = class DelegatingIterable extends wrappers._DelegatingIterableBase {
    get [_base$]() {
      return this[_base$0];
    }
    set [_base$](value) {
      super[_base$] = value;
    }
    static ['_#new#tearOff'](E, base) {
      return new wrappers.DelegatingIterable.new(dart_rti.instanceType(this)[_bind](E)[_eval]("collection__src__wrappers|DelegatingIterable<1>"), base);
    }
    static typed(E, base) {
      return base[$cast](dart_rti.instanceType(this)[_bind](E)[_eval]("1"));
    }
  };
  (wrappers.DelegatingIterable.new = function(_ti, base) {
    this.$ti = this.$ti || _ti || dart.getReifiedType(this);
    this[_base$0] = base;
    dart.global.Object.getPrototypeOf(wrappers.DelegatingIterable).new.call(this, null);
    ;
  }).prototype = wrappers.DelegatingIterable.prototype;
  dart.addRtiResources(wrappers.DelegatingIterable, ["collection__src__wrappers|DelegatingIterable"]);
  dart.setStaticMethodSignature(wrappers.DelegatingIterable, () => ['typed']);
  dart.setLibraryUri(wrappers.DelegatingIterable, I[2]);
  dart.setFieldSignature(wrappers.DelegatingIterable, () => dart.global.Object.setPrototypeOf({[_base$]: {
      type: _ti => _ti[_eval]("core|Iterable<DelegatingIterable.E>"),
      isConst: false,
      isFinal: true,
      libraryUri: I[1]
    }}, dart.getFields(dart.global.Object.getPrototypeOf(wrappers.DelegatingIterable))));
  var _base$1 = dart.privateName(wrappers, "DelegatingList._base");
  wrappers.DelegatingList = class DelegatingList extends wrappers._DelegatingIterableBase {
    get [_base$]() {
      return this[_base$1];
    }
    set [_base$](value) {
      super[_base$] = value;
    }
    static ['_#new#tearOff'](E, base) {
      return new wrappers.DelegatingList.new(dart_rti.instanceType(this)[_bind](E)[_eval]("collection__src__wrappers|DelegatingList<1>"), base);
    }
    static typed(E, base) {
      return base[$cast](dart_rti.instanceType(this)[_bind](E)[_eval]("1"));
    }
    _get(index) {
      return this[_base$][$_get](index);
    }
    _set(index, value) {
      let value$ = value;
      dart_rti.instanceType(this)[_eval]("DelegatingList.E")[_as](value$);
      this[_base$][$_set](index, value$);
      return value;
    }
    ['+'](other) {
      dart_rti.instanceType(this)[_eval]("core|List<DelegatingList.E>")[_as](other);
      return this[_base$][$plus](other);
    }
    add(value) {
      dart_rti.instanceType(this)[_eval]("DelegatingList.E")[_as](value);
      this[_base$][$add](value);
    }
    addAll(iterable) {
      dart_rti.instanceType(this)[_eval]("core|Iterable<DelegatingList.E>")[_as](iterable);
      this[_base$][$addAll](iterable);
    }
    asMap() {
      return this[_base$][$asMap]();
    }
    cast(T) {
      return this[_base$][$cast](dart_rti.instanceType(this)[_bind](T)[_eval]("1"));
    }
    clear() {
      this[_base$][$clear]();
    }
    fillRange(start, end, fillValue = null) {
      dart_rti.instanceType(this)[_eval]("DelegatingList.E?")[_as](fillValue);
      this[_base$][$fillRange](start, end, fillValue);
    }
    set first(value) {
      dart_rti.instanceType(this)[_eval]("DelegatingList.E")[_as](value);
      if (this.isEmpty) dart.throw(new core.IndexError.new(0, this));
      this._set(0, value);
    }
    get first() {
      return super.first;
    }
    getRange(start, end) {
      return this[_base$][$getRange](start, end);
    }
    indexOf(element, start = 0) {
      dart_rti.instanceType(this)[_eval]("DelegatingList.E")[_as](element);
      return this[_base$][$indexOf](element, start);
    }
    indexWhere(test, start = 0) {
      return this[_base$][$indexWhere](test, start);
    }
    insert(index, element) {
      dart_rti.instanceType(this)[_eval]("DelegatingList.E")[_as](element);
      this[_base$][$insert](index, element);
    }
    insertAll(index, iterable) {
      dart_rti.instanceType(this)[_eval]("core|Iterable<DelegatingList.E>")[_as](iterable);
      this[_base$][$insertAll](index, iterable);
    }
    set last(value) {
      dart_rti.instanceType(this)[_eval]("DelegatingList.E")[_as](value);
      if (this.isEmpty) dart.throw(new core.IndexError.new(0, this));
      this._set(this.length - 1, value);
    }
    get last() {
      return super.last;
    }
    lastIndexOf(element, start = null) {
      dart_rti.instanceType(this)[_eval]("DelegatingList.E")[_as](element);
      return this[_base$][$lastIndexOf](element, start);
    }
    lastIndexWhere(test, start = null) {
      return this[_base$][$lastIndexWhere](test, start);
    }
    set length(newLength) {
      this[_base$][$length] = newLength;
    }
    get length() {
      return super.length;
    }
    remove(value) {
      return this[_base$][$remove](value);
    }
    removeAt(index) {
      return this[_base$][$removeAt](index);
    }
    removeLast() {
      return this[_base$][$removeLast]();
    }
    removeRange(start, end) {
      this[_base$][$removeRange](start, end);
    }
    removeWhere(test) {
      this[_base$][$removeWhere](test);
    }
    replaceRange(start, end, iterable) {
      dart_rti.instanceType(this)[_eval]("core|Iterable<DelegatingList.E>")[_as](iterable);
      this[_base$][$replaceRange](start, end, iterable);
    }
    retainWhere(test) {
      this[_base$][$retainWhere](test);
    }
    retype(T) {
      return this.cast(dart_rti.instanceType(this)[_bind](T)[_eval]("1"));
    }
    get reversed() {
      return this[_base$][$reversed];
    }
    setAll(index, iterable) {
      dart_rti.instanceType(this)[_eval]("core|Iterable<DelegatingList.E>")[_as](iterable);
      this[_base$][$setAll](index, iterable);
    }
    setRange(start, end, iterable, skipCount = 0) {
      dart_rti.instanceType(this)[_eval]("core|Iterable<DelegatingList.E>")[_as](iterable);
      this[_base$][$setRange](start, end, iterable, skipCount);
    }
    shuffle(random = null) {
      this[_base$][$shuffle](random);
    }
    sort(compare = null) {
      this[_base$][$sort](compare);
    }
    sublist(start, end = null) {
      return this[_base$][$sublist](start, end);
    }
  };
  (wrappers.DelegatingList.new = function(_ti, base) {
    this.$ti = this.$ti || _ti || dart.getReifiedType(this);
    this[_base$1] = base;
    dart.global.Object.getPrototypeOf(wrappers.DelegatingList).new.call(this, null);
    ;
  }).prototype = wrappers.DelegatingList.prototype;
  dart.addRtiResources(wrappers.DelegatingList, ["collection__src__wrappers|DelegatingList", "core|List", "core|Iterable", "core|_ListIterable", "_internal|EfficientLengthIterable", "_internal|HideEfficientLengthIterable", "core|Iterable", "core|Iterable"]);
  dart.setMethodSignature(wrappers.DelegatingList, () => dart.global.Object.setPrototypeOf({
    _get: _ti => _ti[_eval]("DelegatingList.E(core|int)"),
    [$_get]: _ti => _ti[_eval]("DelegatingList.E(core|int)"),
    _set: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "~(core|int,core|Object?)", true),
    [$_set]: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "~(core|int,core|Object?)", true),
    '+': _ti => _ti[_eval]("core|List<DelegatingList.E>(core|Object?)"),
    [$plus]: _ti => _ti[_eval]("core|List<DelegatingList.E>(core|Object?)"),
    add: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "~(core|Object?)", true),
    [$add]: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "~(core|Object?)", true),
    addAll: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "~(core|Object?)", true),
    [$addAll]: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "~(core|Object?)", true),
    asMap: _ti => _ti[_eval]("core|Map<core|int,DelegatingList.E>()"),
    [$asMap]: _ti => _ti[_eval]("core|Map<core|int,DelegatingList.E>()"),
    cast: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|List<0^>()<core|Object?>", true),
    [$cast]: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|List<0^>()<core|Object?>", true),
    clear: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "~()", true),
    [$clear]: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "~()", true),
    fillRange: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "~(core|int,core|int[core|Object?])", true),
    [$fillRange]: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "~(core|int,core|int[core|Object?])", true),
    getRange: _ti => _ti[_eval]("core|Iterable<DelegatingList.E>(core|int,core|int)"),
    [$getRange]: _ti => _ti[_eval]("core|Iterable<DelegatingList.E>(core|int,core|int)"),
    indexOf: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|int(core|Object?[core|int])", true),
    [$indexOf]: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|int(core|Object?[core|int])", true),
    indexWhere: _ti => _ti[_eval]("core|int(core|bool(DelegatingList.E)[core|int])"),
    [$indexWhere]: _ti => _ti[_eval]("core|int(core|bool(DelegatingList.E)[core|int])"),
    insert: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "~(core|int,core|Object?)", true),
    [$insert]: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "~(core|int,core|Object?)", true),
    insertAll: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "~(core|int,core|Object?)", true),
    [$insertAll]: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "~(core|int,core|Object?)", true),
    lastIndexOf: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|int(core|Object?[core|int?])", true),
    [$lastIndexOf]: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|int(core|Object?[core|int?])", true),
    lastIndexWhere: _ti => _ti[_eval]("core|int(core|bool(DelegatingList.E)[core|int?])"),
    [$lastIndexWhere]: _ti => _ti[_eval]("core|int(core|bool(DelegatingList.E)[core|int?])"),
    remove: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|bool(core|Object?)", true),
    [$remove]: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|bool(core|Object?)", true),
    removeAt: _ti => _ti[_eval]("DelegatingList.E(core|int)"),
    [$removeAt]: _ti => _ti[_eval]("DelegatingList.E(core|int)"),
    removeLast: _ti => _ti[_eval]("DelegatingList.E()"),
    [$removeLast]: _ti => _ti[_eval]("DelegatingList.E()"),
    removeRange: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "~(core|int,core|int)", true),
    [$removeRange]: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "~(core|int,core|int)", true),
    removeWhere: _ti => _ti[_eval]("~(core|bool(DelegatingList.E))"),
    [$removeWhere]: _ti => _ti[_eval]("~(core|bool(DelegatingList.E))"),
    replaceRange: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "~(core|int,core|int,core|Object?)", true),
    [$replaceRange]: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "~(core|int,core|int,core|Object?)", true),
    retainWhere: _ti => _ti[_eval]("~(core|bool(DelegatingList.E))"),
    [$retainWhere]: _ti => _ti[_eval]("~(core|bool(DelegatingList.E))"),
    retype: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|List<0^>()<core|Object?>", true),
    setAll: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "~(core|int,core|Object?)", true),
    [$setAll]: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "~(core|int,core|Object?)", true),
    setRange: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "~(core|int,core|int,core|Object?[core|int])", true),
    [$setRange]: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "~(core|int,core|int,core|Object?[core|int])", true),
    shuffle: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "~([math|Random?])", true),
    [$shuffle]: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "~([math|Random?])", true),
    sort: _ti => _ti[_eval]("~([core|int(DelegatingList.E,DelegatingList.E)?])"),
    [$sort]: _ti => _ti[_eval]("~([core|int(DelegatingList.E,DelegatingList.E)?])"),
    sublist: _ti => _ti[_eval]("core|List<DelegatingList.E>(core|int[core|int?])"),
    [$sublist]: _ti => _ti[_eval]("core|List<DelegatingList.E>(core|int[core|int?])")
  }, dart.getMethods(dart.global.Object.getPrototypeOf(wrappers.DelegatingList))));
  dart.setMethodsDefaultTypeArgSignature(wrappers.DelegatingList, () => dart.global.Object.setPrototypeOf({
    cast: _ti => [dart_rti._Universe.eval(dart_rti._theUniverse(), "@", true)],
    [$cast]: _ti => [dart_rti._Universe.eval(dart_rti._theUniverse(), "@", true)],
    retype: _ti => [dart_rti._Universe.eval(dart_rti._theUniverse(), "@", true)]
  }, dart.getMethodsDefaultTypeArgs(dart.global.Object.getPrototypeOf(wrappers.DelegatingList))));
  dart.setStaticMethodSignature(wrappers.DelegatingList, () => ['typed']);
  dart.setGetterSignature(wrappers.DelegatingList, () => dart.global.Object.setPrototypeOf({
    reversed: _ti => _ti[_eval]("core|Iterable<DelegatingList.E>"),
    [$reversed]: _ti => _ti[_eval]("core|Iterable<DelegatingList.E>")
  }, dart.getGetters(dart.global.Object.getPrototypeOf(wrappers.DelegatingList))));
  dart.setSetterSignature(wrappers.DelegatingList, () => dart.global.Object.setPrototypeOf({
    first: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|Object?", true),
    [$first]: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|Object?", true),
    last: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|Object?", true),
    [$last]: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|Object?", true),
    length: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|int", true),
    [$length]: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|int", true)
  }, dart.getSetters(dart.global.Object.getPrototypeOf(wrappers.DelegatingList))));
  dart.setLibraryUri(wrappers.DelegatingList, I[2]);
  dart.setFieldSignature(wrappers.DelegatingList, () => dart.global.Object.setPrototypeOf({[_base$]: {
      type: _ti => _ti[_eval]("core|List<DelegatingList.E>"),
      isConst: false,
      isFinal: true,
      libraryUri: I[1]
    }}, dart.getFields(dart.global.Object.getPrototypeOf(wrappers.DelegatingList))));
  dart.defineExtensionMethods(wrappers.DelegatingList, [
    '_get',
    '_set',
    '+',
    'add',
    'addAll',
    'asMap',
    'cast',
    'clear',
    'fillRange',
    'getRange',
    'indexOf',
    'indexWhere',
    'insert',
    'insertAll',
    'lastIndexOf',
    'lastIndexWhere',
    'remove',
    'removeAt',
    'removeLast',
    'removeRange',
    'removeWhere',
    'replaceRange',
    'retainWhere',
    'setAll',
    'setRange',
    'shuffle',
    'sort',
    'sublist'
  ]);
  dart.defineExtensionAccessors(wrappers.DelegatingList, ['first', 'last', 'length', 'reversed']);
  var _base$2 = dart.privateName(wrappers, "DelegatingSet._base");
  wrappers.DelegatingSet = class DelegatingSet extends wrappers._DelegatingIterableBase {
    get [_base$]() {
      return this[_base$2];
    }
    set [_base$](value) {
      super[_base$] = value;
    }
    static ['_#new#tearOff'](E, base) {
      return new wrappers.DelegatingSet.new(dart_rti.instanceType(this)[_bind](E)[_eval]("collection__src__wrappers|DelegatingSet<1>"), base);
    }
    static typed(E, base) {
      return base.cast(dart_rti.instanceType(this)[_bind](E)[_eval]("1"));
    }
    add(value) {
      dart_rti.instanceType(this)[_eval]("DelegatingSet.E")[_as](value);
      return this[_base$].add(value);
    }
    addAll(elements) {
      dart_rti.instanceType(this)[_eval]("core|Iterable<DelegatingSet.E>")[_as](elements);
      this[_base$].addAll(elements);
    }
    cast(T) {
      return this[_base$].cast(dart_rti.instanceType(this)[_bind](T)[_eval]("1"));
    }
    clear() {
      this[_base$].clear();
    }
    containsAll(other) {
      return this[_base$].containsAll(other);
    }
    difference(other) {
      return this[_base$].difference(other);
    }
    intersection(other) {
      return this[_base$].intersection(other);
    }
    lookup(element) {
      return this[_base$].lookup(element);
    }
    remove(value) {
      return this[_base$].remove(value);
    }
    removeAll(elements) {
      this[_base$].removeAll(elements);
    }
    removeWhere(test) {
      this[_base$].removeWhere(test);
    }
    retainAll(elements) {
      this[_base$].retainAll(elements);
    }
    retype(T) {
      return this.cast(dart_rti.instanceType(this)[_bind](T)[_eval]("1"));
    }
    retainWhere(test) {
      this[_base$].retainWhere(test);
    }
    union(other) {
      dart_rti.instanceType(this)[_eval]("core|Set<DelegatingSet.E>")[_as](other);
      return this[_base$].union(other);
    }
    toSet() {
      return new wrappers.DelegatingSet.new(dart_rti.instanceType(this)[_eval]("collection__src__wrappers|DelegatingSet<DelegatingSet.E>"), this[_base$].toSet());
    }
  };
  (wrappers.DelegatingSet.new = function(_ti, base) {
    this.$ti = this.$ti || _ti || dart.getReifiedType(this);
    this[_base$2] = base;
    dart.global.Object.getPrototypeOf(wrappers.DelegatingSet).new.call(this, null);
    ;
  }).prototype = wrappers.DelegatingSet.prototype;
  dart.addRtiResources(wrappers.DelegatingSet, ["collection__src__wrappers|DelegatingSet", "core|Set", "core|Iterable", "core|_SetIterable", "_internal|EfficientLengthIterable", "_internal|HideEfficientLengthIterable", "core|Iterable", "core|Iterable"]);
  dart.setMethodSignature(wrappers.DelegatingSet, () => dart.global.Object.setPrototypeOf({
    add: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|bool(core|Object?)", true),
    addAll: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "~(core|Object?)", true),
    cast: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|Set<0^>()<core|Object?>", true),
    [$cast]: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|Set<0^>()<core|Object?>", true),
    clear: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "~()", true),
    containsAll: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|bool(core|Iterable<core|Object?>)", true),
    difference: _ti => _ti[_eval]("core|Set<DelegatingSet.E>(core|Set<core|Object?>)"),
    intersection: _ti => _ti[_eval]("core|Set<DelegatingSet.E>(core|Set<core|Object?>)"),
    lookup: _ti => _ti[_eval]("DelegatingSet.E?(core|Object?)"),
    remove: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|bool(core|Object?)", true),
    removeAll: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "~(core|Iterable<core|Object?>)", true),
    removeWhere: _ti => _ti[_eval]("~(core|bool(DelegatingSet.E))"),
    retainAll: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "~(core|Iterable<core|Object?>)", true),
    retype: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|Set<0^>()<core|Object?>", true),
    retainWhere: _ti => _ti[_eval]("~(core|bool(DelegatingSet.E))"),
    union: _ti => _ti[_eval]("core|Set<DelegatingSet.E>(core|Object?)")
  }, dart.getMethods(dart.global.Object.getPrototypeOf(wrappers.DelegatingSet))));
  dart.setMethodsDefaultTypeArgSignature(wrappers.DelegatingSet, () => dart.global.Object.setPrototypeOf({
    cast: _ti => [dart_rti._Universe.eval(dart_rti._theUniverse(), "@", true)],
    [$cast]: _ti => [dart_rti._Universe.eval(dart_rti._theUniverse(), "@", true)],
    retype: _ti => [dart_rti._Universe.eval(dart_rti._theUniverse(), "@", true)]
  }, dart.getMethodsDefaultTypeArgs(dart.global.Object.getPrototypeOf(wrappers.DelegatingSet))));
  dart.setStaticMethodSignature(wrappers.DelegatingSet, () => ['typed']);
  dart.setLibraryUri(wrappers.DelegatingSet, I[2]);
  dart.setFieldSignature(wrappers.DelegatingSet, () => dart.global.Object.setPrototypeOf({[_base$]: {
      type: _ti => _ti[_eval]("core|Set<DelegatingSet.E>"),
      isConst: false,
      isFinal: true,
      libraryUri: I[1]
    }}, dart.getFields(dart.global.Object.getPrototypeOf(wrappers.DelegatingSet))));
  dart.defineExtensionMethods(wrappers.DelegatingSet, ['cast', 'toSet']);
  var _base$3 = dart.privateName(wrappers, "DelegatingQueue._base");
  wrappers.DelegatingQueue = class DelegatingQueue extends wrappers._DelegatingIterableBase {
    get [_base$]() {
      return this[_base$3];
    }
    set [_base$](value) {
      super[_base$] = value;
    }
    static ['_#new#tearOff'](E, queue) {
      return new wrappers.DelegatingQueue.new(dart_rti.instanceType(this)[_bind](E)[_eval]("collection__src__wrappers|DelegatingQueue<1>"), queue);
    }
    static typed(E, base) {
      return base.cast(dart_rti.instanceType(this)[_bind](E)[_eval]("1"));
    }
    add(value) {
      dart_rti.instanceType(this)[_eval]("DelegatingQueue.E")[_as](value);
      this[_base$].add(value);
    }
    addAll(iterable) {
      dart_rti.instanceType(this)[_eval]("core|Iterable<DelegatingQueue.E>")[_as](iterable);
      this[_base$].addAll(iterable);
    }
    addFirst(value) {
      dart_rti.instanceType(this)[_eval]("DelegatingQueue.E")[_as](value);
      this[_base$].addFirst(value);
    }
    addLast(value) {
      dart_rti.instanceType(this)[_eval]("DelegatingQueue.E")[_as](value);
      this[_base$].addLast(value);
    }
    cast(T) {
      return this[_base$].cast(dart_rti.instanceType(this)[_bind](T)[_eval]("1"));
    }
    clear() {
      this[_base$].clear();
    }
    remove(object) {
      return this[_base$].remove(object);
    }
    removeWhere(test) {
      this[_base$].removeWhere(test);
    }
    retainWhere(test) {
      this[_base$].retainWhere(test);
    }
    retype(T) {
      return this.cast(dart_rti.instanceType(this)[_bind](T)[_eval]("1"));
    }
    removeFirst() {
      return this[_base$].removeFirst();
    }
    removeLast() {
      return this[_base$].removeLast();
    }
  };
  (wrappers.DelegatingQueue.new = function(_ti, queue) {
    this.$ti = this.$ti || _ti || dart.getReifiedType(this);
    this[_base$3] = queue;
    dart.global.Object.getPrototypeOf(wrappers.DelegatingQueue).new.call(this, null);
    ;
  }).prototype = wrappers.DelegatingQueue.prototype;
  dart.addRtiResources(wrappers.DelegatingQueue, ["collection__src__wrappers|DelegatingQueue", "collection|Queue", "core|Iterable", "collection|_QueueIterable", "_internal|EfficientLengthIterable", "_internal|HideEfficientLengthIterable", "core|Iterable", "core|Iterable"]);
  dart.setMethodSignature(wrappers.DelegatingQueue, () => dart.global.Object.setPrototypeOf({
    add: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "~(core|Object?)", true),
    addAll: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "~(core|Object?)", true),
    addFirst: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "~(core|Object?)", true),
    addLast: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "~(core|Object?)", true),
    cast: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "collection|Queue<0^>()<core|Object?>", true),
    [$cast]: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "collection|Queue<0^>()<core|Object?>", true),
    clear: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "~()", true),
    remove: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|bool(core|Object?)", true),
    removeWhere: _ti => _ti[_eval]("~(core|bool(DelegatingQueue.E))"),
    retainWhere: _ti => _ti[_eval]("~(core|bool(DelegatingQueue.E))"),
    retype: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "collection|Queue<0^>()<core|Object?>", true),
    removeFirst: _ti => _ti[_eval]("DelegatingQueue.E()"),
    removeLast: _ti => _ti[_eval]("DelegatingQueue.E()")
  }, dart.getMethods(dart.global.Object.getPrototypeOf(wrappers.DelegatingQueue))));
  dart.setMethodsDefaultTypeArgSignature(wrappers.DelegatingQueue, () => dart.global.Object.setPrototypeOf({
    cast: _ti => [dart_rti._Universe.eval(dart_rti._theUniverse(), "@", true)],
    [$cast]: _ti => [dart_rti._Universe.eval(dart_rti._theUniverse(), "@", true)],
    retype: _ti => [dart_rti._Universe.eval(dart_rti._theUniverse(), "@", true)]
  }, dart.getMethodsDefaultTypeArgs(dart.global.Object.getPrototypeOf(wrappers.DelegatingQueue))));
  dart.setStaticMethodSignature(wrappers.DelegatingQueue, () => ['typed']);
  dart.setLibraryUri(wrappers.DelegatingQueue, I[2]);
  dart.setFieldSignature(wrappers.DelegatingQueue, () => dart.global.Object.setPrototypeOf({[_base$]: {
      type: _ti => _ti[_eval]("collection|Queue<DelegatingQueue.E>"),
      isConst: false,
      isFinal: true,
      libraryUri: I[3]
    }}, dart.getFields(dart.global.Object.getPrototypeOf(wrappers.DelegatingQueue))));
  dart.defineExtensionMethods(wrappers.DelegatingQueue, ['cast']);
  var _base$4 = dart.privateName(wrappers, "DelegatingMap._base");
  wrappers.DelegatingMap = class DelegatingMap extends core.Object {
    get [_base$]() {
      return this[_base$4];
    }
    set [_base$](value) {
      super[_base$] = value;
    }
    static ['_#new#tearOff'](K, V, base) {
      return new wrappers.DelegatingMap.new(dart_rti.instanceType(this)[_bind](K)[_bind](V)[_eval]("collection__src__wrappers|DelegatingMap<1,2>"), base);
    }
    static typed(K, V, base) {
      return base[$cast](dart_rti.instanceType(this)[_bind](K)[_eval]("1"), dart_rti.instanceType(this)[_bind](V)[_eval]("1"));
    }
    _get(key) {
      return this[_base$][$_get](key);
    }
    _set(key, value) {
      let value$ = value;
      dart_rti.instanceType(this)[_eval]("DelegatingMap.K")[_as](key);
      dart_rti.instanceType(this)[_eval]("DelegatingMap.V")[_as](value$);
      this[_base$][$_set](key, value$);
      return value;
    }
    addAll(other) {
      dart_rti.instanceType(this)[_eval]("core|Map<DelegatingMap.K,DelegatingMap.V>")[_as](other);
      this[_base$][$addAll](other);
    }
    addEntries(entries) {
      dart_rti.instanceType(this)[_eval]("core|Iterable<core|MapEntry<DelegatingMap.K,DelegatingMap.V>>")[_as](entries);
      this[_base$][$addEntries](entries);
    }
    clear() {
      this[_base$][$clear]();
    }
    cast(K2, V2) {
      return this[_base$][$cast](dart_rti.instanceType(this)[_bind](K2)[_eval]("1"), dart_rti.instanceType(this)[_bind](V2)[_eval]("1"));
    }
    containsKey(key) {
      return this[_base$][$containsKey](key);
    }
    containsValue(value) {
      return this[_base$][$containsValue](value);
    }
    get entries() {
      return this[_base$][$entries];
    }
    forEach(f) {
      this[_base$][$forEach](f);
    }
    get isEmpty() {
      return this[_base$][$isEmpty];
    }
    get isNotEmpty() {
      return this[_base$][$isNotEmpty];
    }
    get keys() {
      return this[_base$][$keys];
    }
    get length() {
      return this[_base$][$length];
    }
    map(K2, V2, transform) {
      return this[_base$][$map](dart_rti.instanceType(this)[_bind](K2)[_eval]("1"), dart_rti.instanceType(this)[_bind](V2)[_eval]("1"), transform);
    }
    putIfAbsent(key, ifAbsent) {
      dart_rti.instanceType(this)[_eval]("DelegatingMap.K")[_as](key);
      dart_rti.instanceType(this)[_eval]("DelegatingMap.V()")[_as](ifAbsent);
      return this[_base$][$putIfAbsent](key, ifAbsent);
    }
    remove(key) {
      return this[_base$][$remove](key);
    }
    removeWhere(test) {
      return this[_base$][$removeWhere](test);
    }
    retype(K2, V2) {
      return this.cast(dart_rti.instanceType(this)[_bind](K2)[_eval]("1"), dart_rti.instanceType(this)[_bind](V2)[_eval]("1"));
    }
    get values() {
      return this[_base$][$values];
    }
    toString() {
      return dart.toString(this[_base$]);
    }
    update(key, update, opts) {
      dart_rti.instanceType(this)[_eval]("DelegatingMap.K")[_as](key);
      dart_rti.instanceType(this)[_eval]("DelegatingMap.V(DelegatingMap.V)")[_as](update);
      let ifAbsent = opts && 'ifAbsent' in opts ? opts.ifAbsent : null;
      dart_rti.instanceType(this)[_eval]("DelegatingMap.V()?")[_as](ifAbsent);
      return this[_base$][$update](key, update, {ifAbsent: ifAbsent});
    }
    updateAll(update) {
      dart_rti.instanceType(this)[_eval]("DelegatingMap.V(DelegatingMap.K,DelegatingMap.V)")[_as](update);
      return this[_base$][$updateAll](update);
    }
  };
  (wrappers.DelegatingMap.new = function(_ti, base) {
    this.$ti = this.$ti || _ti || dart.getReifiedType(this);
    this[_base$4] = base;
    ;
  }).prototype = wrappers.DelegatingMap.prototype;
  dart.addRtiResources(wrappers.DelegatingMap, ["collection__src__wrappers|DelegatingMap", "core|Map"]);
  dart.setMethodSignature(wrappers.DelegatingMap, () => dart.global.Object.setPrototypeOf({
    _get: _ti => _ti[_eval]("DelegatingMap.V?(core|Object?)"),
    [$_get]: _ti => _ti[_eval]("DelegatingMap.V?(core|Object?)"),
    _set: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "~(core|Object?,core|Object?)", true),
    [$_set]: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "~(core|Object?,core|Object?)", true),
    addAll: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "~(core|Object?)", true),
    [$addAll]: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "~(core|Object?)", true),
    addEntries: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "~(core|Object?)", true),
    [$addEntries]: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "~(core|Object?)", true),
    clear: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "~()", true),
    [$clear]: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "~()", true),
    cast: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|Map<0^,1^>()<core|Object?,core|Object?>", true),
    [$cast]: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|Map<0^,1^>()<core|Object?,core|Object?>", true),
    containsKey: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|bool(core|Object?)", true),
    [$containsKey]: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|bool(core|Object?)", true),
    containsValue: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|bool(core|Object?)", true),
    [$containsValue]: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|bool(core|Object?)", true),
    forEach: _ti => _ti[_eval]("~(~(DelegatingMap.K,DelegatingMap.V))"),
    [$forEach]: _ti => _ti[_eval]("~(~(DelegatingMap.K,DelegatingMap.V))"),
    map: _ti => _ti[_eval]("core|Map<0^,1^>(core|MapEntry<0^,1^>(DelegatingMap.K,DelegatingMap.V))<core|Object?,core|Object?>"),
    [$map]: _ti => _ti[_eval]("core|Map<0^,1^>(core|MapEntry<0^,1^>(DelegatingMap.K,DelegatingMap.V))<core|Object?,core|Object?>"),
    putIfAbsent: _ti => _ti[_eval]("DelegatingMap.V(core|Object?,core|Object?)"),
    [$putIfAbsent]: _ti => _ti[_eval]("DelegatingMap.V(core|Object?,core|Object?)"),
    remove: _ti => _ti[_eval]("DelegatingMap.V?(core|Object?)"),
    [$remove]: _ti => _ti[_eval]("DelegatingMap.V?(core|Object?)"),
    removeWhere: _ti => _ti[_eval]("~(core|bool(DelegatingMap.K,DelegatingMap.V))"),
    [$removeWhere]: _ti => _ti[_eval]("~(core|bool(DelegatingMap.K,DelegatingMap.V))"),
    retype: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|Map<0^,1^>()<core|Object?,core|Object?>", true),
    update: _ti => _ti[_eval]("DelegatingMap.V(core|Object?,core|Object?{ifAbsent:core|Object?})"),
    [$update]: _ti => _ti[_eval]("DelegatingMap.V(core|Object?,core|Object?{ifAbsent:core|Object?})"),
    updateAll: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "~(core|Object?)", true),
    [$updateAll]: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "~(core|Object?)", true)
  }, dart.getMethods(dart.global.Object.getPrototypeOf(wrappers.DelegatingMap))));
  dart.setMethodsDefaultTypeArgSignature(wrappers.DelegatingMap, () => dart.global.Object.setPrototypeOf({
    cast: _ti => [dart_rti._Universe.eval(dart_rti._theUniverse(), "@", true), dart_rti._Universe.eval(dart_rti._theUniverse(), "@", true)],
    [$cast]: _ti => [dart_rti._Universe.eval(dart_rti._theUniverse(), "@", true), dart_rti._Universe.eval(dart_rti._theUniverse(), "@", true)],
    map: _ti => [dart_rti._Universe.eval(dart_rti._theUniverse(), "@", true), dart_rti._Universe.eval(dart_rti._theUniverse(), "@", true)],
    [$map]: _ti => [dart_rti._Universe.eval(dart_rti._theUniverse(), "@", true), dart_rti._Universe.eval(dart_rti._theUniverse(), "@", true)],
    retype: _ti => [dart_rti._Universe.eval(dart_rti._theUniverse(), "@", true), dart_rti._Universe.eval(dart_rti._theUniverse(), "@", true)]
  }, dart.getMethodsDefaultTypeArgs(dart.global.Object.getPrototypeOf(wrappers.DelegatingMap))));
  dart.setStaticMethodSignature(wrappers.DelegatingMap, () => ['typed']);
  dart.setGetterSignature(wrappers.DelegatingMap, () => dart.global.Object.setPrototypeOf({
    entries: _ti => _ti[_eval]("core|Iterable<core|MapEntry<DelegatingMap.K,DelegatingMap.V>>"),
    [$entries]: _ti => _ti[_eval]("core|Iterable<core|MapEntry<DelegatingMap.K,DelegatingMap.V>>"),
    isEmpty: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|bool", true),
    [$isEmpty]: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|bool", true),
    isNotEmpty: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|bool", true),
    [$isNotEmpty]: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|bool", true),
    keys: _ti => _ti[_eval]("core|Iterable<DelegatingMap.K>"),
    [$keys]: _ti => _ti[_eval]("core|Iterable<DelegatingMap.K>"),
    length: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|int", true),
    [$length]: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|int", true),
    values: _ti => _ti[_eval]("core|Iterable<DelegatingMap.V>"),
    [$values]: _ti => _ti[_eval]("core|Iterable<DelegatingMap.V>")
  }, dart.getGetters(dart.global.Object.getPrototypeOf(wrappers.DelegatingMap))));
  dart.setLibraryUri(wrappers.DelegatingMap, I[2]);
  dart.setFieldSignature(wrappers.DelegatingMap, () => dart.global.Object.setPrototypeOf({[_base$]: {
      type: _ti => _ti[_eval]("core|Map<DelegatingMap.K,DelegatingMap.V>"),
      isConst: false,
      isFinal: true,
      libraryUri: I[1]
    }}, dart.getFields(dart.global.Object.getPrototypeOf(wrappers.DelegatingMap))));
  dart.defineExtensionMethods(wrappers.DelegatingMap, [
    '_get',
    '_set',
    'addAll',
    'addEntries',
    'clear',
    'cast',
    'containsKey',
    'containsValue',
    'forEach',
    'map',
    'putIfAbsent',
    'remove',
    'removeWhere',
    'toString',
    'update',
    'updateAll'
  ]);
  dart.defineExtensionAccessors(wrappers.DelegatingMap, [
    'entries',
    'isEmpty',
    'isNotEmpty',
    'keys',
    'length',
    'values'
  ]);
  var _baseMap = dart.privateName(wrappers, "_baseMap");
  unmodifiable_wrappers.UnmodifiableSetMixin = class UnmodifiableSetMixin extends core.Object {
    static _throw() {
      dart.throw(new core.UnsupportedError.new("Cannot modify an unmodifiable Set"));
    }
    add(value) {
      dart_rti.instanceType(this)[_eval]("UnmodifiableSetMixin.E")[_as](value);
      return unmodifiable_wrappers.UnmodifiableSetMixin._throw();
    }
    addAll(elements) {
      dart_rti.instanceType(this)[_eval]("core|Iterable<UnmodifiableSetMixin.E>")[_as](elements);
      return unmodifiable_wrappers.UnmodifiableSetMixin._throw();
    }
    remove(value) {
      return unmodifiable_wrappers.UnmodifiableSetMixin._throw();
    }
    removeAll(elements) {
      return unmodifiable_wrappers.UnmodifiableSetMixin._throw();
    }
    retainAll(elements) {
      return unmodifiable_wrappers.UnmodifiableSetMixin._throw();
    }
    removeWhere(test) {
      return unmodifiable_wrappers.UnmodifiableSetMixin._throw();
    }
    retainWhere(test) {
      return unmodifiable_wrappers.UnmodifiableSetMixin._throw();
    }
    clear() {
      return unmodifiable_wrappers.UnmodifiableSetMixin._throw();
    }
    [Symbol.iterator]() {
      return new dart.JsIterator(this[$iterator]);
    }
  };
  (unmodifiable_wrappers.UnmodifiableSetMixin.new = function(_ti) {
    this.$ti = this.$ti || _ti || dart.getReifiedType(this);
    ;
  }).prototype = unmodifiable_wrappers.UnmodifiableSetMixin.prototype;
  dart.addRtiResources(unmodifiable_wrappers.UnmodifiableSetMixin, ["collection__src__unmodifiable_wrappers|UnmodifiableSetMixin", "core|Set", "core|Iterable", "core|_SetIterable", "_internal|EfficientLengthIterable", "_internal|HideEfficientLengthIterable", "core|Iterable", "core|Iterable"]);
  dart.setMethodSignature(unmodifiable_wrappers.UnmodifiableSetMixin, () => dart.global.Object.setPrototypeOf({
    add: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|bool(core|Object?)", true),
    addAll: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "~(core|Object?)", true),
    remove: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|bool(core|Object?)", true),
    removeAll: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "~(core|Iterable<@>)", true),
    retainAll: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "~(core|Iterable<@>)", true),
    removeWhere: _ti => _ti[_eval]("~(core|bool(UnmodifiableSetMixin.E))"),
    retainWhere: _ti => _ti[_eval]("~(core|bool(UnmodifiableSetMixin.E))"),
    clear: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "~()", true)
  }, dart.getMethods(dart.global.Object.getPrototypeOf(unmodifiable_wrappers.UnmodifiableSetMixin))));
  dart.setStaticMethodSignature(unmodifiable_wrappers.UnmodifiableSetMixin, () => ['_throw']);
  dart.setLibraryUri(unmodifiable_wrappers.UnmodifiableSetMixin, I[4]);
  const _DelegatingIterableBase_UnmodifiableSetMixin$36 = class _DelegatingIterableBase_UnmodifiableSetMixin extends wrappers._DelegatingIterableBase {};
  (_DelegatingIterableBase_UnmodifiableSetMixin$36.new = function(_ti) {
    dart.global.Object.getPrototypeOf(_DelegatingIterableBase_UnmodifiableSetMixin$36).new.call(this, null);
  }).prototype = _DelegatingIterableBase_UnmodifiableSetMixin$36.prototype;
  dart.applyMixin(_DelegatingIterableBase_UnmodifiableSetMixin$36, unmodifiable_wrappers.UnmodifiableSetMixin);
  wrappers.MapKeySet = class MapKeySet extends _DelegatingIterableBase_UnmodifiableSetMixin$36 {
    static ['_#new#tearOff'](E, _baseMap) {
      return new wrappers.MapKeySet.new(dart_rti.instanceType(this)[_bind](E)[_eval]("collection__src__wrappers|MapKeySet<1>"), _baseMap);
    }
    get [_base$]() {
      return this[_baseMap][$keys];
    }
    cast(T) {
      if (dart_rti.instanceType(this)[_bind](T)[_eval]("collection__src__wrappers|MapKeySet<1>")[_is](this)) {
        return dart_rti.instanceType(this)[_bind](T)[_eval]("collection__src__wrappers|MapKeySet<1>")[_as](this);
      }
      return core.Set.castFrom(dart_rti.instanceType(this)[_eval]("MapKeySet.E"), dart_rti.instanceType(this)[_bind](T)[_eval]("1"), this);
    }
    contains(element) {
      return this[_baseMap][$containsKey](element);
    }
    get isEmpty() {
      return this[_baseMap][$isEmpty];
    }
    get isNotEmpty() {
      return this[_baseMap][$isNotEmpty];
    }
    get length() {
      return this[_baseMap][$length];
    }
    toString() {
      return collection.SetBase.setToString(this);
    }
    containsAll(other) {
      return other[$every](dart.bind(this, 'contains'));
    }
    difference(other) {
      return this.where(dart.fn(element => !other.contains(element), dart_rti.instanceType(this)[_eval]("core|bool(MapKeySet.E)")))[$toSet]();
    }
    intersection(other) {
      return this.where(dart.bind(other, 'contains'))[$toSet]();
    }
    lookup(element) {
      return dart.throw(new core.UnsupportedError.new("MapKeySet doesn't support lookup()."));
    }
    retype(T) {
      return core.Set.castFrom(dart_rti.instanceType(this)[_eval]("MapKeySet.E"), dart_rti.instanceType(this)[_bind](T)[_eval]("1"), this);
    }
    union(other) {
      let t$360;
      dart_rti.instanceType(this)[_eval]("core|Set<MapKeySet.E>")[_as](other);
      t$360 = this.toSet();
      return (() => {
        t$360.addAll(other);
        return t$360;
      })();
    }
  };
  (wrappers.MapKeySet.new = function(_ti, _baseMap$) {
    this.$ti = this.$ti || _ti || dart.getReifiedType(this);
    this[_baseMap] = _baseMap$;
    dart.global.Object.getPrototypeOf(wrappers.MapKeySet).new.call(this, null);
    ;
  }).prototype = wrappers.MapKeySet.prototype;
  dart.addRtiResources(wrappers.MapKeySet, ["collection__src__wrappers|MapKeySet"]);
  dart.setMethodSignature(wrappers.MapKeySet, () => dart.global.Object.setPrototypeOf({
    cast: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|Set<0^>()<core|Object?>", true),
    [$cast]: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|Set<0^>()<core|Object?>", true),
    containsAll: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|bool(core|Iterable<core|Object?>)", true),
    difference: _ti => _ti[_eval]("core|Set<MapKeySet.E>(core|Set<core|Object?>)"),
    intersection: _ti => _ti[_eval]("core|Set<MapKeySet.E>(core|Set<core|Object?>)"),
    lookup: _ti => _ti[_eval]("MapKeySet.E(core|Object?)"),
    retype: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|Set<0^>()<core|Object?>", true),
    union: _ti => _ti[_eval]("core|Set<MapKeySet.E>(core|Object?)")
  }, dart.getMethods(dart.global.Object.getPrototypeOf(wrappers.MapKeySet))));
  dart.setMethodsDefaultTypeArgSignature(wrappers.MapKeySet, () => dart.global.Object.setPrototypeOf({
    cast: _ti => [dart_rti._Universe.eval(dart_rti._theUniverse(), "@", true)],
    [$cast]: _ti => [dart_rti._Universe.eval(dart_rti._theUniverse(), "@", true)],
    retype: _ti => [dart_rti._Universe.eval(dart_rti._theUniverse(), "@", true)]
  }, dart.getMethodsDefaultTypeArgs(dart.global.Object.getPrototypeOf(wrappers.MapKeySet))));
  dart.setGetterSignature(wrappers.MapKeySet, () => dart.global.Object.setPrototypeOf({
    [_base$]: _ti => _ti[_eval]("core|Iterable<MapKeySet.E>")
  }, dart.getGetters(dart.global.Object.getPrototypeOf(wrappers.MapKeySet))));
  dart.setLibraryUri(wrappers.MapKeySet, I[2]);
  dart.setFieldSignature(wrappers.MapKeySet, () => dart.global.Object.setPrototypeOf({[_baseMap]: {
      type: _ti => _ti[_eval]("core|Map<MapKeySet.E,@>"),
      isConst: false,
      isFinal: true,
      libraryUri: I[1]
    }}, dart.getFields(dart.global.Object.getPrototypeOf(wrappers.MapKeySet))));
  dart.defineExtensionMethods(wrappers.MapKeySet, ['cast', 'contains', 'toString']);
  dart.defineExtensionAccessors(wrappers.MapKeySet, ['isEmpty', 'isNotEmpty', 'length']);
  var _keyForValue = dart.privateName(wrappers, "_keyForValue");
  wrappers.MapValueSet = class MapValueSet extends wrappers._DelegatingIterableBase {
    static ['_#new#tearOff'](K, V, _baseMap, _keyForValue) {
      return new wrappers.MapValueSet.new(dart_rti.instanceType(this)[_bind](K)[_bind](V)[_eval]("collection__src__wrappers|MapValueSet<1,2>"), _baseMap, _keyForValue);
    }
    get [_base$]() {
      return this[_baseMap][$values];
    }
    cast(T) {
      if (dart_rti.instanceType(this)[_bind](T)[_eval]("core|Set<1>")[_is](this)) {
        return dart_rti.instanceType(this)[_bind](T)[_eval]("core|Set<1>")[_as](this);
      }
      return core.Set.castFrom(dart_rti.instanceType(this)[_eval]("MapValueSet.V"), dart_rti.instanceType(this)[_bind](T)[_eval]("1"), this);
    }
    contains(element) {
      let t$360;
      if (!dart_rti.instanceType(this)[_eval]("MapValueSet.V")[_is](element)) return false;
      let key = (t$360 = element, this[_keyForValue](t$360));
      return this[_baseMap][$containsKey](key);
    }
    get isEmpty() {
      return this[_baseMap][$isEmpty];
    }
    get isNotEmpty() {
      return this[_baseMap][$isNotEmpty];
    }
    get length() {
      return this[_baseMap][$length];
    }
    toString() {
      return dart.toString(this.toSet());
    }
    add(value) {
      let t$360;
      dart_rti.instanceType(this)[_eval]("MapValueSet.V")[_as](value);
      let key = (t$360 = value, this[_keyForValue](t$360));
      let result = false;
      this[_baseMap][$putIfAbsent](key, dart.fn(() => {
        result = true;
        return value;
      }, dart_rti.instanceType(this)[_eval]("MapValueSet.V()")));
      return result;
    }
    addAll(elements) {
      dart_rti.instanceType(this)[_eval]("core|Iterable<MapValueSet.V>")[_as](elements);
      return elements[$forEach](dart.bind(this, 'add'));
    }
    clear() {
      return this[_baseMap][$clear]();
    }
    containsAll(other) {
      return other[$every](dart.bind(this, 'contains'));
    }
    difference(other) {
      return this.where(dart.fn(element => !other.contains(element), dart_rti.instanceType(this)[_eval]("core|bool(MapValueSet.V)")))[$toSet]();
    }
    intersection(other) {
      return this.where(dart.bind(other, 'contains'))[$toSet]();
    }
    lookup(element) {
      let t$360;
      if (!dart_rti.instanceType(this)[_eval]("MapValueSet.V")[_is](element)) return null;
      let key = (t$360 = element, this[_keyForValue](t$360));
      return this[_baseMap][$_get](key);
    }
    remove(element) {
      let t$360;
      if (!dart_rti.instanceType(this)[_eval]("MapValueSet.V")[_is](element)) return false;
      let key = (t$360 = element, this[_keyForValue](t$360));
      if (!this[_baseMap][$containsKey](key)) return false;
      this[_baseMap][$remove](key);
      return true;
    }
    removeAll(elements) {
      return elements[$forEach](dart.bind(this, 'remove'));
    }
    removeWhere(test) {
      let toRemove = _interceptors.JSArray.of(dart_rti.instanceType(this)[_eval]("_interceptors|JSArray<MapValueSet.K>"), []);
      this[_baseMap][$forEach](dart.fn((key, value) => {
        if (test(value)) toRemove[$add](key);
      }, dart_rti.instanceType(this)[_eval]("~(MapValueSet.K,MapValueSet.V)")));
      toRemove[$forEach](dart.bind(this[_baseMap], $remove));
    }
    retainAll(elements) {
      let t$360, t$360$;
      let valuesToRetain = new _js_helper.IdentitySet.new(dart_rti.instanceType(this)[_eval]("_js_helper|IdentitySet<MapValueSet.V>"));
      for (let element of elements) {
        if (!dart_rti.instanceType(this)[_eval]("MapValueSet.V")[_is](element)) continue;
        let key = (t$360 = element, this[_keyForValue](t$360));
        if (!this[_baseMap][$containsKey](key)) continue;
        valuesToRetain.add((t$360$ = this[_baseMap][$_get](key), t$360$ == null ? dart_rti.instanceType(this)[_eval]("MapValueSet.V")[_as](null) : t$360$));
      }
      let keysToRemove = _interceptors.JSArray.of(dart_rti.instanceType(this)[_eval]("_interceptors|JSArray<MapValueSet.K>"), []);
      this[_baseMap][$forEach](dart.fn((k, v) => {
        if (!valuesToRetain.contains(v)) keysToRemove[$add](k);
      }, dart_rti.instanceType(this)[_eval]("~(MapValueSet.K,MapValueSet.V)")));
      keysToRemove[$forEach](dart.bind(this[_baseMap], $remove));
    }
    retainWhere(test) {
      return this.removeWhere(dart.fn(element => !test(element), dart_rti.instanceType(this)[_eval]("core|bool(MapValueSet.V)")));
    }
    retype(T) {
      return core.Set.castFrom(dart_rti.instanceType(this)[_eval]("MapValueSet.V"), dart_rti.instanceType(this)[_bind](T)[_eval]("1"), this);
    }
    union(other) {
      let t$360;
      dart_rti.instanceType(this)[_eval]("core|Set<MapValueSet.V>")[_as](other);
      t$360 = this.toSet();
      return (() => {
        t$360.addAll(other);
        return t$360;
      })();
    }
  };
  (wrappers.MapValueSet.new = function(_ti, _baseMap$, _keyForValue$) {
    this.$ti = this.$ti || _ti || dart.getReifiedType(this);
    this[_baseMap] = _baseMap$;
    this[_keyForValue] = _keyForValue$;
    dart.global.Object.getPrototypeOf(wrappers.MapValueSet).new.call(this, null);
    ;
  }).prototype = wrappers.MapValueSet.prototype;
  dart.addRtiResources(wrappers.MapValueSet, ["collection__src__wrappers|MapValueSet", "core|Set", "core|Iterable", "core|_SetIterable", "_internal|EfficientLengthIterable", "_internal|HideEfficientLengthIterable", "core|Iterable", "core|Iterable"]);
  dart.setMethodSignature(wrappers.MapValueSet, () => dart.global.Object.setPrototypeOf({
    cast: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|Set<0^>()<core|Object?>", true),
    [$cast]: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|Set<0^>()<core|Object?>", true),
    add: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|bool(core|Object?)", true),
    addAll: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "~(core|Object?)", true),
    clear: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "~()", true),
    containsAll: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|bool(core|Iterable<core|Object?>)", true),
    difference: _ti => _ti[_eval]("core|Set<MapValueSet.V>(core|Set<core|Object?>)"),
    intersection: _ti => _ti[_eval]("core|Set<MapValueSet.V>(core|Set<core|Object?>)"),
    lookup: _ti => _ti[_eval]("MapValueSet.V?(core|Object?)"),
    remove: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|bool(core|Object?)", true),
    removeAll: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "~(core|Iterable<core|Object?>)", true),
    removeWhere: _ti => _ti[_eval]("~(core|bool(MapValueSet.V))"),
    retainAll: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "~(core|Iterable<core|Object?>)", true),
    retainWhere: _ti => _ti[_eval]("~(core|bool(MapValueSet.V))"),
    retype: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|Set<0^>()<core|Object?>", true),
    union: _ti => _ti[_eval]("core|Set<MapValueSet.V>(core|Object?)")
  }, dart.getMethods(dart.global.Object.getPrototypeOf(wrappers.MapValueSet))));
  dart.setMethodsDefaultTypeArgSignature(wrappers.MapValueSet, () => dart.global.Object.setPrototypeOf({
    cast: _ti => [dart_rti._Universe.eval(dart_rti._theUniverse(), "@", true)],
    [$cast]: _ti => [dart_rti._Universe.eval(dart_rti._theUniverse(), "@", true)],
    retype: _ti => [dart_rti._Universe.eval(dart_rti._theUniverse(), "@", true)]
  }, dart.getMethodsDefaultTypeArgs(dart.global.Object.getPrototypeOf(wrappers.MapValueSet))));
  dart.setGetterSignature(wrappers.MapValueSet, () => dart.global.Object.setPrototypeOf({
    [_base$]: _ti => _ti[_eval]("core|Iterable<MapValueSet.V>")
  }, dart.getGetters(dart.global.Object.getPrototypeOf(wrappers.MapValueSet))));
  dart.setLibraryUri(wrappers.MapValueSet, I[2]);
  dart.setFieldSignature(wrappers.MapValueSet, () => dart.global.Object.setPrototypeOf({
    [_baseMap]: {
      type: _ti => _ti[_eval]("core|Map<MapValueSet.K,MapValueSet.V>"),
      isConst: false,
      isFinal: true,
      libraryUri: I[1]
    },
    [_keyForValue]: {
      type: _ti => _ti[_eval]("MapValueSet.K(MapValueSet.V)"),
      isConst: false,
      isFinal: true
    }
  }, dart.getFields(dart.global.Object.getPrototypeOf(wrappers.MapValueSet))));
  dart.defineExtensionMethods(wrappers.MapValueSet, ['cast', 'contains', 'toString']);
  dart.defineExtensionAccessors(wrappers.MapValueSet, ['isEmpty', 'isNotEmpty', 'length']);
  unmodifiable_wrappers.NonGrowableListMixin = class NonGrowableListMixin extends core.Object {
    static _throw() {
      dart.throw(new core.UnsupportedError.new("Cannot change the length of a fixed-length list"));
    }
    set length(newLength) {
      return unmodifiable_wrappers.NonGrowableListMixin._throw();
    }
    add(value) {
      dart_rti.instanceType(this)[_eval]("NonGrowableListMixin.E")[_as](value);
      return unmodifiable_wrappers.NonGrowableListMixin._throw();
    }
    addAll(iterable) {
      dart_rti.instanceType(this)[_eval]("core|Iterable<NonGrowableListMixin.E>")[_as](iterable);
      return unmodifiable_wrappers.NonGrowableListMixin._throw();
    }
    insert(index, element) {
      dart_rti.instanceType(this)[_eval]("NonGrowableListMixin.E")[_as](element);
      return unmodifiable_wrappers.NonGrowableListMixin._throw();
    }
    insertAll(index, iterable) {
      dart_rti.instanceType(this)[_eval]("core|Iterable<NonGrowableListMixin.E>")[_as](iterable);
      return unmodifiable_wrappers.NonGrowableListMixin._throw();
    }
    remove(value) {
      return unmodifiable_wrappers.NonGrowableListMixin._throw();
    }
    removeAt(index) {
      return unmodifiable_wrappers.NonGrowableListMixin._throw();
    }
    removeLast() {
      return unmodifiable_wrappers.NonGrowableListMixin._throw();
    }
    removeWhere(test) {
      return unmodifiable_wrappers.NonGrowableListMixin._throw();
    }
    retainWhere(test) {
      return unmodifiable_wrappers.NonGrowableListMixin._throw();
    }
    removeRange(start, end) {
      return unmodifiable_wrappers.NonGrowableListMixin._throw();
    }
    replaceRange(start, end, iterable) {
      dart_rti.instanceType(this)[_eval]("core|Iterable<NonGrowableListMixin.E>")[_as](iterable);
      return unmodifiable_wrappers.NonGrowableListMixin._throw();
    }
    clear() {
      return unmodifiable_wrappers.NonGrowableListMixin._throw();
    }
    [Symbol.iterator]() {
      return new dart.JsIterator(this[$iterator]);
    }
  };
  (unmodifiable_wrappers.NonGrowableListMixin.new = function(_ti) {
    this.$ti = this.$ti || _ti || dart.getReifiedType(this);
    ;
  }).prototype = unmodifiable_wrappers.NonGrowableListMixin.prototype;
  dart.addRtiResources(unmodifiable_wrappers.NonGrowableListMixin, ["collection__src__unmodifiable_wrappers|NonGrowableListMixin", "core|List", "core|Iterable", "core|_ListIterable", "_internal|EfficientLengthIterable", "_internal|HideEfficientLengthIterable", "core|Iterable", "core|Iterable"]);
  dart.setMethodSignature(unmodifiable_wrappers.NonGrowableListMixin, () => dart.global.Object.setPrototypeOf({
    add: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|bool(core|Object?)", true),
    [$add]: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|bool(core|Object?)", true),
    addAll: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "~(core|Object?)", true),
    [$addAll]: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "~(core|Object?)", true),
    insert: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "~(core|int,core|Object?)", true),
    [$insert]: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "~(core|int,core|Object?)", true),
    insertAll: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "~(core|int,core|Object?)", true),
    [$insertAll]: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "~(core|int,core|Object?)", true),
    remove: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|bool(core|Object?)", true),
    [$remove]: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|bool(core|Object?)", true),
    removeAt: _ti => _ti[_eval]("NonGrowableListMixin.E(core|int)"),
    [$removeAt]: _ti => _ti[_eval]("NonGrowableListMixin.E(core|int)"),
    removeLast: _ti => _ti[_eval]("NonGrowableListMixin.E()"),
    [$removeLast]: _ti => _ti[_eval]("NonGrowableListMixin.E()"),
    removeWhere: _ti => _ti[_eval]("~(core|bool(NonGrowableListMixin.E))"),
    [$removeWhere]: _ti => _ti[_eval]("~(core|bool(NonGrowableListMixin.E))"),
    retainWhere: _ti => _ti[_eval]("~(core|bool(NonGrowableListMixin.E))"),
    [$retainWhere]: _ti => _ti[_eval]("~(core|bool(NonGrowableListMixin.E))"),
    removeRange: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "~(core|int,core|int)", true),
    [$removeRange]: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "~(core|int,core|int)", true),
    replaceRange: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "~(core|int,core|int,core|Object?)", true),
    [$replaceRange]: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "~(core|int,core|int,core|Object?)", true),
    clear: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "~()", true),
    [$clear]: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "~()", true)
  }, dart.getMethods(dart.global.Object.getPrototypeOf(unmodifiable_wrappers.NonGrowableListMixin))));
  dart.setStaticMethodSignature(unmodifiable_wrappers.NonGrowableListMixin, () => ['_throw']);
  dart.setSetterSignature(unmodifiable_wrappers.NonGrowableListMixin, () => dart.global.Object.setPrototypeOf({
    length: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|int", true),
    [$length]: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|int", true)
  }, dart.getSetters(dart.global.Object.getPrototypeOf(unmodifiable_wrappers.NonGrowableListMixin))));
  dart.setLibraryUri(unmodifiable_wrappers.NonGrowableListMixin, I[4]);
  dart.defineExtensionMethods(unmodifiable_wrappers.NonGrowableListMixin, [
    'add',
    'addAll',
    'insert',
    'insertAll',
    'remove',
    'removeAt',
    'removeLast',
    'removeWhere',
    'retainWhere',
    'removeRange',
    'replaceRange',
    'clear'
  ]);
  dart.defineExtensionAccessors(unmodifiable_wrappers.NonGrowableListMixin, ['length']);
  const DelegatingList_NonGrowableListMixin$36 = class DelegatingList_NonGrowableListMixin extends wrappers.DelegatingList {};
  (DelegatingList_NonGrowableListMixin$36.new = function(_ti, base) {
    dart.global.Object.getPrototypeOf(DelegatingList_NonGrowableListMixin$36).new.call(this, null, base);
  }).prototype = DelegatingList_NonGrowableListMixin$36.prototype;
  dart.applyMixin(DelegatingList_NonGrowableListMixin$36, unmodifiable_wrappers.NonGrowableListMixin);
  unmodifiable_wrappers.NonGrowableListView = class NonGrowableListView extends DelegatingList_NonGrowableListMixin$36 {
    static ['_#new#tearOff'](E, listBase) {
      return new unmodifiable_wrappers.NonGrowableListView.new(dart_rti.instanceType(this)[_bind](E)[_eval]("collection__src__unmodifiable_wrappers|NonGrowableListView<1>"), listBase);
    }
  };
  (unmodifiable_wrappers.NonGrowableListView.new = function(_ti, listBase) {
    this.$ti = this.$ti || _ti || dart.getReifiedType(this);
    dart.global.Object.getPrototypeOf(unmodifiable_wrappers.NonGrowableListView).new.call(this, null, listBase);
    ;
  }).prototype = unmodifiable_wrappers.NonGrowableListView.prototype;
  dart.addRtiResources(unmodifiable_wrappers.NonGrowableListView, ["collection__src__unmodifiable_wrappers|NonGrowableListView"]);
  dart.setLibraryUri(unmodifiable_wrappers.NonGrowableListView, I[4]);
  const DelegatingSet_UnmodifiableSetMixin$36 = class DelegatingSet_UnmodifiableSetMixin extends wrappers.DelegatingSet {};
  (DelegatingSet_UnmodifiableSetMixin$36.new = function(_ti, base) {
    dart.global.Object.getPrototypeOf(DelegatingSet_UnmodifiableSetMixin$36).new.call(this, null, base);
  }).prototype = DelegatingSet_UnmodifiableSetMixin$36.prototype;
  dart.applyMixin(DelegatingSet_UnmodifiableSetMixin$36, unmodifiable_wrappers.UnmodifiableSetMixin);
  unmodifiable_wrappers.UnmodifiableSetView = class UnmodifiableSetView extends DelegatingSet_UnmodifiableSetMixin$36 {
    static ['_#new#tearOff'](E, setBase) {
      return new unmodifiable_wrappers.UnmodifiableSetView.new(dart_rti.instanceType(this)[_bind](E)[_eval]("collection__src__unmodifiable_wrappers|UnmodifiableSetView<1>"), setBase);
    }
    static ['_#empty#tearOff'](E) {
      return new empty_unmodifiable_set.EmptyUnmodifiableSet.new(dart_rti.instanceType(this)[_bind](E)[_eval]("collection__src__empty_unmodifiable_set|EmptyUnmodifiableSet<1>"));
    }
  };
  (unmodifiable_wrappers.UnmodifiableSetView.new = function(_ti, setBase) {
    this.$ti = this.$ti || _ti || dart.getReifiedType(this);
    dart.global.Object.getPrototypeOf(unmodifiable_wrappers.UnmodifiableSetView).new.call(this, null, setBase);
    ;
  }).prototype = unmodifiable_wrappers.UnmodifiableSetView.prototype;
  dart.addRtiResources(unmodifiable_wrappers.UnmodifiableSetView, ["collection__src__unmodifiable_wrappers|UnmodifiableSetView"]);
  dart.setStaticMethodSignature(unmodifiable_wrappers.UnmodifiableSetView, () => ['empty']);
  dart.setLibraryUri(unmodifiable_wrappers.UnmodifiableSetView, I[4]);
  unmodifiable_wrappers.UnmodifiableMapMixin = class UnmodifiableMapMixin extends core.Object {
    static _throw() {
      dart.throw(new core.UnsupportedError.new("Cannot modify an unmodifiable Map"));
    }
    _set(key, value) {
      let value$ = value;
      dart_rti.instanceType(this)[_eval]("UnmodifiableMapMixin.K")[_as](key);
      dart_rti.instanceType(this)[_eval]("UnmodifiableMapMixin.V")[_as](value$);
      unmodifiable_wrappers.UnmodifiableMapMixin._throw();
      return value;
    }
    putIfAbsent(key, ifAbsent) {
      dart_rti.instanceType(this)[_eval]("UnmodifiableMapMixin.K")[_as](key);
      dart_rti.instanceType(this)[_eval]("UnmodifiableMapMixin.V()")[_as](ifAbsent);
      return unmodifiable_wrappers.UnmodifiableMapMixin._throw();
    }
    addAll(other) {
      dart_rti.instanceType(this)[_eval]("core|Map<UnmodifiableMapMixin.K,UnmodifiableMapMixin.V>")[_as](other);
      return unmodifiable_wrappers.UnmodifiableMapMixin._throw();
    }
    remove(key) {
      return unmodifiable_wrappers.UnmodifiableMapMixin._throw();
    }
    clear() {
      return unmodifiable_wrappers.UnmodifiableMapMixin._throw();
    }
    set first(_) {
      return unmodifiable_wrappers.UnmodifiableMapMixin._throw();
    }
    set last(_) {
      return unmodifiable_wrappers.UnmodifiableMapMixin._throw();
    }
  };
  (unmodifiable_wrappers.UnmodifiableMapMixin.new = function(_ti) {
    this.$ti = this.$ti || _ti || dart.getReifiedType(this);
    ;
  }).prototype = unmodifiable_wrappers.UnmodifiableMapMixin.prototype;
  dart.addRtiResources(unmodifiable_wrappers.UnmodifiableMapMixin, ["collection__src__unmodifiable_wrappers|UnmodifiableMapMixin", "core|Map"]);
  dart.setMethodSignature(unmodifiable_wrappers.UnmodifiableMapMixin, () => dart.global.Object.setPrototypeOf({
    _set: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "~(core|Object?,core|Object?)", true),
    [$_set]: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "~(core|Object?,core|Object?)", true),
    putIfAbsent: _ti => _ti[_eval]("UnmodifiableMapMixin.V(core|Object?,core|Object?)"),
    [$putIfAbsent]: _ti => _ti[_eval]("UnmodifiableMapMixin.V(core|Object?,core|Object?)"),
    addAll: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "~(core|Object?)", true),
    [$addAll]: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "~(core|Object?)", true),
    remove: _ti => _ti[_eval]("UnmodifiableMapMixin.V(core|Object?)"),
    [$remove]: _ti => _ti[_eval]("UnmodifiableMapMixin.V(core|Object?)"),
    clear: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "~()", true),
    [$clear]: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "~()", true)
  }, dart.getMethods(dart.global.Object.getPrototypeOf(unmodifiable_wrappers.UnmodifiableMapMixin))));
  dart.setStaticMethodSignature(unmodifiable_wrappers.UnmodifiableMapMixin, () => ['_throw']);
  dart.setSetterSignature(unmodifiable_wrappers.UnmodifiableMapMixin, () => dart.global.Object.setPrototypeOf({
    first: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "@", true),
    last: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "@", true)
  }, dart.getSetters(dart.global.Object.getPrototypeOf(unmodifiable_wrappers.UnmodifiableMapMixin))));
  dart.setLibraryUri(unmodifiable_wrappers.UnmodifiableMapMixin, I[4]);
  dart.defineExtensionMethods(unmodifiable_wrappers.UnmodifiableMapMixin, [
    '_set',
    'putIfAbsent',
    'addAll',
    'remove',
    'clear'
  ]);
  var _base$5 = dart.privateName(empty_unmodifiable_set, "_base");
  const Iterable_UnmodifiableSetMixin$36 = class Iterable_UnmodifiableSetMixin extends core.Iterable {};
  (Iterable_UnmodifiableSetMixin$36.new = function(_ti) {
    dart.global.Object.getPrototypeOf(Iterable_UnmodifiableSetMixin$36).new.call(this, null);
  }).prototype = Iterable_UnmodifiableSetMixin$36.prototype;
  dart.applyMixin(Iterable_UnmodifiableSetMixin$36, unmodifiable_wrappers.UnmodifiableSetMixin);
  empty_unmodifiable_set.EmptyUnmodifiableSet = class EmptyUnmodifiableSet extends Iterable_UnmodifiableSetMixin$36 {
    static ['_#new#tearOff'](E) {
      return new empty_unmodifiable_set.EmptyUnmodifiableSet.new(dart_rti.instanceType(this)[_bind](E)[_eval]("collection__src__empty_unmodifiable_set|EmptyUnmodifiableSet<1>"));
    }
    get iterator() {
      return new _internal.EmptyIterable.new(dart_rti.instanceType(this)[_eval]("_internal|EmptyIterable<EmptyUnmodifiableSet.E>"))[$iterator];
    }
    get length() {
      return 0;
    }
    cast(T) {
      return new empty_unmodifiable_set.EmptyUnmodifiableSet.new(dart_rti.instanceType(this)[_bind](T)[_eval]("collection__src__empty_unmodifiable_set|EmptyUnmodifiableSet<1>"));
    }
    contains(element) {
      return false;
    }
    containsAll(other) {
      return other[$isEmpty];
    }
    followedBy(other) {
      dart_rti.instanceType(this)[_eval]("core|Iterable<EmptyUnmodifiableSet.E>")[_as](other);
      return new wrappers.DelegatingIterable.new(dart_rti.instanceType(this)[_eval]("collection__src__wrappers|DelegatingIterable<EmptyUnmodifiableSet.E>"), other);
    }
    lookup(element) {
      return null;
    }
    retype(T) {
      return new empty_unmodifiable_set.EmptyUnmodifiableSet.new(dart_rti.instanceType(this)[_bind](T)[_eval]("collection__src__empty_unmodifiable_set|EmptyUnmodifiableSet<1>"));
    }
    singleWhere(test, opts) {
      let orElse = opts && 'orElse' in opts ? opts.orElse : null;
      dart_rti.instanceType(this)[_eval]("EmptyUnmodifiableSet.E()?")[_as](orElse);
      return orElse != null ? orElse() : dart.throw(new core.StateError.new("No element"));
    }
    whereType(T) {
      return new _internal.EmptyIterable.new(dart_rti.instanceType(this)[_bind](T)[_eval]("_internal|EmptyIterable<1>"));
    }
    toSet() {
      return collection.LinkedHashSet.new(dart_rti.instanceType(this)[_eval]("collection|LinkedHashSet<EmptyUnmodifiableSet.E>"));
    }
    union(other) {
      dart_rti.instanceType(this)[_eval]("core|Set<EmptyUnmodifiableSet.E>")[_as](other);
      return collection.LinkedHashSet.of(dart_rti.instanceType(this)[_eval]("collection|LinkedHashSet<EmptyUnmodifiableSet.E>"), other);
    }
    intersection(other) {
      return collection.LinkedHashSet.new(dart_rti.instanceType(this)[_eval]("collection|LinkedHashSet<EmptyUnmodifiableSet.E>"));
    }
    difference(other) {
      return collection.LinkedHashSet.new(dart_rti.instanceType(this)[_eval]("collection|LinkedHashSet<EmptyUnmodifiableSet.E>"));
    }
    get [_base$]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[0] || CT.C0)));
    }
  };
  (empty_unmodifiable_set.EmptyUnmodifiableSet.new = function(_ti) {
    this.$ti = this.$ti || _ti || dart.getReifiedType(this);
    dart.global.Object.getPrototypeOf(empty_unmodifiable_set.EmptyUnmodifiableSet).new.call(this, null);
    ;
  }).prototype = empty_unmodifiable_set.EmptyUnmodifiableSet.prototype;
  dart.addRtiResources(empty_unmodifiable_set.EmptyUnmodifiableSet, ["collection__src__empty_unmodifiable_set|EmptyUnmodifiableSet", "collection__src__unmodifiable_wrappers|UnmodifiableSetView", "collection__src__wrappers|DelegatingSet", "collection__src__unmodifiable_wrappers|UnmodifiableSetMixin", "collection__src__wrappers|_DelegatingIterableBase", "core|Set", "core|Set", "core|Iterable", "core|Iterable", "core|_SetIterable", "_internal|EfficientLengthIterable", "_internal|HideEfficientLengthIterable", "core|Iterable", "core|Iterable"]);
  dart.setMethodSignature(empty_unmodifiable_set.EmptyUnmodifiableSet, () => dart.global.Object.setPrototypeOf({
    cast: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "collection__src__empty_unmodifiable_set|EmptyUnmodifiableSet<0^>()<core|Object?>", true),
    [$cast]: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "collection__src__empty_unmodifiable_set|EmptyUnmodifiableSet<0^>()<core|Object?>", true),
    containsAll: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|bool(core|Iterable<core|Object?>)", true),
    lookup: _ti => _ti[_eval]("EmptyUnmodifiableSet.E?(core|Object?)"),
    retype: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "collection__src__empty_unmodifiable_set|EmptyUnmodifiableSet<0^>()<core|Object?>", true),
    union: _ti => _ti[_eval]("core|Set<EmptyUnmodifiableSet.E>(core|Object?)"),
    intersection: _ti => _ti[_eval]("core|Set<EmptyUnmodifiableSet.E>(core|Set<core|Object?>)"),
    difference: _ti => _ti[_eval]("core|Set<EmptyUnmodifiableSet.E>(core|Set<core|Object?>)")
  }, dart.getMethods(dart.global.Object.getPrototypeOf(empty_unmodifiable_set.EmptyUnmodifiableSet))));
  dart.setMethodsDefaultTypeArgSignature(empty_unmodifiable_set.EmptyUnmodifiableSet, () => dart.global.Object.setPrototypeOf({
    cast: _ti => [dart_rti._Universe.eval(dart_rti._theUniverse(), "@", true)],
    [$cast]: _ti => [dart_rti._Universe.eval(dart_rti._theUniverse(), "@", true)],
    retype: _ti => [dart_rti._Universe.eval(dart_rti._theUniverse(), "@", true)]
  }, dart.getMethodsDefaultTypeArgs(dart.global.Object.getPrototypeOf(empty_unmodifiable_set.EmptyUnmodifiableSet))));
  dart.setGetterSignature(empty_unmodifiable_set.EmptyUnmodifiableSet, () => dart.global.Object.setPrototypeOf({
    iterator: _ti => _ti[_eval]("core|Iterator<EmptyUnmodifiableSet.E>"),
    [$iterator]: _ti => _ti[_eval]("core|Iterator<EmptyUnmodifiableSet.E>"),
    [_base$]: _ti => _ti[_eval]("core|Set<EmptyUnmodifiableSet.E>")
  }, dart.getGetters(dart.global.Object.getPrototypeOf(empty_unmodifiable_set.EmptyUnmodifiableSet))));
  dart.setLibraryUri(empty_unmodifiable_set.EmptyUnmodifiableSet, I[5]);
  dart.defineExtensionMethods(empty_unmodifiable_set.EmptyUnmodifiableSet, [
    'cast',
    'contains',
    'followedBy',
    'singleWhere',
    'whereType',
    'toSet'
  ]);
  dart.defineExtensionAccessors(empty_unmodifiable_set.EmptyUnmodifiableSet, ['iterator', 'length']);
  dart.moduleConstCaches.set("packages/collection/src/canonicalized_map", C);
  dart_rti._Universe.addRules(dart.typeUniverse, JSON.parse('{"_js_helper|LinkedMap":{"LinkedMap.K":"1","LinkedMap.V":"2","InternalMap.K":"1","InternalMap.V":"2","_js_helper|InternalMap":["1","2"],"MapBase.K":"1","MapBase.V":"2","collection|MapBase":["1","2"],"LinkedHashMap.K":"1","LinkedHashMap.V":"2","collection|LinkedHashMap":["1","2"],"HashMap.K":"1","HashMap.V":"2","collection|HashMap":["1","2"],"Map.K":"1","Map.V":"2","core|Map":["1","2"]},"_js_helper|InternalMap":{"InternalMap.K":"1","InternalMap.V":"2","MapBase.K":"1","MapBase.V":"2","collection|MapBase":["1","2"],"LinkedHashMap.K":"1","LinkedHashMap.V":"2","collection|LinkedHashMap":["1","2"],"HashMap.K":"1","HashMap.V":"2","collection|HashMap":["1","2"],"Map.K":"1","Map.V":"2","core|Map":["1","2"]},"collection|MapBase":{"MapBase.K":"1","MapBase.V":"2","Map.K":"1","Map.V":"2","core|Map":["1","2"]},"collection|LinkedHashMap":{"LinkedHashMap.K":"1","LinkedHashMap.V":"2","Map.K":"1","Map.V":"2","core|Map":["1","2"]},"collection|HashMap":{"HashMap.K":"1","HashMap.V":"2","Map.K":"1","Map.V":"2","core|Map":["1","2"]},"core|Map":{"Map.K":"1","Map.V":"2"},"core|MapEntry":{"MapEntry.K":"1","MapEntry.V":"2"},"collection__src__canonicalized_map|CanonicalizedMap":{"CanonicalizedMap.C":"1","CanonicalizedMap.K":"2","CanonicalizedMap.V":"3","Map.K":"2","Map.V":"3","core|Map":["2","3"]},"core|Iterable":{"Iterable.E":"1"},"core|int":{"core|num":[],"Comparable.T":"core|num","core|Comparable":["core|num"]},"core|num":{"Comparable.T":"core|num","core|Comparable":["core|num"]},"core|Comparable":{"Comparable.T":"1"},"core|Iterator":{"Iterator.E":"1"},"core|String":{"Comparable.T":"core|String","core|Comparable":["core|String"],"core|Pattern":[]},"core|List":{"List.E":"1","Iterable.E":"1","core|Iterable":["1"],"_ListIterable.E":"1","core|_ListIterable":["1"],"EfficientLengthIterable.T":"1","_internal|EfficientLengthIterable":["1"],"HideEfficientLengthIterable.T":"1","_internal|HideEfficientLengthIterable":["1"]},"core|_ListIterable":{"_ListIterable.E":"1","EfficientLengthIterable.T":"1","_internal|EfficientLengthIterable":["1"],"HideEfficientLengthIterable.T":"1","_internal|HideEfficientLengthIterable":["1"],"Iterable.E":"1","core|Iterable":["1"]},"_internal|EfficientLengthIterable":{"EfficientLengthIterable.T":"1","Iterable.E":"1","core|Iterable":["1"]},"_internal|HideEfficientLengthIterable":{"HideEfficientLengthIterable.T":"1","Iterable.E":"1","core|Iterable":["1"]},"core|Set":{"Set.E":"1","Iterable.E":"1","core|Iterable":["1"],"_SetIterable.E":"1","core|_SetIterable":["1"],"EfficientLengthIterable.T":"1","_internal|EfficientLengthIterable":["1"],"HideEfficientLengthIterable.T":"1","_internal|HideEfficientLengthIterable":["1"]},"core|_SetIterable":{"_SetIterable.E":"1","EfficientLengthIterable.T":"1","_internal|EfficientLengthIterable":["1"],"HideEfficientLengthIterable.T":"1","_internal|HideEfficientLengthIterable":["1"],"Iterable.E":"1","core|Iterable":["1"]},"collection__src__wrappers|DelegatingIterable":{"DelegatingIterable.E":"1","_DelegatingIterableBase.E":"1","collection__src__wrappers|_DelegatingIterableBase":["1"],"Iterable.E":"1","core|Iterable":["1"]},"collection__src__wrappers|_DelegatingIterableBase":{"_DelegatingIterableBase.E":"1","Iterable.E":"1","core|Iterable":["1"]},"collection__src__wrappers|DelegatingList":{"DelegatingList.E":"1","_DelegatingIterableBase.E":"1","collection__src__wrappers|_DelegatingIterableBase":["1"],"List.E":"1","core|List":["1"],"Iterable.E":"1","core|Iterable":["1"],"_ListIterable.E":"1","core|_ListIterable":["1"],"EfficientLengthIterable.T":"1","_internal|EfficientLengthIterable":["1"],"HideEfficientLengthIterable.T":"1","_internal|HideEfficientLengthIterable":["1"]},"collection__src__wrappers|DelegatingSet":{"DelegatingSet.E":"1","_DelegatingIterableBase.E":"1","collection__src__wrappers|_DelegatingIterableBase":["1"],"Set.E":"1","core|Set":["1"],"Iterable.E":"1","core|Iterable":["1"],"_SetIterable.E":"1","core|_SetIterable":["1"],"EfficientLengthIterable.T":"1","_internal|EfficientLengthIterable":["1"],"HideEfficientLengthIterable.T":"1","_internal|HideEfficientLengthIterable":["1"]},"collection__src__wrappers|DelegatingQueue":{"DelegatingQueue.E":"1","_DelegatingIterableBase.E":"1","collection__src__wrappers|_DelegatingIterableBase":["1"],"Queue.E":"1","collection|Queue":["1"],"Iterable.E":"1","core|Iterable":["1"],"_QueueIterable.E":"1","collection|_QueueIterable":["1"],"EfficientLengthIterable.T":"1","_internal|EfficientLengthIterable":["1"],"HideEfficientLengthIterable.T":"1","_internal|HideEfficientLengthIterable":["1"]},"collection|Queue":{"Queue.E":"1","Iterable.E":"1","core|Iterable":["1"],"_QueueIterable.E":"1","collection|_QueueIterable":["1"],"EfficientLengthIterable.T":"1","_internal|EfficientLengthIterable":["1"],"HideEfficientLengthIterable.T":"1","_internal|HideEfficientLengthIterable":["1"]},"collection|_QueueIterable":{"_QueueIterable.E":"1","EfficientLengthIterable.T":"1","_internal|EfficientLengthIterable":["1"],"HideEfficientLengthIterable.T":"1","_internal|HideEfficientLengthIterable":["1"],"Iterable.E":"1","core|Iterable":["1"]},"collection__src__wrappers|DelegatingMap":{"DelegatingMap.K":"1","DelegatingMap.V":"2","Map.K":"1","Map.V":"2","core|Map":["1","2"]},"collection__src__wrappers|MapKeySet":{"MapKeySet.E":"1","_DelegatingIterableBase.E":"1","collection__src__wrappers|_DelegatingIterableBase":["1"],"UnmodifiableSetMixin.E":"1","collection__src__unmodifiable_wrappers|UnmodifiableSetMixin":["1"],"Iterable.E":"1","core|Iterable":["1"],"Set.E":"1","core|Set":["1"],"_SetIterable.E":"1","core|_SetIterable":["1"],"EfficientLengthIterable.T":"1","_internal|EfficientLengthIterable":["1"],"HideEfficientLengthIterable.T":"1","_internal|HideEfficientLengthIterable":["1"]},"collection__src__unmodifiable_wrappers|UnmodifiableSetMixin":{"UnmodifiableSetMixin.E":"1","Set.E":"1","core|Set":["1"],"Iterable.E":"1","core|Iterable":["1"],"_SetIterable.E":"1","core|_SetIterable":["1"],"EfficientLengthIterable.T":"1","_internal|EfficientLengthIterable":["1"],"HideEfficientLengthIterable.T":"1","_internal|HideEfficientLengthIterable":["1"]},"collection__src__wrappers|MapValueSet":{"MapValueSet.K":"1","MapValueSet.V":"2","_DelegatingIterableBase.E":"2","collection__src__wrappers|_DelegatingIterableBase":["2"],"Set.E":"2","core|Set":["2"],"Iterable.E":"2","core|Iterable":["2"],"_SetIterable.E":"2","core|_SetIterable":["2"],"EfficientLengthIterable.T":"2","_internal|EfficientLengthIterable":["2"],"HideEfficientLengthIterable.T":"2","_internal|HideEfficientLengthIterable":["2"]},"_interceptors|JSArray":{"JSArray.E":"1","_interceptors|JavaScriptObject":[],"List.E":"1","core|List":["1"],"JSIndexable.E":"1","_interceptors|JSIndexable":["1"],"_js_helper|TrustedGetRuntimeType":[],"_interceptors|Interceptor":[],"_interceptors|JSObject":[],"Iterable.E":"1","core|Iterable":["1"],"_ListIterable.E":"1","core|_ListIterable":["1"],"EfficientLengthIterable.T":"1","_internal|EfficientLengthIterable":["1"],"HideEfficientLengthIterable.T":"1","_internal|HideEfficientLengthIterable":["1"]},"_interceptors|JavaScriptObject":{"_interceptors|Interceptor":[],"_interceptors|JSObject":[]},"_interceptors|JSIndexable":{"JSIndexable.E":"1"},"_js_helper|IdentitySet":{"IdentitySet.E":"1","InternalSet.E":"1","_js_helper|InternalSet":["1"],"SetBase.E":"1","collection|SetBase":["1"],"LinkedHashSet.E":"1","collection|LinkedHashSet":["1"],"HashSet.E":"1","collection|HashSet":["1"],"Set.E":"1","core|Set":["1"],"Iterable.E":"1","core|Iterable":["1"],"_SetIterable.E":"1","core|_SetIterable":["1"],"EfficientLengthIterable.T":"1","_internal|EfficientLengthIterable":["1"],"HideEfficientLengthIterable.T":"1","_internal|HideEfficientLengthIterable":["1"]},"_js_helper|InternalSet":{"InternalSet.E":"1","SetBase.E":"1","collection|SetBase":["1"],"LinkedHashSet.E":"1","collection|LinkedHashSet":["1"],"HashSet.E":"1","collection|HashSet":["1"],"Set.E":"1","core|Set":["1"],"Iterable.E":"1","core|Iterable":["1"],"_SetIterable.E":"1","core|_SetIterable":["1"],"EfficientLengthIterable.T":"1","_internal|EfficientLengthIterable":["1"],"HideEfficientLengthIterable.T":"1","_internal|HideEfficientLengthIterable":["1"]},"collection|SetBase":{"SetBase.E":"1","Set.E":"1","core|Set":["1"],"Iterable.E":"1","core|Iterable":["1"],"_SetIterable.E":"1","core|_SetIterable":["1"],"EfficientLengthIterable.T":"1","_internal|EfficientLengthIterable":["1"],"HideEfficientLengthIterable.T":"1","_internal|HideEfficientLengthIterable":["1"]},"collection|LinkedHashSet":{"LinkedHashSet.E":"1","Set.E":"1","core|Set":["1"],"Iterable.E":"1","core|Iterable":["1"],"_SetIterable.E":"1","core|_SetIterable":["1"],"EfficientLengthIterable.T":"1","_internal|EfficientLengthIterable":["1"],"HideEfficientLengthIterable.T":"1","_internal|HideEfficientLengthIterable":["1"]},"collection|HashSet":{"HashSet.E":"1","Set.E":"1","core|Set":["1"],"Iterable.E":"1","core|Iterable":["1"],"_SetIterable.E":"1","core|_SetIterable":["1"],"EfficientLengthIterable.T":"1","_internal|EfficientLengthIterable":["1"],"HideEfficientLengthIterable.T":"1","_internal|HideEfficientLengthIterable":["1"]},"collection__src__unmodifiable_wrappers|NonGrowableListView":{"NonGrowableListView.E":"1","DelegatingList.E":"1","collection__src__wrappers|DelegatingList":["1"],"NonGrowableListMixin.E":"1","collection__src__unmodifiable_wrappers|NonGrowableListMixin":["1"],"_DelegatingIterableBase.E":"1","collection__src__wrappers|_DelegatingIterableBase":["1"],"List.E":"1","core|List":["1"],"Iterable.E":"1","core|Iterable":["1"],"_ListIterable.E":"1","core|_ListIterable":["1"],"EfficientLengthIterable.T":"1","_internal|EfficientLengthIterable":["1"],"HideEfficientLengthIterable.T":"1","_internal|HideEfficientLengthIterable":["1"]},"collection__src__unmodifiable_wrappers|NonGrowableListMixin":{"NonGrowableListMixin.E":"1","List.E":"1","core|List":["1"],"Iterable.E":"1","core|Iterable":["1"],"_ListIterable.E":"1","core|_ListIterable":["1"],"EfficientLengthIterable.T":"1","_internal|EfficientLengthIterable":["1"],"HideEfficientLengthIterable.T":"1","_internal|HideEfficientLengthIterable":["1"]},"collection__src__unmodifiable_wrappers|UnmodifiableSetView":{"UnmodifiableSetView.E":"1","DelegatingSet.E":"1","collection__src__wrappers|DelegatingSet":["1"],"UnmodifiableSetMixin.E":"1","collection__src__unmodifiable_wrappers|UnmodifiableSetMixin":["1"],"_DelegatingIterableBase.E":"1","collection__src__wrappers|_DelegatingIterableBase":["1"],"Set.E":"1","core|Set":["1"],"Iterable.E":"1","core|Iterable":["1"],"_SetIterable.E":"1","core|_SetIterable":["1"],"EfficientLengthIterable.T":"1","_internal|EfficientLengthIterable":["1"],"HideEfficientLengthIterable.T":"1","_internal|HideEfficientLengthIterable":["1"]},"collection__src__empty_unmodifiable_set|EmptyUnmodifiableSet":{"EmptyUnmodifiableSet.E":"1","UnmodifiableSetView.E":"1","collection__src__unmodifiable_wrappers|UnmodifiableSetView":["1"],"Iterable.E":"1","core|Iterable":["1"],"UnmodifiableSetMixin.E":"1","collection__src__unmodifiable_wrappers|UnmodifiableSetMixin":["1"],"Set.E":"1","core|Set":["1"],"DelegatingSet.E":"1","collection__src__wrappers|DelegatingSet":["1"],"_SetIterable.E":"1","core|_SetIterable":["1"],"_DelegatingIterableBase.E":"1","collection__src__wrappers|_DelegatingIterableBase":["1"],"EfficientLengthIterable.T":"1","_internal|EfficientLengthIterable":["1"],"HideEfficientLengthIterable.T":"1","_internal|HideEfficientLengthIterable":["1"]},"_internal|EmptyIterable":{"EmptyIterable.E":"1","EfficientLengthIterable.T":"1","_internal|EfficientLengthIterable":["1"],"HideEfficientLengthIterable.T":"1","_internal|HideEfficientLengthIterable":["1"],"Iterable.E":"1","core|Iterable":["1"]},"collection__src__unmodifiable_wrappers|UnmodifiableMapMixin":{"UnmodifiableMapMixin.K":"1","UnmodifiableMapMixin.V":"2","Map.K":"1","Map.V":"2","core|Map":["1","2"]}}'));
  dart.trackLibraries("packages/collection/src/canonicalized_map", {
    "package:collection/src/canonicalized_map.dart": canonicalized_map,
    "package:collection/src/wrappers.dart": wrappers,
    "package:collection/src/unmodifiable_wrappers.dart": unmodifiable_wrappers,
    "package:collection/src/empty_unmodifiable_set.dart": empty_unmodifiable_set
  }, {
  }, '{"version":3,"sourceRoot":"","sources":["canonicalized_map.dart","wrappers.dart","unmodifiable_wrappers.dart","empty_unmodifiable_set.dart"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyEM,YAAiB,gMAAE,qBAAe,qBAAe;IAAM;SAGpC;UAEc,OAC5B;AAFP,WAAK,kBAAY,GAAG,GAAG,MAAO;AAC1B,iBAAO,AAAK,4BAAmB,8DAAJ,GAAG,GAAjB,AAAa,oBAAK;AACnC,eAAO,IAAI;8BAAJ,OAAA,AAAM;IACf;SAGoB;UAAO;UAEL;;;AADpB,WAAK,kBAAY,GAAG,GAAG;AAClB,MAAL,4BAAoB,GAAG,EAAjB,AAAa,oBAAC,SAAQ,iHAAS,GAAG,EAAE,MAAK;;IACjD;WAGsB;;AACd,MAAN,KAAK,WAAS,SAAC,KAAK;YAAsB,OAAP;AAAL,gBAAK,GAAG;gBAAI,KAAK;QAAb,UAAC,OAAO;;;IAC5C;eAGyC;;AAAY,YAAA,AAAM,0BAAW,AACjE,OADwE,qIACpE,QAAC;YAA+B;AAAzB,2KAAuB,AAAE,CAAD,MAAf,AAAa,oBAAG,SAAM,iHAAS,AAAE,CAAD,MAAM,AAAE,CAAD;;IAAU;;AAG5C,YAAA,AAAM;IAAc;;AAI1C,MAAN;IACF;gBAGyB;UAEoB;AAD3C,WAAK,kBAAY,GAAG,GAAG,MAAO;AAC9B,YAAO,AAAM,oCAA8B,8DAAJ,GAAG,GAAjB,AAAa,oBAAK;IAC7C;kBAG2B;AACvB,YAAA,AAAM,AAAO,4BAAI,QAAC,QAAoB,YAAX,AAAK,IAAD,QAAU,KAAK;IAAC;;AAI/C,YAAA,AAAM,AAAQ,yHAAI,QAAC,KAAM,iHAAS,AAAE,AAAM,CAAP,YAAY,AAAE,AAAM,CAAP;IAAc;YAGjC;AACzB,MAAN,sBAAc,SAAC,KAAK,SAAS,AAAC,CAAA,CAAC,AAAK,IAAD,MAAM,AAAK,IAAD;IAC/C;;AAGoB,YAAA,AAAM;IAAO;;AAGV,YAAA,AAAM;IAAU;;AAGf,YAAA,AAAM,AAAO,sFAAI,QAAC,QAAS,AAAK,IAAD;IAAK;;AAG1C,YAAA,AAAM;IAAM;gBAG0B;AACpD,YAAA,AAAM,2HAAI,SAAC,GAAG,SAAS,AAAS,SAAA,CAAC,AAAK,IAAD,MAAM,AAAK,IAAD;IAAQ;gBAG3C,KAAkB;UAED;;;AAD/B,YAAO,AACF,AACA,oCAD0B,GAAG,EAAjB,AAAa,oBAAC,SAAM,cAAM,iHAAS,GAAG,EAAE,AAAQ,QAAA;IAEnE;WAGkB;UAE0B,OACnC;AAFP,WAAK,kBAAY,GAAG,GAAG,MAAO;AAC1B,iBAAO,AAAM,8BAAyB,8DAAJ,GAAG,GAAjB,AAAa,oBAAK;AAC1C,eAAO,IAAI;8BAAJ,OAAA,AAAM;IACf;gBAG+C;AAC3C,YAAA,AAAM,2BAAY,SAAC,GAAG,SAAS,AAAI,IAAA,CAAC,AAAK,IAAD,MAAM,AAAK,IAAD;IAAQ;;AAG9B;IAAc;WAGnC,KAAmB;UACC;;;UADsB;;AACjD,YAAA,AAAM,AAO6D,+BAPxC,GAAG,EAAjB,AAAa,oBAAC,SAAM,QAAC;AAC5B,oBAAQ,AAAK,IAAD;AACZ,uBAAW,AAAM,MAAA,CAAC,KAAK;AAC3B,YAAI,eAAU,QAAQ,EAAE,KAAK,GAAG,MAAO,KAAI;AAC3C,cAAO,kHAAS,GAAG,EAAE,QAAQ;uKAGvB,AAAS,QAAD,WAAW,OAAO,cAAM,iHAAS,GAAG,EAAE,AAAQ,QAAA;IAAU;cAGlC;;AACtC,YAAA,AAAM,yBAAU,SAAC,GAAG;AACd,oBAAQ,AAAK,IAAD;AACZ,kBAAM,AAAK,IAAD;AACV,uBAAW,AAAM,MAAA,CAAC,GAAG,EAAE,KAAK;AAChC,YAAI,eAAU,KAAK,EAAE,QAAQ,GAAG,MAAO,KAAI;AAC3C,cAAO,kHAAS,GAAG,EAAE,QAAQ;;IAC7B;;AAGoB,YAAA,AAAM,AAAO,sFAAI,QAAC,QAAS,AAAK,IAAD;IAAO;;AAG3C,YAAQ,gCAAY;IAAK;kBAErB;UACiC;AAAtD,YAAK,AAAM,+DAAV,GAAG,MAAW,AAAc,wCAAyB,GAAG,EAAjB,AAAa,oBAAC;IAAK;;AAI1C,yHAAsB,AAAM;IAAO;;AAIpB,yHAChC,AAAM,AAAQ,wHAAI,QAAC,KAAM,iHAAe,AAAE,CAAD,MAAM,AAAE,AAAM,CAAP;IAAe;;0DA3KhC;QACR;;IAXrB,cAA2B;IAYb,sBAAE,YAAY;IACd,sBAAE,UAAU;;;2DAWA,OAAyB;QAC9B;;IAzBrB,cAA2B;IA0Bb,sBAAE,YAAY;IACd,sBAAE,UAAU;AAC9B,gBAAO,KAAK;EACd;kEAY6B,SAA2B;QAC7B;;IA1CrB,cAA2B;IA2Cb,sBAAE,YAAY;IACd,sBAAE,UAAU;AAC9B,oBAAW,OAAO;EACpB;yDAGS,gBAAoB,gBAAsC;;IAjD7D,cAA2B;IAiDxB;IAAoB;AACrB,IAAN,qBAAa,IAAI;EACnB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QCjD0B;AAAS,YAAA,AAAM,oBAAI,IAAI;IAAC;;AAGzB,YAAA,AAAM;IAAS;aAGlB;AAAY,YAAA,AAAM,yBAAS,OAAO;IAAC;cAGzC;AAAU,YAAA,AAAM,0BAAU,KAAK;IAAC;UAGpB;AAAS,YAAA,AAAM,sBAAM,IAAI;IAAC;cAGR;AAAM,YAAA,AAAM,0EAAO,CAAC;IAAC;;AAGpD,YAAA,AAAM;IAAK;eAGI;UAAqB;;AAC/C,YAAA,AAAM,2BAAW,IAAI,WAAU,MAAM;IAAC;YAG9B,cAAqD;AAC7D,YAAA,AAAM,wEAAK,YAAY,EAAE,OAAO;IAAC;eAGF;;AAAU,YAAA,AAAM,2BAAW,KAAK;IAAC;YAGtC;AAAM,YAAA,AAAM,wBAAQ,CAAC;IAAC;;AAGhC,YAAA,AAAM;IAAO;;AAGV,YAAA,AAAM;IAAU;;AAGX,YAAA,AAAM;IAAQ;;;;SAGtB;AAAoB,YAAA,AAAM,qBAAK,SAAS;IAAC;;AAG/C,YAAA,AAAM;IAAI;cAGK;UAAqB;;AAC9C,YAAA,AAAM,0BAAU,IAAI,WAAU,MAAM;IAAC;;AAGvB,YAAA,AAAM;IAAM;WAGG;AAAM,YAAA,AAAM,uEAAI,CAAC;IAAC;WAGX;;AAAY,YAAA,AAAM,uBAAO,OAAO;IAAC;;AAG9C;IAAS;;AAGpB,YAAA,AAAM;IAAM;gBAGG;UAAqB;;AAClD,YAAO,AAAM,4BAAY,IAAI,WAAU,MAAM;IAC/C;SAGqB;AAAM,YAAA,AAAM,qBAAK,CAAC;IAAC;cAGD;AAAS,YAAA,AAAM,0BAAU,IAAI;IAAC;SAGhD;AAAM,YAAA,AAAM,qBAAK,CAAC;IAAC;cAGD;AAAS,YAAA,AAAM,0BAAU,IAAI;IAAC;;UAGhD;AAAqB,YAAA,AAAM,kCAAiB,QAAQ;IAAC;;AAGxD,YAAA,AAAM;IAAO;UAGI;AAAS,YAAA,AAAM,sBAAM,IAAI;IAAC;;AAG/B,YAAA,AAAM;IAAc;;AAG7B,YAAM,eAAN;IAAgB;;;;;EArGN;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IA+Gb;;;;;;;;;oBAemB;AAAS,YAAA,AAAK,KAAD;IAAU;;mDAZvB;;IAAc,gBAAE,IAAI;AAAnD;;EAAmD;;;;;;;;;;;;IAsB3C;;;;;;;;;oBAgBe;AAAS,YAAA,AAAK,KAAD;IAAU;SAGlC;AAAU,YAAA,AAAK,qBAAC,KAAK;IAAC;SAGlB;UAAS;;AACxB,MAAL,oBAAM,KAAK,EAAI,MAAK;;IACtB;UAG2B;;AAAU,YAAA,AAAM,qBAAE,KAAK;;QAGvC;;AACH,MAAN,mBAAU,KAAK;IACjB;WAGwB;;AAChB,MAAN,sBAAa,QAAQ;IACvB;;AAGuB,YAAA,AAAM;IAAO;;AAGf,YAAA,AAAM;IAAS;;AAI5B,MAAN;IACF;cAGmB,OAAW,KAAS;;AAC/B,MAAN,yBAAgB,KAAK,EAAE,GAAG,EAAE,SAAS;IACvC;cAGY;;AACV,UAAI,cAAS,WAAiB,wBAAM,GAAG;AACnC,gBAAC,GAAK,KAAK;IACjB;;;;aAGyB,OAAW;AAAQ,YAAA,AAAM,yBAAS,KAAK,EAAE,GAAG;IAAC;YAGxD,SAAc;;AAAe,YAAA,AAAM,wBAAQ,OAAO,EAAE,KAAK;IAAC;eAGxC,MAAW;AACvC,YAAA,AAAM,2BAAW,IAAI,EAAE,KAAK;IAAC;WAGjB,OAAS;;AACjB,MAAN,sBAAa,KAAK,EAAE,OAAO;IAC7B;cAGmB,OAAmB;;AAC9B,MAAN,yBAAgB,KAAK,EAAE,QAAQ;IACjC;aAGW;;AACT,UAAI,cAAS,WAAiB,wBAAM,GAAG;AACnC,gBAAC,cAAS,GAAK,KAAK;IAC1B;;;;gBAGkB,SAAe;;AAAW,YAAA,AAAM,4BAAY,OAAO,EAAE,KAAK;IAAC;mBAGzC,MAAY;AAC5C,YAAA,AAAM,+BAAe,IAAI,EAAE,KAAK;IAAC;eAGtB;AACP,MAAN,wBAAe,SAAS;IAC1B;;;;WAGoB;AAAU,YAAA,AAAM,uBAAO,KAAK;IAAC;aAGlC;AAAU,YAAA,AAAM,yBAAS,KAAK;IAAC;;AAG5B,YAAA,AAAM;IAAY;gBAGf,OAAW;AACxB,MAAN,2BAAkB,KAAK,EAAE,GAAG;IAC9B;gBAGkC;AAC1B,MAAN,2BAAkB,IAAI;IACxB;iBAGsB,OAAW,KAAiB;;AAC1C,MAAN,4BAAmB,KAAK,EAAE,GAAG,EAAE,QAAQ;IACzC;gBAGkC;AAC1B,MAAN,2BAAkB,IAAI;IACxB;;AAIuB;IAAS;;AAGJ,YAAA,AAAM;IAAQ;WAG1B,OAAmB;;AAC3B,MAAN,sBAAa,KAAK,EAAE,QAAQ;IAC9B;aAGkB,OAAW,KAAiB,UAAe;;AACrD,MAAN,wBAAe,KAAK,EAAE,GAAG,EAAE,QAAQ,EAAE,SAAS;IAChD;YAG2B;AACnB,MAAN,uBAAc,MAAM;IACtB;SAG+B;AACvB,MAAN,oBAAW,OAAO;IACpB;YAGoB,OAAa;AAAS,YAAA,AAAM,wBAAQ,KAAK,EAAE,GAAG;IAAC;;+CA1JtC;;IAAc,gBAAE,IAAI;AAA3C;;EAA2C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAmKpC;;;;;;;;;oBAgBc;AAAS,YAAA,AAAK,KAAD;IAAU;QAGvC;;AAAU,YAAA,AAAM,kBAAI,KAAK;IAAC;WAGb;;AAChB,MAAN,oBAAa,QAAQ;IACvB;;AAGoB,YAAA,AAAM;IAAS;;AAI3B,MAAN;IACF;gBAGmC;AAAU,YAAA,AAAM,0BAAY,KAAK;IAAC;eAGtC;AAAU,YAAA,AAAM,yBAAW,KAAK;IAAC;iBAG/B;AAAU,YAAA,AAAM,2BAAa,KAAK;IAAC;WAGlD;AAAY,YAAA,AAAM,qBAAO,OAAO;IAAC;WAG/B;AAAU,YAAA,AAAM,qBAAO,KAAK;IAAC;cAGhB;AACzB,MAAN,uBAAgB,QAAQ;IAC1B;gBAGkC;AAC1B,MAAN,yBAAkB,IAAI;IACxB;cAGiC;AACzB,MAAN,uBAAgB,QAAQ;IAC1B;;AAIsB;IAAS;gBAGG;AAC1B,MAAN,yBAAkB,IAAI;IACxB;UAGoB;;AAAU,YAAA,AAAM,oBAAM,KAAK;IAAC;;AAG9B,4IAAiB,AAAM;IAAQ;;8CA3EtB;;IAAc,gBAAE,IAAI;AAAzC;;EAAyC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAsFhC;;;;;;;;;oBAgBgB;AAAS,YAAA,AAAK,KAAD;IAAU;QAG3C;;AACH,MAAN,iBAAU,KAAK;IACjB;WAGwB;;AAChB,MAAN,oBAAa,QAAQ;IACvB;aAGgB;;AACR,MAAN,sBAAe,KAAK;IACtB;YAGe;;AACP,MAAN,qBAAc,KAAK;IACrB;;AAGsB,YAAA,AAAM;IAAS;;AAI7B,MAAN;IACF;WAGoB;AAAW,YAAA,AAAM,qBAAO,MAAM;IAAC;gBAGjB;AAC1B,MAAN,yBAAkB,IAAI;IACxB;gBAGkC;AAC1B,MAAN,yBAAkB,IAAI;IACxB;;AAIwB;IAAS;;AAGd,YAAA,AAAM;IAAa;;AAGpB,YAAA,AAAM;IAAY;;gDAjEL;;IAAe,gBAAE,KAAK;AAA/C;;EAA+C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IA0ErC;;;;;;;;;uBAgBiB;AAAS,YAAA,AAAK,KAAD;IAAa;SAGpC;AAAQ,YAAA,AAAK,qBAAC,GAAG;IAAC;SAGrB;UAAO;;;AACpB,MAAL,oBAAM,GAAG,EAAI,MAAK;;IACpB;WAGsB;;AACd,MAAN,sBAAa,KAAK;IACpB;eAGyC;;AACjC,MAAN,0BAAiB,OAAO;IAC1B;;AAIQ,MAAN;IACF;;AAG8B,YAAA,AAAM;IAAc;gBAGzB;AAAQ,YAAA,AAAM,4BAAY,GAAG;IAAC;kBAG5B;AAAU,YAAA,AAAM,8BAAc,KAAK;IAAC;;AAGvB,YAAA,AAAM;IAAO;YAGpB;AACzB,MAAN,uBAAc,CAAC;IACjB;;AAGoB,YAAA,AAAM;IAAO;;AAGV,YAAA,AAAM;IAAU;;AAGf,YAAA,AAAM;IAAI;;AAGhB,YAAA,AAAM;IAAM;gBAG0B;AACpD,YAAA,AAAM,4HAAI,SAAS;IAAC;gBAGR,KAAkB;;;AAC9B,YAAA,AAAM,4BAAY,GAAG,EAAE,QAAQ;IAAC;WAGlB;AAAQ,YAAA,AAAM,uBAAO,GAAG;IAAC;gBAGN;AAAS,YAAA,AAAM,4BAAY,IAAI;IAAC;;AAGrC;IAAc;;AAGpB,YAAA,AAAM;IAAM;;AAGjB,YAAM,eAAN;IAAgB;WAG1B,KAAmB;;;UAAuB;;AACjD,YAAA,AAAM,uBAAO,GAAG,EAAE,MAAM,aAAY,QAAQ;IAAC;cAGjB;;AAAW,YAAA,AAAM,0BAAU,MAAM;IAAC;;8CAhGpC;;IAAc,gBAAE,IAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3WhD,iBAAM,8BAAiB;IACzB;QAKW;;AAAU;IAAQ;WAKL;;AAAa;IAAQ;WAKzB;AAAU;IAAQ;cAKd;AAAa;IAAQ;cAKrB;AAAa;IAAQ;gBAKX;AAAS;IAAQ;gBAKjB;AAAS;IAAQ;;AAKnC;IAAQ;;;;;;;;EAC1B;;;;;;;;;;;;;;;;;;;;;;;;ADob2B,YAAA,AAAS;IAAI;;AAIpC,UAAS,4FAAL;AACF,cAAY,6FAAL;;AAET,YAAW,yHAAe;IAC5B;aAGsB;AAAY,YAAA,AAAS,8BAAY,OAAO;IAAC;;AAG3C,YAAA,AAAS;IAAO;;AAGb,YAAA,AAAS;IAAU;;AAGxB,YAAA,AAAS;IAAM;;AAGZ,YAAQ,gCAAY;IAAK;gBAGX;AAAU,YAAA,AAAM,MAAD,mBAAO;IAAS;eAUnC;AAC3B,YAAA,AAA6C,YAAvC,QAAC,YAAa,AAAM,KAAD,UAAU,OAAO;IAAU;iBAUvB;AAAU,YAAA,AAAsB,YAAV,UAAN,KAAK;IAAkB;WAKvD;AACb,wBAAM,8BAAiB;IAAsC;;AAI3C,YAAI,yHAAe;IAAK;UAU1B;UAAU;;;;AAAS,QAAT,aAAgB,KAAK;cAArB;;IAAsB;;0CAtErC;;;AAAf;;EAAwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0GC,YAAA,AAAS;IAAM;;AAItC,UAAS,iEAAL;AACF,cAAY,kEAAL;;AAET,YAAW,2HAAe;IAC5B;aAGsB;UAEG;AADvB,WAAY,yDAAR,OAAO,GAAQ,MAAO;AACtB,yBAAmB,OAAO,EAApB,AAAY,mBAAC;AAEvB,YAAO,AAAS,8BAAY,GAAG;IACjC;;AAGoB,YAAA,AAAS;IAAO;;AAGb,YAAA,AAAS;IAAU;;AAGxB,YAAA,AAAS;IAAM;;AAGZ,YAAQ,eAAR;IAAkB;QAG5B;UACc;;AAAnB,yBAAmB,KAAK,EAAlB,AAAY,mBAAC;AACnB,mBAAS;AACJ,MAAT,6BAAqB,GAAG,EAAE;AACxB,iBAAS;AACT,cAAO,MAAK;;AAEd,YAAO,OAAM;IACf;WAGwB;;AAAa,YAAA,AAAS,SAAD,qBAAS;IAAI;;AAG1C,YAAA,AAAS;IAAO;gBAGG;AAAU,YAAA,AAAM,MAAD,mBAAO;IAAS;eAUnC;AAC3B,YAAA,AAA6C,YAAvC,QAAC,YAAa,AAAM,KAAD,UAAU,OAAO;IAAU;iBAUvB;AAAU,YAAA,AAAsB,YAAV,UAAN,KAAK;IAAkB;WAGtD;UAEO;AADvB,WAAY,yDAAR,OAAO,GAAQ,MAAO;AACtB,yBAAmB,OAAO,EAApB,AAAY,mBAAC;AAEvB,YAAO,AAAQ,uBAAC,GAAG;IACrB;WAGoB;UAEK;AADvB,WAAY,yDAAR,OAAO,GAAQ,MAAO;AACtB,yBAAmB,OAAO,EAApB,AAAY,mBAAC;AAEvB,WAAK,AAAS,6BAAY,GAAG,GAAG,MAAO;AAC9B,MAAT,wBAAgB,GAAG;AACnB,YAAO;IACT;cAGiC;AAAa,YAAA,AAAS,SAAD,qBAAS;IAAO;gBAGpC;AAC5B,qBAAc;AACT,MAAT,yBAAiB,SAAC,KAAK;AACrB,YAAI,AAAI,IAAA,CAAC,KAAK,GAAG,AAAS,QAAD,OAAK,GAAG;;AAE1B,MAAT,QAAQ,WAAkB,UAAT;IACnB;cAGiC;UAIN,OAGI;AANzB,2BAAiB;AACrB,eAAS,UAAW,SAAQ;AAC1B,aAAY,yDAAR,OAAO,GAAQ;AACf,2BAAmB,OAAO,EAApB,AAAY,mBAAC;AAEvB,aAAK,AAAS,6BAAY,GAAG,GAAG;AACjB,QAAf,cAAc,MAAmB,SAAd,AAAQ,sBAAC,GAAG,GAAJ,iBAAc,yDAAL,QAAT;;AAGzB,yBAAkB;AACb,MAAT,yBAAiB,SAAC,GAAG;AACnB,aAAK,AAAe,cAAD,UAAU,CAAC,GAAG,AAAa,YAAD,OAAK,CAAC;;AAExC,MAAb,YAAY,WAAkB,UAAT;IACvB;gBAGkC;AAC9B,8BAAY,QAAC,YAAa,AAAI,IAAA,CAAC,OAAO;IAAE;;AAItB,YAAI,2HAAe;IAAK;UAU1B;UAAU;;;;AAAS,QAAT,aAAgB,KAAK;cAArB;;IAAsB;;4CA1InC,WAAe;;IAAf;IAAe;AAAhC;;EAA6C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7pB3C,iBAAM,8BAAiB;IACzB;eAKe;AAAc;IAAQ;QAK1B;;AAAU;IAAQ;WAKL;;AAAa;IAAQ;WAK7B,OAAS;;AAAY;IAAQ;cAK1B,OAAmB;;AAAa;IAAQ;WAKvC;AAAU;IAAQ;aAKvB;AAAU;IAAQ;;AAKf;IAAQ;gBAKQ;AAAS;IAAQ;gBAKjB;AAAS;IAAQ;gBAK9B,OAAW;AAAQ;IAAQ;iBAK1B,OAAW,KAAiB;;AAAa;IAAQ;;AAKvD;IAAQ;;;;;;;;EAC1B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;mGD0D+B;;;;;;;;iECpIH;;AAA1B,sGAA0B,QAAQ;;EAAC;;;;;kGDySR;;;;;;;;;;;iECpND;;AAA1B,sGAA0B,OAAO;;EAAC;;;;;;AA6DhC,iBAAM,8BAAiB;IACzB;SAKoB;UAAO;;;AAAU;;IAAQ;gBAK7B,KAAkB;;;AAAa;IAAQ;WAKjC;;AAAU;IAAQ;WAKvB;AAAQ;IAAQ;;AAKjB;IAAQ;cAId;AAAM;IAAQ;aAIf;AAAM;IAAQ;;;;;EACzB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3L8B,YAAA,AAAoB;IAAQ;;AAEtC;IAAC;;AAEkB;IAAyB;aAExC;AAAY;IAAK;gBAEJ;AAAU,YAAA,AAAM,MAAD;IAAQ;eAEvB;;AAAU,6JAAmB,KAAK;IAAC;WAEpD;AAAY;IAAI;;AAGK;IAAyB;gBAEjC;UAAqB;;AAChD,YAAA,AAAO,OAAD,WAAW,AAAM,MAAA,KAAK,WAAM,wBAAW;IAAa;;AAEhC;IAAmB;;AAE/B;IAAE;UAEA;;AAAU,YAAI,qHAAG,KAAK;IAAC;iBAEV;AAAU;IAAE;eAEd;AAAU;IAAE;;;;;;;AA/BrC;;EAAsB","file":"canonicalized_map.ddc.js"}');
  // Exports:
  return {
    src__canonicalized_map: canonicalized_map,
    src__wrappers: wrappers,
    src__unmodifiable_wrappers: unmodifiable_wrappers,
    src__empty_unmodifiable_set: empty_unmodifiable_set
  };
}));

//# sourceMappingURL=canonicalized_map.ddc.js.map
