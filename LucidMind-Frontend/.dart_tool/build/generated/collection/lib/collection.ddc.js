// Generated by DDC, the Dart Development Compiler (to JavaScript).
// Version: 3.7.2 (stable) (Tue Mar 11 04:27:50 2025 -0700) on "macos_arm64"
// Module: packages/collection/collection
// Flags: soundNullSafety(true), enableAsserts(true)
define(['dart_sdk', 'packages/collection/src/canonicalized_map', 'packages/collection/src/algorithms', 'packages/collection/src/utils', 'packages/collection/src/comparators'], (function load__packages__collection__collection(dart_sdk, packages__collection__src__canonicalized_map, packages__collection__src__algorithms, packages__collection__src__utils, packages__collection__src__comparators) {
  'use strict';
  const dart_rti = dart_sdk.dart_rti;
  const core = dart_sdk.core;
  const collection = dart_sdk.collection;
  const _native_typed_data = dart_sdk._native_typed_data;
  const _interceptors = dart_sdk._interceptors;
  const math = dart_sdk.math;
  const async = dart_sdk.async;
  const _js_helper = dart_sdk._js_helper;
  const dart = dart_sdk.dart;
  const dartx = dart_sdk.dartx;
  const unmodifiable_wrappers = packages__collection__src__canonicalized_map.src__unmodifiable_wrappers;
  const wrappers = packages__collection__src__canonicalized_map.src__wrappers;
  const algorithms = packages__collection__src__algorithms.src__algorithms;
  const utils = packages__collection__src__utils.src__utils;
  const equality = packages__collection__src__comparators.src__equality;
  var union_set = Object.create(dart.library);
  var queue_list = Object.create(dart.library);
  var equality_map = Object.create(dart.library);
  var union_set_controller = Object.create(dart.library);
  var boollist = Object.create(dart.library);
  var iterable_extensions = Object.create(dart.library);
  var functions = Object.create(dart.library);
  var combined_iterator = Object.create(dart.library);
  var combined_iterable = Object.create(dart.library);
  var combined_list = Object.create(dart.library);
  var list_extensions = Object.create(dart.library);
  var combined_map = Object.create(dart.library);
  var collection$ = Object.create(dart.library);
  var equality_set = Object.create(dart.library);
  var $toSet = dartx.toSet;
  var $length = dartx.length;
  var $fold = dartx.fold;
  var $iterator = dartx.iterator;
  var $expand = dartx.expand;
  var $where = dartx.where;
  var $any = dartx.any;
  var $contains = dartx.contains;
  var $setRange = dartx.setRange;
  var $_set = dartx._set;
  var $_get = dartx._get;
  var $fillRange = dartx.fillRange;
  var $rightShift = dartx['>>'];
  var $cast = dartx.cast;
  var $leftShift = dartx['<<'];
  var $truncate = dartx.truncate;
  var $add = dartx.add;
  var $sort = dartx.sort;
  var $shuffle = dartx.shuffle;
  var $compareTo = dartx.compareTo;
  var $isEmpty = dartx.isEmpty;
  var $last = dartx.last;
  var $skip = dartx.skip;
  var $isNaN = dartx.isNaN;
  var $remainder = dartx.remainder;
  var $addAll = dartx.addAll;
  var $forEach = dartx.forEach;
  var $containsKey = dartx.containsKey;
  var $keys = dartx.keys;
  var $toList = dartx.toList;
  var $removeLast = dartx.removeLast;
  var $reversed = dartx.reversed;
  var $map = dartx.map;
  var $every = dartx.every;
  dart._checkModuleNullSafetyMode(true);
  const CT = Object.create({
    _: () => (C, CT)
  });
  dart.defineLazy(CT, {
    get C0() {
      return C[0] = dart.gFn(utils.compareComparable, dart_rti._Universe.eval(dart_rti._theUniverse(), "core|int(0^,0^)<core|Comparable<0^>>", true), dart.constList(dart_rti._Universe.eval(dart_rti._theUniverse(), "@", true), [dart_rti._Universe.eval(dart_rti._theUniverse(), "core|Comparable<@>", true)]));
    },
    get C1() {
      return C[1] = dart.fn(utils.defaultCompare, dart_rti._Universe.eval(dart_rti._theUniverse(), "core|int(core|Object?,core|Object?)", true));
    },
    get C2() {
      return C[2] = dart.const(new _js_helper.PrivateSymbol.new('_source', _source));
    },
    get C3() {
      return C[3] = dart.gFn(utils.identity, dart_rti._Universe.eval(dart_rti._theUniverse(), "0^(0^)<core|Object?>", true), dart.constList(dart_rti._Universe.eval(dart_rti._theUniverse(), "@", true), [dart_rti._Universe.eval(dart_rti._theUniverse(), "@", true)]));
    },
    get C4() {
      return C[4] = dart.const(Object.setPrototypeOf({
        $ti: dart_rti._Universe.eval(dart_rti._theUniverse(), "collection__src__equality|DefaultEquality<0&>", true)
      }, equality.DefaultEquality.prototype));
    }
  });
  var C = Array(5).fill(void 0);
  var I = [
    "package:collection/src/union_set.dart",
    "dart:core",
    "org-dartlang-app:///packages/collection/src/queue_list.dart",
    "package:collection/src/queue_list.dart",
    "package:collection/src/equality_map.dart",
    "package:collection/src/union_set_controller.dart",
    "package:collection/src/boollist.dart",
    "dart:typed_data",
    "package:collection/src/combined_wrappers/combined_iterator.dart",
    "package:collection/src/combined_wrappers/combined_iterable.dart",
    "package:collection/src/combined_wrappers/combined_list.dart",
    "package:collection/src/list_extensions.dart",
    "package:collection/src/combined_wrappers/combined_map.dart",
    "dart:collection",
    "package:collection/src/equality_set.dart"
  ];
  var _sets = dart.privateName(union_set, "_sets");
  var _disjoint = dart.privateName(union_set, "_disjoint");
  var _bind = dart.privateName(dart_rti, "_bind");
  var _eval = dart.privateName(dart_rti, "_eval");
  var _iterable = dart.privateName(union_set, "_iterable");
  var _as = dart.privateName(dart_rti, "_as");
  const SetBase_UnmodifiableSetMixin$36 = class SetBase_UnmodifiableSetMixin extends collection.SetBase {};
  (SetBase_UnmodifiableSetMixin$36.new = function(_ti) {
    dart.global.Object.getPrototypeOf(SetBase_UnmodifiableSetMixin$36).new.call(this, null);
  }).prototype = SetBase_UnmodifiableSetMixin$36.prototype;
  dart.applyMixin(SetBase_UnmodifiableSetMixin$36, unmodifiable_wrappers.UnmodifiableSetMixin);
  union_set.UnionSet = class UnionSet extends SetBase_UnmodifiableSetMixin$36 {
    static ['_#new#tearOff'](E, sets, opts) {
      let disjoint = opts && 'disjoint' in opts ? opts.disjoint : false;
      return new union_set.UnionSet.new(dart_rti.instanceType(this)[_bind](E)[_eval]("collection__src__union_set|UnionSet<1>"), sets, {disjoint: disjoint});
    }
    static ['_#from#tearOff'](E, sets, opts) {
      let disjoint = opts && 'disjoint' in opts ? opts.disjoint : false;
      return new union_set.UnionSet.from(dart_rti.instanceType(this)[_bind](E)[_eval]("collection__src__union_set|UnionSet<1>"), sets, {disjoint: disjoint});
    }
    get length() {
      return this[_disjoint] ? this[_sets][$fold](dart_rti._Universe.eval(dart_rti._theUniverse(), "core|int", true), 0, dart.fn((length, set) => length + set[$length], dart_rti.instanceType(this)[_eval]("core|int(core|int,core|Set<UnionSet.E>)"))) : this[_iterable][$length];
    }
    get iterator() {
      return this[_iterable][$iterator];
    }
    get [_iterable]() {
      let allElements = this[_sets][$expand](dart_rti.instanceType(this)[_eval]("UnionSet.E"), dart.fn(set => set, dart_rti.instanceType(this)[_eval]("core|Set<UnionSet.E>(core|Set<UnionSet.E>)")));
      return this[_disjoint] ? allElements : allElements[$where](dart_rti.instanceType(this)[_eval]("core|bool(UnionSet.E)")[_as](dart.bind(collection.LinkedHashSet.new(dart_rti.instanceType(this)[_eval]("collection|LinkedHashSet<UnionSet.E>")), 'add')));
    }
    contains(element) {
      return this[_sets][$any](dart.fn(set => set.contains(element), dart_rti.instanceType(this)[_eval]("core|bool(core|Set<UnionSet.E>)")));
    }
    lookup(element) {
      for (let set of this[_sets]) {
        let result = set.lookup(element);
        if (result != null || set.contains(null)) return result;
      }
      return null;
    }
    toSet() {
      return (() => {
        let t$360 = collection.LinkedHashSet.new(dart_rti.instanceType(this)[_eval]("collection|LinkedHashSet<UnionSet.E>"));
        for (let set of this[_sets])
          t$360.addAll(set);
        return t$360;
      })();
    }
  };
  (union_set.UnionSet.new = function(_ti, sets, opts) {
    let disjoint = opts && 'disjoint' in opts ? opts.disjoint : false;
    this.$ti = this.$ti || _ti || dart.getReifiedType(this);
    this[_sets] = sets;
    this[_disjoint] = disjoint;
    dart.global.Object.getPrototypeOf(union_set.UnionSet).new.call(this, null);
    ;
  }).prototype = union_set.UnionSet.prototype;
  (union_set.UnionSet.from = function(_ti, sets, opts) {
    let disjoint = opts && 'disjoint' in opts ? opts.disjoint : false;
    this.$ti = this.$ti || _ti || dart.getReifiedType(this);
    union_set.UnionSet.new.call(this, _ti, sets[$toSet](), {disjoint: disjoint});
  }).prototype = union_set.UnionSet.prototype;
  dart.addRtiResources(union_set.UnionSet, ["collection__src__union_set|UnionSet"]);
  dart.setMethodSignature(union_set.UnionSet, () => dart.global.Object.setPrototypeOf({
    contains: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|bool(core|Object?)", true),
    [$contains]: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|bool(core|Object?)", true),
    lookup: _ti => _ti[_eval]("UnionSet.E?(core|Object?)"),
    toSet: _ti => _ti[_eval]("core|Set<UnionSet.E>()"),
    [$toSet]: _ti => _ti[_eval]("core|Set<UnionSet.E>()")
  }, dart.getMethods(dart.global.Object.getPrototypeOf(union_set.UnionSet))));
  dart.setGetterSignature(union_set.UnionSet, () => dart.global.Object.setPrototypeOf({
    length: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|int", true),
    [$length]: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|int", true),
    iterator: _ti => _ti[_eval]("core|Iterator<UnionSet.E>"),
    [$iterator]: _ti => _ti[_eval]("core|Iterator<UnionSet.E>"),
    [_iterable]: _ti => _ti[_eval]("core|Iterable<UnionSet.E>")
  }, dart.getGetters(dart.global.Object.getPrototypeOf(union_set.UnionSet))));
  dart.setLibraryUri(union_set.UnionSet, I[0]);
  dart.setFieldSignature(union_set.UnionSet, () => dart.global.Object.setPrototypeOf({
    [_sets]: {
      type: _ti => _ti[_eval]("core|Set<core|Set<UnionSet.E>>"),
      isConst: false,
      isFinal: true,
      libraryUri: I[1]
    },
    [_disjoint]: {
      type: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|bool", true),
      isConst: false,
      isFinal: true,
      libraryUri: I[1]
    }
  }, dart.getFields(dart.global.Object.getPrototypeOf(union_set.UnionSet))));
  dart.defineExtensionMethods(union_set.UnionSet, ['contains', 'toSet']);
  dart.defineExtensionAccessors(union_set.UnionSet, ['length', 'iterator']);
  var _head = dart.privateName(queue_list, "QueueList._head");
  var _tail = dart.privateName(queue_list, "QueueList._tail");
  var _table = dart.privateName(queue_list, "_table");
  var _head$ = dart.privateName(queue_list, "_head");
  var _tail$ = dart.privateName(queue_list, "_tail");
  var _is = dart.privateName(dart_rti, "_is");
  var _add = dart.privateName(queue_list, "_add");
  var _preGrow = dart.privateName(queue_list, "_preGrow");
  var _grow = dart.privateName(queue_list, "_grow");
  var _writeToList = dart.privateName(queue_list, "_writeToList");
  const Object_ListBase$36 = class Object_ListBase extends core.Object {};
  (Object_ListBase$36.new = function() {
    collection.ListBase.new.call(this, null);
  }).prototype = Object_ListBase$36.prototype;
  dart.applyMixin(Object_ListBase$36, collection.ListBase);
  queue_list.QueueList = class QueueList extends Object_ListBase$36 {
    get [_head$]() {
      return this[_head];
    }
    set [_head$](value) {
      this[_head] = value;
    }
    get [_tail$]() {
      return this[_tail];
    }
    set [_tail$](value) {
      this[_tail] = value;
    }
    static _castFrom(S, T, source) {
      return new queue_list._CastQueueList.new(dart_rti.instanceType(this)[_bind](S)[_bind](T)[_eval]("collection__src__queue_list|_CastQueueList<1,2>"), source);
    }
    static ['_#new#tearOff'](E, initialCapacity = null) {
      return new queue_list.QueueList.new(dart_rti.instanceType(this)[_bind](E)[_eval]("collection__src__queue_list|QueueList<1>"), initialCapacity);
    }
    static ['_#_init#tearOff'](E, initialCapacity) {
      return new queue_list.QueueList._init(dart_rti.instanceType(this)[_bind](E)[_eval]("collection__src__queue_list|QueueList<1>"), initialCapacity);
    }
    static ['_#_#tearOff'](E, _head, _tail, _table) {
      return new queue_list.QueueList.__(dart_rti.instanceType(this)[_bind](E)[_eval]("collection__src__queue_list|QueueList<1>"), _head, _tail, _table);
    }
    static from(_ti, source) {
      let t$361;
      if (dart_rti._Universe.eval(dart_rti._theUniverse(), "core|List<@>", true)[_is](source)) {
        let length = source[$length];
        let queue = new queue_list.QueueList.new(_ti[_eval]("collection__src__queue_list|QueueList<1>"), length + 1);
        if (!(queue[_table][$length] > length)) dart.assertFailed(null, I[2], 56, 14, "queue._table.length > length");
        let sourceList = source;
        queue[_table][$setRange](0, length, sourceList, 0);
        queue[_tail$] = length;
        return queue;
      } else {
        t$361 = new queue_list.QueueList.new(_ti[_eval]("collection__src__queue_list|QueueList<1>"));
        return (() => {
          t$361.addAll(source);
          return t$361;
        })();
      }
    }
    static ['_#from#tearOff'](E, source) {
      return queue_list.QueueList.from(dart_rti.instanceType(this)[_bind](E)[_eval]("collection__src__queue_list|QueueList<1>"), source);
    }
    static _computeInitialCapacity(initialCapacity) {
      if (initialCapacity == null || dart.notNull(initialCapacity) < 8) {
        return 8;
      }
      initialCapacity = dart.notNull(initialCapacity) + 1;
      if (queue_list.QueueList._isPowerOf2(initialCapacity)) {
        return initialCapacity;
      }
      return queue_list.QueueList._nextPowerOf2(initialCapacity);
    }
    add(element) {
      dart_rti.instanceType(this)[_eval]("QueueList.E")[_as](element);
      this[_add](element);
    }
    addAll(iterable) {
      dart_rti.instanceType(this)[_eval]("core|Iterable<QueueList.E>")[_as](iterable);
      if (dart_rti._Universe.eval(dart_rti._theUniverse(), "core|List<@>", true)[_is](iterable)) {
        let list = iterable;
        let addCount = list[$length];
        let length = this.length;
        if (length + addCount >= this[_table][$length]) {
          this[_preGrow](length + addCount);
          this[_table][$setRange](length, length + addCount, list, 0);
          this[_tail$] = this[_tail$] + addCount;
        } else {
          let endSpace = this[_table][$length] - this[_tail$];
          if (addCount < endSpace) {
            this[_table][$setRange](this[_tail$], this[_tail$] + addCount, list, 0);
            this[_tail$] = this[_tail$] + addCount;
          } else {
            let preSpace = addCount - endSpace;
            this[_table][$setRange](this[_tail$], this[_tail$] + endSpace, list, 0);
            this[_table][$setRange](0, preSpace, list, endSpace);
            this[_tail$] = preSpace;
          }
        }
      } else {
        for (let element of iterable) {
          this[_add](element);
        }
      }
    }
    cast(T) {
      return queue_list.QueueList._castFrom(dart_rti.instanceType(this)[_eval]("QueueList.E"), dart_rti.instanceType(this)[_bind](T)[_eval]("1"), this);
    }
    retype(T) {
      return this.cast(dart_rti.instanceType(this)[_bind](T)[_eval]("1"));
    }
    toString() {
      return core.Iterable.iterableToFullString(this, "{", "}");
    }
    addLast(element) {
      dart_rti.instanceType(this)[_eval]("QueueList.E")[_as](element);
      this[_add](element);
    }
    addFirst(element) {
      dart_rti.instanceType(this)[_eval]("QueueList.E")[_as](element);
      this[_head$] = (this[_head$] - 1 & this[_table][$length] - 1) >>> 0;
      this[_table][$_set](this[_head$], element);
      if (this[_head$] === this[_tail$]) this[_grow]();
    }
    removeFirst() {
      if (this[_head$] === this[_tail$]) dart.throw(new core.StateError.new("No element"));
      let result = dart_rti.instanceType(this)[_eval]("QueueList.E")[_as](this[_table][$_get](this[_head$]));
      this[_table][$_set](this[_head$], null);
      this[_head$] = (this[_head$] + 1 & this[_table][$length] - 1) >>> 0;
      return result;
    }
    removeLast() {
      if (this[_head$] === this[_tail$]) dart.throw(new core.StateError.new("No element"));
      this[_tail$] = (this[_tail$] - 1 & this[_table][$length] - 1) >>> 0;
      let result = dart_rti.instanceType(this)[_eval]("QueueList.E")[_as](this[_table][$_get](this[_tail$]));
      this[_table][$_set](this[_tail$], null);
      return result;
    }
    get length() {
      return (this[_tail$] - this[_head$] & this[_table][$length] - 1) >>> 0;
    }
    set length(value) {
      if (value < 0) dart.throw(new core.RangeError.new("Length " + dart.strSafe(value) + " may not be negative."));
      if (value > this.length && !dart_rti.instanceType(this)[_eval]("QueueList.E")[_is](null)) {
        dart.throw(new core.UnsupportedError.new("The length can only be increased when the element type is " + "nullable, but the current element type is `" + dart.str(dart_rti.createRuntimeType(dart_rti.instanceType(this)[_eval]("QueueList.E"))) + "`."));
      }
      let delta = value - this.length;
      if (delta >= 0) {
        if (this[_table][$length] <= value) {
          this[_preGrow](value);
        }
        this[_tail$] = (this[_tail$] + delta & this[_table][$length] - 1) >>> 0;
        return;
      }
      let newTail = this[_tail$] + delta;
      if (newTail >= 0) {
        this[_table][$fillRange](newTail, this[_tail$], null);
      } else {
        newTail = newTail + this[_table][$length];
        this[_table][$fillRange](0, this[_tail$], null);
        this[_table][$fillRange](newTail, this[_table][$length], null);
      }
      this[_tail$] = newTail;
    }
    _get(index) {
      if (index < 0 || index >= this.length) {
        dart.throw(new core.RangeError.new("Index " + dart.strSafe(index) + " must be in the range [0.." + dart.strSafe(this.length) + ")."));
      }
      return dart_rti.instanceType(this)[_eval]("QueueList.E")[_as](this[_table][$_get]((this[_head$] + index & this[_table][$length] - 1) >>> 0));
    }
    _set(index, value) {
      let value$ = value;
      dart_rti.instanceType(this)[_eval]("QueueList.E")[_as](value$);
      if (index < 0 || index >= this.length) {
        dart.throw(new core.RangeError.new("Index " + dart.strSafe(index) + " must be in the range [0.." + dart.strSafe(this.length) + ")."));
      }
      this[_table][$_set]((this[_head$] + index & this[_table][$length] - 1) >>> 0, value$);
      return value;
    }
    static _isPowerOf2(number) {
      return (number & number - 1) === 0;
    }
    static _nextPowerOf2(number) {
      if (!(number > 0)) dart.assertFailed(null, I[2], 221, 12, "number > 0");
      number = (number << 1 >>> 0) - 1;
      for (;;) {
        let nextNumber = (number & number - 1) >>> 0;
        if (nextNumber === 0) return number;
        number = nextNumber;
      }
    }
    [_add](element) {
      this[_table][$_set](this[_tail$], element);
      this[_tail$] = (this[_tail$] + 1 & this[_table][$length] - 1) >>> 0;
      if (this[_head$] === this[_tail$]) this[_grow]();
    }
    [_grow]() {
      let newTable = core.List.filled(dart_rti.instanceType(this)[_eval]("core|List<QueueList.E?>"), this[_table][$length] * 2, null);
      let split = this[_table][$length] - this[_head$];
      newTable[$setRange](0, split, this[_table], this[_head$]);
      newTable[$setRange](split, split + this[_head$], this[_table], 0);
      this[_head$] = 0;
      this[_tail$] = this[_table][$length];
      this[_table] = newTable;
    }
    [_writeToList](target) {
      if (!(target[$length] >= this.length)) dart.assertFailed(null, I[2], 249, 12, "target.length >= length");
      if (this[_head$] <= this[_tail$]) {
        let length = this[_tail$] - this[_head$];
        target[$setRange](0, length, this[_table], this[_head$]);
        return length;
      } else {
        let firstPartSize = this[_table][$length] - this[_head$];
        target[$setRange](0, firstPartSize, this[_table], this[_head$]);
        target[$setRange](firstPartSize, firstPartSize + this[_tail$], this[_table], 0);
        return this[_tail$] + firstPartSize;
      }
    }
    [_preGrow](newElementCount) {
      if (!(newElementCount >= this.length)) dart.assertFailed(null, I[2], 264, 12, "newElementCount >= length");
      newElementCount = newElementCount + newElementCount[$rightShift](1);
      let newCapacity = queue_list.QueueList._nextPowerOf2(newElementCount);
      let newTable = core.List.filled(dart_rti.instanceType(this)[_eval]("core|List<QueueList.E?>"), newCapacity, null);
      this[_tail$] = this[_writeToList](newTable);
      this[_table] = newTable;
      this[_head$] = 0;
    }
  };
  (queue_list.QueueList.new = function(_ti, initialCapacity = null) {
    this.$ti = this.$ti || _ti || dart.getReifiedType(this);
    queue_list.QueueList._init.call(this, _ti, queue_list.QueueList._computeInitialCapacity(initialCapacity));
  }).prototype = queue_list.QueueList.prototype;
  (queue_list.QueueList._init = function(_ti, initialCapacity) {
    this.$ti = this.$ti || _ti || dart.getReifiedType(this);
    if (!queue_list.QueueList._isPowerOf2(initialCapacity)) dart.assertFailed(null, I[2], 43, 16, "_isPowerOf2(initialCapacity)");
    this[_table] = core.List.filled(dart_rti.instanceType(this)[_eval]("core|List<QueueList.E?>"), initialCapacity, null);
    this[_head] = 0;
    this[_tail] = 0;
    dart.global.Object.getPrototypeOf(queue_list.QueueList).new.call(this);
    ;
  }).prototype = queue_list.QueueList.prototype;
  (queue_list.QueueList.__ = function(_ti, _head$, _tail$, _table$) {
    this.$ti = this.$ti || _ti || dart.getReifiedType(this);
    this[_head] = _head$;
    this[_tail] = _tail$;
    this[_table] = _table$;
    dart.global.Object.getPrototypeOf(queue_list.QueueList).new.call(this);
    ;
  }).prototype = queue_list.QueueList.prototype;
  dart.addRtiResources(queue_list.QueueList, ["collection__src__queue_list|QueueList", "collection|Queue", "core|Iterable", "collection|_QueueIterable", "_internal|EfficientLengthIterable", "_internal|HideEfficientLengthIterable", "core|Iterable", "core|Iterable"]);
  dart.setMethodSignature(queue_list.QueueList, () => dart.global.Object.setPrototypeOf({
    cast: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "collection__src__queue_list|QueueList<0^>()<core|Object?>", true),
    [$cast]: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "collection__src__queue_list|QueueList<0^>()<core|Object?>", true),
    retype: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "collection__src__queue_list|QueueList<0^>()<core|Object?>", true),
    addLast: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "~(core|Object?)", true),
    addFirst: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "~(core|Object?)", true),
    removeFirst: _ti => _ti[_eval]("QueueList.E()"),
    _get: _ti => _ti[_eval]("QueueList.E(core|int)"),
    [$_get]: _ti => _ti[_eval]("QueueList.E(core|int)"),
    _set: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "~(core|int,core|Object?)", true),
    [$_set]: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "~(core|int,core|Object?)", true),
    [_add]: _ti => _ti[_eval]("~(QueueList.E)"),
    [_grow]: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "~()", true),
    [_writeToList]: _ti => _ti[_eval]("core|int(core|List<QueueList.E?>)"),
    [_preGrow]: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "~(core|int)", true)
  }, dart.getMethods(dart.global.Object.getPrototypeOf(queue_list.QueueList))));
  dart.setMethodsDefaultTypeArgSignature(queue_list.QueueList, () => dart.global.Object.setPrototypeOf({
    cast: _ti => [dart_rti._Universe.eval(dart_rti._theUniverse(), "@", true)],
    [$cast]: _ti => [dart_rti._Universe.eval(dart_rti._theUniverse(), "@", true)],
    retype: _ti => [dart_rti._Universe.eval(dart_rti._theUniverse(), "@", true)]
  }, dart.getMethodsDefaultTypeArgs(dart.global.Object.getPrototypeOf(queue_list.QueueList))));
  dart.setStaticMethodSignature(queue_list.QueueList, () => ['_castFrom', 'from', '_computeInitialCapacity', '_isPowerOf2', '_nextPowerOf2']);
  dart.setGetterSignature(queue_list.QueueList, () => dart.global.Object.setPrototypeOf({
    length: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|int", true),
    [$length]: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|int", true)
  }, dart.getGetters(dart.global.Object.getPrototypeOf(queue_list.QueueList))));
  dart.setSetterSignature(queue_list.QueueList, () => dart.global.Object.setPrototypeOf({
    length: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|int", true),
    [$length]: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|int", true)
  }, dart.getSetters(dart.global.Object.getPrototypeOf(queue_list.QueueList))));
  dart.setLibraryUri(queue_list.QueueList, I[3]);
  dart.setFieldSignature(queue_list.QueueList, () => dart.global.Object.setPrototypeOf({
    [_table]: {
      type: _ti => _ti[_eval]("core|List<QueueList.E?>"),
      isConst: false,
      isFinal: false,
      libraryUri: I[1]
    },
    [_head$]: {
      type: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|int", true),
      isConst: false,
      isFinal: false,
      libraryUri: I[1]
    },
    [_tail$]: {
      type: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|int", true),
      isConst: false,
      isFinal: false,
      libraryUri: I[1]
    }
  }, dart.getFields(dart.global.Object.getPrototypeOf(queue_list.QueueList))));
  dart.setStaticFieldSignature(queue_list.QueueList, () => ['_initialCapacity']);
  dart.defineExtensionMethods(queue_list.QueueList, [
    'add',
    'addAll',
    'cast',
    'toString',
    'removeLast',
    '_get',
    '_set'
  ]);
  dart.defineExtensionAccessors(queue_list.QueueList, ['length']);
  dart.defineLazy(queue_list.QueueList, {
    /*queue_list.QueueList._initialCapacity*/get _initialCapacity() {
      return 8;
    }
  });
  var _delegate = dart.privateName(queue_list, "_delegate");
  queue_list._CastQueueList = class _CastQueueList extends queue_list.QueueList {
    static ['_#new#tearOff'](S, T, _delegate) {
      return new queue_list._CastQueueList.new(dart_rti.instanceType(this)[_bind](S)[_bind](T)[_eval]("collection__src__queue_list|_CastQueueList<1,2>"), _delegate);
    }
    get [_head$]() {
      return this[_delegate][_head$];
    }
    set [_head$](value) {
      return this[_delegate][_head$] = value;
    }
    get [_tail$]() {
      return this[_delegate][_tail$];
    }
    set [_tail$](value) {
      return this[_delegate][_tail$] = value;
    }
  };
  (queue_list._CastQueueList.new = function(_ti, _delegate$) {
    this.$ti = this.$ti || _ti || dart.getReifiedType(this);
    this[_delegate] = _delegate$;
    dart.global.Object.getPrototypeOf(queue_list._CastQueueList).__.call(this, null, -1, -1, _delegate$[_table][$cast](dart_rti.instanceType(this)[_eval]("_CastQueueList.T")));
    ;
  }).prototype = queue_list._CastQueueList.prototype;
  dart.addRtiResources(queue_list._CastQueueList, ["collection__src__queue_list|_CastQueueList"]);
  dart.setGetterSignature(queue_list._CastQueueList, () => dart.global.Object.setPrototypeOf({
    [_head$]: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|int", true),
    [_tail$]: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|int", true)
  }, dart.getGetters(dart.global.Object.getPrototypeOf(queue_list._CastQueueList))));
  dart.setSetterSignature(queue_list._CastQueueList, () => dart.global.Object.setPrototypeOf({
    [_head$]: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|int", true),
    [_tail$]: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|int", true)
  }, dart.getSetters(dart.global.Object.getPrototypeOf(queue_list._CastQueueList))));
  dart.setLibraryUri(queue_list._CastQueueList, I[3]);
  dart.setFieldSignature(queue_list._CastQueueList, () => dart.global.Object.setPrototypeOf({[_delegate]: {
      type: _ti => _ti[_eval]("collection__src__queue_list|QueueList<_CastQueueList.S>"),
      isConst: false,
      isFinal: true,
      libraryUri: I[3]
    }}, dart.getFields(dart.global.Object.getPrototypeOf(queue_list._CastQueueList))));
  equality_map.EqualityMap = class EqualityMap extends wrappers.DelegatingMap {
    static ['_#new#tearOff'](K, V, equality) {
      return new equality_map.EqualityMap.new(dart_rti.instanceType(this)[_bind](K)[_bind](V)[_eval]("collection__src__equality_map|EqualityMap<1,2>"), equality);
    }
    static ['_#from#tearOff'](K, V, equality, other) {
      return new equality_map.EqualityMap.from(dart_rti.instanceType(this)[_bind](K)[_bind](V)[_eval]("collection__src__equality_map|EqualityMap<1,2>"), equality, other);
    }
  };
  (equality_map.EqualityMap.new = function(_ti, equality) {
    this.$ti = this.$ti || _ti || dart.getReifiedType(this);
    dart.global.Object.getPrototypeOf(equality_map.EqualityMap).new.call(this, null, collection.LinkedHashMap.new(dart_rti.instanceType(this)[_eval]("collection|LinkedHashMap<EqualityMap.K,EqualityMap.V>"), {equals: dart_rti.instanceType(this)[_eval]("core|bool(EqualityMap.K,EqualityMap.K)")[_as](dart.bind(equality, 'equals')), hashCode: dart_rti.instanceType(this)[_eval]("core|int(EqualityMap.K)")[_as](dart.bind(equality, 'hash')), isValidKey: dart.bind(equality, 'isValidKey')}));
    ;
  }).prototype = equality_map.EqualityMap.prototype;
  (equality_map.EqualityMap.from = function(_ti, equality, other) {
    this.$ti = this.$ti || _ti || dart.getReifiedType(this);
    dart.global.Object.getPrototypeOf(equality_map.EqualityMap).new.call(this, null, collection.LinkedHashMap.new(dart_rti.instanceType(this)[_eval]("collection|LinkedHashMap<EqualityMap.K,EqualityMap.V>"), {equals: dart_rti.instanceType(this)[_eval]("core|bool(EqualityMap.K,EqualityMap.K)")[_as](dart.bind(equality, 'equals')), hashCode: dart_rti.instanceType(this)[_eval]("core|int(EqualityMap.K)")[_as](dart.bind(equality, 'hash')), isValidKey: dart.bind(equality, 'isValidKey')}));
    this.addAll(other);
  }).prototype = equality_map.EqualityMap.prototype;
  dart.addRtiResources(equality_map.EqualityMap, ["collection__src__equality_map|EqualityMap"]);
  dart.setLibraryUri(equality_map.EqualityMap, I[4]);
  var set = dart.privateName(union_set_controller, "UnionSetController.set");
  var _sets$ = dart.privateName(union_set_controller, "_sets");
  union_set_controller.UnionSetController = class UnionSetController extends core.Object {
    get set() {
      return this[set];
    }
    set set(value) {
      super.set = value;
    }
    static ['_#new#tearOff'](E, opts) {
      let disjoint = opts && 'disjoint' in opts ? opts.disjoint : false;
      return new union_set_controller.UnionSetController.new(dart_rti.instanceType(this)[_bind](E)[_eval]("collection__src__union_set_controller|UnionSetController<1>"), {disjoint: disjoint});
    }
    static ['_#_#tearOff'](E, _sets, disjoint) {
      return new union_set_controller.UnionSetController.__(dart_rti.instanceType(this)[_bind](E)[_eval]("collection__src__union_set_controller|UnionSetController<1>"), _sets, disjoint);
    }
    add(component) {
      dart_rti.instanceType(this)[_eval]("core|Set<UnionSetController.E>")[_as](component);
      this[_sets$].add(component);
    }
    remove(component) {
      dart_rti.instanceType(this)[_eval]("core|Set<UnionSetController.E>")[_as](component);
      return this[_sets$].remove(component);
    }
  };
  (union_set_controller.UnionSetController.new = function(_ti, opts) {
    let disjoint = opts && 'disjoint' in opts ? opts.disjoint : false;
    this.$ti = this.$ti || _ti || dart.getReifiedType(this);
    union_set_controller.UnionSetController.__.call(this, _ti, collection.LinkedHashSet.new(dart_rti.instanceType(this)[_eval]("collection|LinkedHashSet<core|Set<UnionSetController.E>>")), disjoint);
  }).prototype = union_set_controller.UnionSetController.prototype;
  (union_set_controller.UnionSetController.__ = function(_ti, _sets, disjoint) {
    this.$ti = this.$ti || _ti || dart.getReifiedType(this);
    this[_sets$] = _sets;
    this[set] = new union_set.UnionSet.new(dart_rti.instanceType(this)[_eval]("collection__src__union_set|UnionSet<UnionSetController.E>"), _sets, {disjoint: disjoint});
    ;
  }).prototype = union_set_controller.UnionSetController.prototype;
  dart.addRtiResources(union_set_controller.UnionSetController, ["collection__src__union_set_controller|UnionSetController"]);
  dart.setMethodSignature(union_set_controller.UnionSetController, () => dart.global.Object.setPrototypeOf({
    add: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "~(core|Object?)", true),
    remove: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|bool(core|Object?)", true)
  }, dart.getMethods(dart.global.Object.getPrototypeOf(union_set_controller.UnionSetController))));
  dart.setLibraryUri(union_set_controller.UnionSetController, I[5]);
  dart.setFieldSignature(union_set_controller.UnionSetController, () => dart.global.Object.setPrototypeOf({
    set: {
      type: _ti => _ti[_eval]("collection__src__union_set|UnionSet<UnionSetController.E>"),
      isConst: false,
      isFinal: true,
      libraryUri: I[0]
    },
    [_sets$]: {
      type: _ti => _ti[_eval]("core|Set<core|Set<UnionSetController.E>>"),
      isConst: false,
      isFinal: true,
      libraryUri: I[1]
    }
  }, dart.getFields(dart.global.Object.getPrototypeOf(union_set_controller.UnionSetController))));
  var _data = dart.privateName(boollist, "_data");
  var _length = dart.privateName(boollist, "_length");
  var _setBit = dart.privateName(boollist, "_setBit");
  const Object_ListBase$36$ = class Object_ListBase extends core.Object {};
  (Object_ListBase$36$.new = function() {
    collection.ListBase.new.call(this, null);
  }).prototype = Object_ListBase$36$.prototype;
  dart.applyMixin(Object_ListBase$36$, collection.ListBase);
  boollist.BoolList = class BoolList extends Object_ListBase$36$ {
    static _selectType(length, growable) {
      if (growable) {
        return new boollist._GrowableBoolList.new(length);
      } else {
        return new boollist._NonGrowableBoolList.new(length);
      }
    }
    static ['_#_selectType#tearOff'](length, growable) {
      return boollist.BoolList._selectType(length, growable);
    }
    static new(length, opts) {
      let fill = opts && 'fill' in opts ? opts.fill : false;
      let growable = opts && 'growable' in opts ? opts.growable : false;
      core.RangeError.checkNotNegative(length, "length");
      let boolList = null;
      if (growable) {
        boolList = new boollist._GrowableBoolList.new(length);
      } else {
        boolList = new boollist._NonGrowableBoolList.new(length);
      }
      if (fill) {
        boolList.fillRange(0, length, true);
      }
      return boolList;
    }
    static ['_#new#tearOff'](length, opts) {
      let fill = opts && 'fill' in opts ? opts.fill : false;
      let growable = opts && 'growable' in opts ? opts.growable : false;
      return boollist.BoolList.new(length, {fill: fill, growable: growable});
    }
    static empty(opts) {
      let growable = opts && 'growable' in opts ? opts.growable : true;
      let capacity = opts && 'capacity' in opts ? opts.capacity : 0;
      core.RangeError.checkNotNegative(capacity, "length");
      if (growable) {
        return new boollist._GrowableBoolList._withCapacity(0, capacity);
      } else {
        return new boollist._NonGrowableBoolList._withCapacity(0, capacity);
      }
    }
    static ['_#empty#tearOff'](opts) {
      let growable = opts && 'growable' in opts ? opts.growable : true;
      let capacity = opts && 'capacity' in opts ? opts.capacity : 0;
      return boollist.BoolList.empty({growable: growable, capacity: capacity});
    }
    static generate(length, generator, opts) {
      let growable = opts && 'growable' in opts ? opts.growable : true;
      core.RangeError.checkNotNegative(length, "length");
      let instance = boollist.BoolList._selectType(length, growable);
      for (let i = 0; i < length; i = i + 1) {
        instance[_setBit](i, generator(i));
      }
      return instance;
    }
    static ['_#generate#tearOff'](length, generator, opts) {
      let growable = opts && 'growable' in opts ? opts.growable : true;
      return boollist.BoolList.generate(length, generator, {growable: growable});
    }
    static of(elements, opts) {
      let t$361;
      let growable = opts && 'growable' in opts ? opts.growable : false;
      t$361 = boollist.BoolList._selectType(elements[$length], growable);
      return (() => {
        t$361.setAll(0, elements);
        return t$361;
      })();
    }
    static ['_#of#tearOff'](elements, opts) {
      let growable = opts && 'growable' in opts ? opts.growable : false;
      return boollist.BoolList.of(elements, {growable: growable});
    }
    get length() {
      return this[_length];
    }
    _get(index) {
      core.RangeError.checkValidIndex(index, this, "index", this[_length]);
      return (this[_data][$_get](index[$rightShift](5)) & (1)[$leftShift]((index & 31) >>> 0)) !== 0;
    }
    _set(index, value) {
      let value$ = value;
      dart_rti._Universe.eval(dart_rti._theUniverse(), "core|bool", true)[_as](value$);
      core.RangeError.checkValidIndex(index, this, "index", this[_length]);
      this[_setBit](index, value$);
      return value;
    }
    fillRange(start, end, fill = null) {
      let t$362, t$361, t$362$, t$361$, t$362$0, t$361$0, t$362$1, t$361$1, t$362$2, t$361$2, t$362$3, t$361$3;
      dart_rti._Universe.eval(dart_rti._theUniverse(), "core|bool?", true)[_as](fill);
      core.RangeError.checkValidRange(start, end, this[_length]);
      fill == null ? fill = false : null;
      let startWord = start[$rightShift](5);
      let endWord = (end - 1)[$rightShift](5);
      let startBit = (start & 31) >>> 0;
      let endBit = (end - 1 & 31) >>> 0;
      if (startWord < endWord) {
        if (dart.test(fill)) {
          t$361 = this[_data];
          t$362 = startWord;
          t$361[$_set](t$362, (t$361[$_get](t$362) | (-1)[$leftShift](startBit)) >>> 0);
          this[_data][$fillRange](startWord + 1, endWord, -1);
          t$361$ = this[_data];
          t$362$ = endWord;
          t$361$[$_set](t$362$, (t$361$[$_get](t$362$) | (1)[$leftShift](endBit + 1) - 1) >>> 0);
        } else {
          t$361$0 = this[_data];
          t$362$0 = startWord;
          t$361$0[$_set](t$362$0, (t$361$0[$_get](t$362$0) & (1)[$leftShift](startBit) - 1) >>> 0);
          this[_data][$fillRange](startWord + 1, endWord, 0);
          t$361$1 = this[_data];
          t$362$1 = endWord;
          t$361$1[$_set](t$362$1, (t$361$1[$_get](t$362$1) & (-1)[$leftShift](endBit + 1)) >>> 0);
        }
      } else {
        if (dart.test(fill)) {
          t$361$2 = this[_data];
          t$362$2 = startWord;
          t$361$2[$_set](t$362$2, (t$361$2[$_get](t$362$2) | ((1)[$leftShift](endBit - startBit + 1) - 1)[$leftShift](startBit)) >>> 0);
        } else {
          t$361$3 = this[_data];
          t$362$3 = startWord;
          t$361$3[$_set](t$362$3, (t$361$3[$_get](t$362$3) & ((1)[$leftShift](startBit) - 1 | (-1)[$leftShift](endBit + 1)) >>> 0) >>> 0);
        }
      }
    }
    get iterator() {
      return new boollist._BoolListIterator.new(this);
    }
    [_setBit](index, value) {
      let t$362, t$361, t$362$, t$361$;
      if (value) {
        t$361 = this[_data];
        t$362 = index[$rightShift](5);
        t$361[$_set](t$362, (t$361[$_get](t$362) | (1)[$leftShift]((index & 31) >>> 0)) >>> 0);
      } else {
        t$361$ = this[_data];
        t$362$ = index[$rightShift](5);
        t$361$[$_set](t$362$, (t$361$[$_get](t$362$) & ~(1)[$leftShift]((index & 31) >>> 0) >>> 0) >>> 0);
      }
    }
    static _lengthInWords(bitLength) {
      return (bitLength + (32 - 1))[$rightShift](5);
    }
  };
  (boollist.BoolList.__ = function(_data$, _length$) {
    this[_data] = _data$;
    this[_length] = _length$;
    dart.global.Object.getPrototypeOf(boollist.BoolList).new.call(this);
    ;
  }).prototype = boollist.BoolList.prototype;
  dart.addRtiResources(boollist.BoolList, ["collection__src__boollist|BoolList"]);
  dart.setMethodSignature(boollist.BoolList, () => dart.global.Object.setPrototypeOf({
    _get: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|bool(core|int)", true),
    [$_get]: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|bool(core|int)", true),
    _set: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "~(core|int,core|Object?)", true),
    [$_set]: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "~(core|int,core|Object?)", true),
    [_setBit]: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "~(core|int,core|bool)", true)
  }, dart.getMethods(dart.global.Object.getPrototypeOf(boollist.BoolList))));
  dart.setStaticMethodSignature(boollist.BoolList, () => ['_selectType', 'new', 'empty', 'generate', 'of', '_lengthInWords']);
  dart.setGetterSignature(boollist.BoolList, () => dart.global.Object.setPrototypeOf({
    length: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|int", true),
    [$length]: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|int", true)
  }, dart.getGetters(dart.global.Object.getPrototypeOf(boollist.BoolList))));
  dart.setLibraryUri(boollist.BoolList, I[6]);
  dart.setFieldSignature(boollist.BoolList, () => dart.global.Object.setPrototypeOf({
    [_length]: {
      type: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|int", true),
      isConst: false,
      isFinal: false,
      libraryUri: I[1]
    },
    [_data]: {
      type: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "typed_data|Uint32List", true),
      isConst: false,
      isFinal: false,
      libraryUri: I[7]
    }
  }, dart.getFields(dart.global.Object.getPrototypeOf(boollist.BoolList))));
  dart.setStaticFieldSignature(boollist.BoolList, () => ['_entryShift', '_bitsPerEntry', '_entrySignBitIndex']);
  dart.defineExtensionMethods(boollist.BoolList, ['_get', '_set', 'fillRange']);
  dart.defineExtensionAccessors(boollist.BoolList, ['length', 'iterator']);
  dart.defineLazy(boollist.BoolList, {
    /*boollist.BoolList._entryShift*/get _entryShift() {
      return 5;
    },
    /*boollist.BoolList._bitsPerEntry*/get _bitsPerEntry() {
      return 32;
    },
    /*boollist.BoolList._entrySignBitIndex*/get _entrySignBitIndex() {
      return 31;
    }
  });
  var _expand = dart.privateName(boollist, "_expand");
  var _shrink = dart.privateName(boollist, "_shrink");
  boollist._GrowableBoolList = class _GrowableBoolList extends boollist.BoolList {
    static ['_#_withCapacity#tearOff'](length, capacity) {
      return new boollist._GrowableBoolList._withCapacity(length, capacity);
    }
    static ['_#new#tearOff'](length) {
      return new boollist._GrowableBoolList.new(length);
    }
    set length(length) {
      core.RangeError.checkNotNegative(length, "length");
      if (length > this[_length]) {
        this[_expand](length);
      } else if (length < this[_length]) {
        this[_shrink](length);
      }
    }
    get length() {
      return super.length;
    }
    [_expand](length) {
      let t$361;
      if (length > this[_data][$length] * 32) {
        this[_data] = (t$361 = _native_typed_data.NativeUint32List.new(dart_rti._Universe.eval(dart_rti._theUniverse(), "_native_typed_data|NativeUint32List", true), boollist.BoolList._lengthInWords(length * 2)), (() => {
          t$361[$setRange](0, this[_data][$length], this[_data]);
          return t$361;
        })());
      }
      this[_length] = length;
    }
    [_shrink](length) {
      let t$361;
      if (length < (this[_length] / 2)[$truncate]()) {
        let newDataLength = boollist.BoolList._lengthInWords(length);
        this[_data] = (t$361 = _native_typed_data.NativeUint32List.new(dart_rti._Universe.eval(dart_rti._theUniverse(), "_native_typed_data|NativeUint32List", true), newDataLength), (() => {
          t$361[$setRange](0, newDataLength, this[_data]);
          return t$361;
        })());
      }
      for (let i = length; i < this[_data][$length] * 32; i = i + 1) {
        this[_setBit](i, false);
      }
      this[_length] = length;
    }
  };
  (boollist._GrowableBoolList._withCapacity = function(length, capacity) {
    dart.global.Object.getPrototypeOf(boollist._GrowableBoolList).__.call(this, _native_typed_data.NativeUint32List.new(dart_rti._Universe.eval(dart_rti._theUniverse(), "_native_typed_data|NativeUint32List", true), boollist.BoolList._lengthInWords(capacity)), length);
    ;
  }).prototype = boollist._GrowableBoolList.prototype;
  (boollist._GrowableBoolList.new = function(length) {
    dart.global.Object.getPrototypeOf(boollist._GrowableBoolList).__.call(this, _native_typed_data.NativeUint32List.new(dart_rti._Universe.eval(dart_rti._theUniverse(), "_native_typed_data|NativeUint32List", true), boollist.BoolList._lengthInWords(length * 2)), length);
    ;
  }).prototype = boollist._GrowableBoolList.prototype;
  dart.addRtiResources(boollist._GrowableBoolList, ["collection__src__boollist|_GrowableBoolList"]);
  dart.setMethodSignature(boollist._GrowableBoolList, () => dart.global.Object.setPrototypeOf({
    [_expand]: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "~(core|int)", true),
    [_shrink]: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "~(core|int)", true)
  }, dart.getMethods(dart.global.Object.getPrototypeOf(boollist._GrowableBoolList))));
  dart.setSetterSignature(boollist._GrowableBoolList, () => dart.global.Object.setPrototypeOf({
    length: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|int", true),
    [$length]: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|int", true)
  }, dart.getSetters(dart.global.Object.getPrototypeOf(boollist._GrowableBoolList))));
  dart.setLibraryUri(boollist._GrowableBoolList, I[6]);
  dart.setStaticFieldSignature(boollist._GrowableBoolList, () => ['_growthFactor']);
  dart.defineExtensionAccessors(boollist._GrowableBoolList, ['length']);
  dart.defineLazy(boollist._GrowableBoolList, {
    /*boollist._GrowableBoolList._growthFactor*/get _growthFactor() {
      return 2;
    }
  });
  const BoolList_NonGrowableListMixin$36 = class BoolList_NonGrowableListMixin extends boollist.BoolList {};
  (BoolList_NonGrowableListMixin$36.__ = function(_data$, _length$) {
    dart.global.Object.getPrototypeOf(BoolList_NonGrowableListMixin$36).__.call(this, _data$, _length$);
  }).prototype = BoolList_NonGrowableListMixin$36.prototype;
  dart.applyMixin(BoolList_NonGrowableListMixin$36, unmodifiable_wrappers.NonGrowableListMixin);
  boollist._NonGrowableBoolList = class _NonGrowableBoolList extends BoolList_NonGrowableListMixin$36 {
    static ['_#_withCapacity#tearOff'](length, capacity) {
      return new boollist._NonGrowableBoolList._withCapacity(length, capacity);
    }
    static ['_#new#tearOff'](length) {
      return new boollist._NonGrowableBoolList.new(length);
    }
  };
  (boollist._NonGrowableBoolList._withCapacity = function(length, capacity) {
    dart.global.Object.getPrototypeOf(boollist._NonGrowableBoolList).__.call(this, _native_typed_data.NativeUint32List.new(dart_rti._Universe.eval(dart_rti._theUniverse(), "_native_typed_data|NativeUint32List", true), boollist.BoolList._lengthInWords(capacity)), length);
    ;
  }).prototype = boollist._NonGrowableBoolList.prototype;
  (boollist._NonGrowableBoolList.new = function(length) {
    dart.global.Object.getPrototypeOf(boollist._NonGrowableBoolList).__.call(this, _native_typed_data.NativeUint32List.new(dart_rti._Universe.eval(dart_rti._theUniverse(), "_native_typed_data|NativeUint32List", true), boollist.BoolList._lengthInWords(length)), length);
    ;
  }).prototype = boollist._NonGrowableBoolList.prototype;
  dart.addRtiResources(boollist._NonGrowableBoolList, ["collection__src__boollist|_NonGrowableBoolList"]);
  dart.setLibraryUri(boollist._NonGrowableBoolList, I[6]);
  var _current = dart.privateName(boollist, "_current");
  var _pos = dart.privateName(boollist, "_pos");
  var _boolList = dart.privateName(boollist, "_boolList");
  boollist._BoolListIterator = class _BoolListIterator extends core.Object {
    static ['_#new#tearOff'](_boolList) {
      return new boollist._BoolListIterator.new(_boolList);
    }
    get current() {
      return this[_current];
    }
    moveNext() {
      let t$361;
      if (this[_boolList][_length] !== this[_length]) {
        dart.throw(new core.ConcurrentModificationError.new(this[_boolList]));
      }
      if (this[_pos] < this[_boolList].length) {
        let pos = (t$361 = this[_pos], this[_pos] = t$361 + 1, t$361);
        this[_current] = (this[_boolList][_data][$_get](pos[$rightShift](5)) & (1)[$leftShift]((pos & 31) >>> 0)) !== 0;
        return true;
      }
      this[_current] = false;
      return false;
    }
  };
  (boollist._BoolListIterator.new = function(_boolList$) {
    this[_current] = false;
    this[_pos] = 0;
    this[_boolList] = _boolList$;
    this[_length] = _boolList$[_length];
    ;
  }).prototype = boollist._BoolListIterator.prototype;
  dart.addRtiResources(boollist._BoolListIterator, ["collection__src__boollist|_BoolListIterator", "core|Iterator"]);
  dart.setMethodSignature(boollist._BoolListIterator, () => dart.global.Object.setPrototypeOf({
    moveNext: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|bool()", true)
  }, dart.getMethods(dart.global.Object.getPrototypeOf(boollist._BoolListIterator))));
  dart.setGetterSignature(boollist._BoolListIterator, () => dart.global.Object.setPrototypeOf({
    current: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|bool", true)
  }, dart.getGetters(dart.global.Object.getPrototypeOf(boollist._BoolListIterator))));
  dart.setLibraryUri(boollist._BoolListIterator, I[6]);
  dart.setFieldSignature(boollist._BoolListIterator, () => dart.global.Object.setPrototypeOf({
    [_current]: {
      type: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|bool", true),
      isConst: false,
      isFinal: false,
      libraryUri: I[1]
    },
    [_pos]: {
      type: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|int", true),
      isConst: false,
      isFinal: false,
      libraryUri: I[1]
    },
    [_length]: {
      type: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|int", true),
      isConst: false,
      isFinal: true,
      libraryUri: I[1]
    },
    [_boolList]: {
      type: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "collection__src__boollist|BoolList", true),
      isConst: false,
      isFinal: true,
      libraryUri: I[6]
    }
  }, dart.getFields(dart.global.Object.getPrototypeOf(boollist._BoolListIterator))));
  var _current$ = dart.privateName(async, "_current");
  var _datum = dart.privateName(async, "_datum");
  var _yieldStar = dart.privateName(async, "_yieldStar");
  iterable_extensions['IterableExtension|sample'] = function IterableExtension$124sample(T, $this, count, random = null) {
    core.RangeError.checkNotNegative(count, "count");
    let iterator = $this[$iterator];
    let chosen = _interceptors.JSArray.of(T[_eval]("_interceptors|JSArray<0>"), []);
    random == null ? random = math.Random.new() : null;
    while (chosen[$length] < count) {
      if (iterator.moveNext()) {
        let nextElement = iterator.current;
        let position = random.nextInt(chosen[$length] + 1);
        if (position === chosen[$length]) {
          chosen[$add](nextElement);
        } else {
          chosen[$add](chosen[$_get](position));
          chosen[$_set](position, nextElement);
        }
      } else {
        return chosen;
      }
    }
    let index = count;
    while (iterator.moveNext()) {
      index = index + 1;
      let position$ = random.nextInt(index);
      if (position$ < count) chosen[$_set](position$, iterator.current);
    }
    return chosen;
  };
  iterable_extensions['IterableExtension|get#sample'] = function IterableExtension$124get$35sample(T, $this) {
    return dart.fn((count, random = null) => iterable_extensions['IterableExtension|sample'](T, $this, count, random), T[_eval]("core|List<0>(core|int[math|Random?])"));
  };
  iterable_extensions['IterableExtension|whereNot'] = function IterableExtension$124whereNot(T, $this, test) {
    return $this[$where](dart.fn(element => !test(element), T[_eval]("core|bool(0)")));
  };
  iterable_extensions['IterableExtension|get#whereNot'] = function IterableExtension$124get$35whereNot(T, $this) {
    return dart.fn(test => iterable_extensions['IterableExtension|whereNot'](T, $this, test), T[_eval]("core|Iterable<0>(core|bool(0))"));
  };
  iterable_extensions['IterableExtension|sorted'] = function IterableExtension$124sorted(T, $this, compare) {
    let t$367;
    t$367 = (() => {
      let t$366 = core.List.of(T[_eval]("core|List<0>"), $this);
      return t$366;
    })();
    return (() => {
      t$367[$sort](compare);
      return t$367;
    })();
  };
  iterable_extensions['IterableExtension|get#sorted'] = function IterableExtension$124get$35sorted(T, $this) {
    return dart.fn(compare => iterable_extensions['IterableExtension|sorted'](T, $this, compare), T[_eval]("core|List<0>(core|int(0,0))"));
  };
  iterable_extensions['IterableExtension|shuffled'] = function IterableExtension$124shuffled(T, $this, random = null) {
    let t$3610;
    t$3610 = (() => {
      let t$369 = core.List.of(T[_eval]("core|List<0>"), $this);
      return t$369;
    })();
    return (() => {
      t$3610[$shuffle](random);
      return t$3610;
    })();
  };
  iterable_extensions['IterableExtension|get#shuffled'] = function IterableExtension$124get$35shuffled(T, $this) {
    return dart.fn((random = null) => iterable_extensions['IterableExtension|shuffled'](T, $this, random), T[_eval]("core|List<0>([math|Random?])"));
  };
  iterable_extensions['IterableExtension|sortedBy'] = function IterableExtension$124sortedBy(T, K, $this, keyOf) {
    let elements = (() => {
      let t$3612 = core.List.of(T[_eval]("core|List<0>"), $this);
      return t$3612;
    })();
    algorithms.mergeSortBy(T, K, elements, keyOf, dart.gbind(C[0] || CT.C0, K));
    return elements;
  };
  iterable_extensions['IterableExtension|get#sortedBy'] = function IterableExtension$124get$35sortedBy(T, $this) {
    return dart.gFn((K, keyOf) => iterable_extensions['IterableExtension|sortedBy'](T, K, $this, keyOf), T[_eval]("core|List<0>(0^(0))<core|Comparable<0^>>"), dart.constList(dart_rti._Universe.eval(dart_rti._theUniverse(), "@", true), [dart_rti._Universe.eval(dart_rti._theUniverse(), "core|Comparable<@>", true)]));
  };
  iterable_extensions['IterableExtension|get#sortedByCompare'] = function IterableExtension$124get$35sortedByCompare(T, $this) {
    return dart.gFn((K, keyOf, compare) => iterable_extensions['IterableExtension|sortedByCompare'](T, K, $this, keyOf, compare), T[_eval]("core|List<0>(0^(0),core|int(0^,0^))<core|Object?>"), dart.constList(dart_rti._Universe.eval(dart_rti._theUniverse(), "@", true), [dart_rti._Universe.eval(dart_rti._theUniverse(), "@", true)]));
  };
  iterable_extensions['IterableExtension|sortedByCompare'] = function IterableExtension$124sortedByCompare(T, K, $this, keyOf, compare) {
    let elements = (() => {
      let t$3616 = core.List.of(T[_eval]("core|List<0>"), $this);
      return t$3616;
    })();
    algorithms.mergeSortBy(T, K, elements, keyOf, compare);
    return elements;
  };
  iterable_extensions['IterableExtension|isSorted'] = function IterableExtension$124isSorted(T, $this, compare) {
    let iterator = $this[$iterator];
    if (!iterator.moveNext()) return true;
    let previousElement = iterator.current;
    while (iterator.moveNext()) {
      let element = iterator.current;
      if (compare(previousElement, element) > 0) return false;
      previousElement = element;
    }
    return true;
  };
  iterable_extensions['IterableExtension|get#isSorted'] = function IterableExtension$124get$35isSorted(T, $this) {
    return dart.fn(compare => iterable_extensions['IterableExtension|isSorted'](T, $this, compare), T[_eval]("core|bool(core|int(0,0))"));
  };
  iterable_extensions['IterableExtension|isSortedBy'] = function IterableExtension$124isSortedBy(T, K, $this, keyOf) {
    let iterator = $this[$iterator];
    if (!iterator.moveNext()) return true;
    let previousKey = keyOf(iterator.current);
    while (iterator.moveNext()) {
      let key = keyOf(iterator.current);
      if (previousKey[$compareTo](key) > 0) return false;
      previousKey = key;
    }
    return true;
  };
  iterable_extensions['IterableExtension|get#isSortedBy'] = function IterableExtension$124get$35isSortedBy(T, $this) {
    return dart.gFn((K, keyOf) => iterable_extensions['IterableExtension|isSortedBy'](T, K, $this, keyOf), T[_eval]("core|bool(0^(0))<core|Comparable<0^>>"), dart.constList(dart_rti._Universe.eval(dart_rti._theUniverse(), "@", true), [dart_rti._Universe.eval(dart_rti._theUniverse(), "core|Comparable<@>", true)]));
  };
  iterable_extensions['IterableExtension|isSortedByCompare'] = function IterableExtension$124isSortedByCompare(T, K, $this, keyOf, compare) {
    let iterator = $this[$iterator];
    if (!iterator.moveNext()) return true;
    let previousKey = keyOf(iterator.current);
    while (iterator.moveNext()) {
      let key = keyOf(iterator.current);
      if (compare(previousKey, key) > 0) return false;
      previousKey = key;
    }
    return true;
  };
  iterable_extensions['IterableExtension|get#isSortedByCompare'] = function IterableExtension$124get$35isSortedByCompare(T, $this) {
    return dart.gFn((K, keyOf, compare) => iterable_extensions['IterableExtension|isSortedByCompare'](T, K, $this, keyOf, compare), T[_eval]("core|bool(0^(0),core|int(0^,0^))<core|Object?>"), dart.constList(dart_rti._Universe.eval(dart_rti._theUniverse(), "@", true), [dart_rti._Universe.eval(dart_rti._theUniverse(), "@", true)]));
  };
  iterable_extensions['IterableExtension|forEachIndexed'] = function IterableExtension$124forEachIndexed(T, $this, action) {
    let t$3624;
    let index = 0;
    for (let element of $this) {
      action((t$3624 = index, index = t$3624 + 1, t$3624), element);
    }
  };
  iterable_extensions['IterableExtension|get#forEachIndexed'] = function IterableExtension$124get$35forEachIndexed(T, $this) {
    return dart.fn(action => iterable_extensions['IterableExtension|forEachIndexed'](T, $this, action), T[_eval]("~(~(core|int,0))"));
  };
  iterable_extensions['IterableExtension|forEachWhile'] = function IterableExtension$124forEachWhile(T, $this, action) {
    for (let element of $this) {
      if (!action(element)) break;
    }
  };
  iterable_extensions['IterableExtension|get#forEachWhile'] = function IterableExtension$124get$35forEachWhile(T, $this) {
    return dart.fn(action => iterable_extensions['IterableExtension|forEachWhile'](T, $this, action), T[_eval]("~(core|bool(0))"));
  };
  iterable_extensions['IterableExtension|forEachIndexedWhile'] = function IterableExtension$124forEachIndexedWhile(T, $this, action) {
    let t$3628;
    let index = 0;
    for (let element of $this) {
      if (!action((t$3628 = index, index = t$3628 + 1, t$3628), element)) break;
    }
  };
  iterable_extensions['IterableExtension|get#forEachIndexedWhile'] = function IterableExtension$124get$35forEachIndexedWhile(T, $this) {
    return dart.fn(action => iterable_extensions['IterableExtension|forEachIndexedWhile'](T, $this, action), T[_eval]("~(core|bool(core|int,0))"));
  };
  iterable_extensions['IterableExtension|mapIndexed'] = function IterableExtension$124mapIndexed(T, R, $this, convert) {
    let t$3630;
    let T$ = T, R$ = R, $this$ = $this, convert$ = convert;
    return async._makeSyncStarIterable(R, () => {
      let T = T$, R = R$, $this = $this$, convert = convert$;
      let t$goto = 0, t$handler = 1, t$errorStack = [], t$wrappedValue, t$iterator, asyncScope = Object.create(null), asyncScope$ = Object.create(null);
      return (t$iterator$, t$errorCode, t$result) => {
        if (t$errorCode === 1) {
          t$errorStack.push(t$result);
          t$goto = t$handler;
        }
        while (true)
          switch (t$goto) {
            case 0:
              // Function start
              asyncScope.index = 0;
              t$iterator = $this[Symbol.iterator]();
            case 2:
              // for-of iterator update
              t$wrappedValue = t$iterator.next();
              if (t$wrappedValue.done) {
                // goto after for-of
                t$goto = 3;
                break;
              }
              asyncScope$.element = t$wrappedValue.value;
              t$goto = 4;
              return t$iterator$[_current$] = convert((t$3630 = asyncScope.index, asyncScope.index = t$3630 + 1, t$3630), asyncScope$.element), 1;
            case 4:
              // after yield
              // goto for-of iterator update
              t$goto = 2;
              break;
            case 3:
              // after for-of
              // implicit return
              return 0;
            case 1:
              // rethrow
              return t$iterator$[_datum] = t$errorStack.at(-1), 3;
          }
      };
    });
  };
  iterable_extensions['IterableExtension|get#mapIndexed'] = function IterableExtension$124get$35mapIndexed(T, $this) {
    return dart.gFn((R, convert) => iterable_extensions['IterableExtension|mapIndexed'](T, R, $this, convert), T[_eval]("core|Iterable<0^>(0^(core|int,0))<core|Object?>"), dart.constList(dart_rti._Universe.eval(dart_rti._theUniverse(), "@", true), [dart_rti._Universe.eval(dart_rti._theUniverse(), "@", true)]));
  };
  iterable_extensions['IterableExtension|whereIndexed'] = function IterableExtension$124whereIndexed(T, $this, test) {
    let t$3632;
    let T$ = T, $this$ = $this, test$ = test;
    return async._makeSyncStarIterable(T, () => {
      let T = T$, $this = $this$, test = test$;
      let t$goto = 0, t$handler = 1, t$errorStack = [], t$wrappedValue, t$iterator, asyncScope = Object.create(null), asyncScope$ = Object.create(null);
      return (t$iterator$, t$errorCode, t$result) => {
        if (t$errorCode === 1) {
          t$errorStack.push(t$result);
          t$goto = t$handler;
        }
        while (true)
          switch (t$goto) {
            case 0:
              // Function start
              asyncScope.index = 0;
              t$iterator = $this[Symbol.iterator]();
            case 2:
              // for-of iterator update
              t$wrappedValue = t$iterator.next();
              if (t$wrappedValue.done) {
                // goto after for-of
                t$goto = 3;
                break;
              }
              asyncScope$.element = t$wrappedValue.value;
              t$goto = test((t$3632 = asyncScope.index, asyncScope.index = t$3632 + 1, t$3632), asyncScope$.element) ? 4 : 5;
              break;
            case 4:
              // then
              t$goto = 6;
              return t$iterator$[_current$] = asyncScope$.element, 1;
            case 6:
              // after yield
            case 5:
              // join
              // goto for-of iterator update
              t$goto = 2;
              break;
            case 3:
              // after for-of
              // implicit return
              return 0;
            case 1:
              // rethrow
              return t$iterator$[_datum] = t$errorStack.at(-1), 3;
          }
      };
    });
  };
  iterable_extensions['IterableExtension|get#whereIndexed'] = function IterableExtension$124get$35whereIndexed(T, $this) {
    return dart.fn(test => iterable_extensions['IterableExtension|whereIndexed'](T, $this, test), T[_eval]("core|Iterable<0>(core|bool(core|int,0))"));
  };
  iterable_extensions['IterableExtension|whereNotIndexed'] = function IterableExtension$124whereNotIndexed(T, $this, test) {
    let t$3634;
    let T$ = T, $this$ = $this, test$ = test;
    return async._makeSyncStarIterable(T, () => {
      let T = T$, $this = $this$, test = test$;
      let t$goto = 0, t$handler = 1, t$errorStack = [], t$wrappedValue, t$iterator, asyncScope = Object.create(null), asyncScope$ = Object.create(null);
      return (t$iterator$, t$errorCode, t$result) => {
        if (t$errorCode === 1) {
          t$errorStack.push(t$result);
          t$goto = t$handler;
        }
        while (true)
          switch (t$goto) {
            case 0:
              // Function start
              asyncScope.index = 0;
              t$iterator = $this[Symbol.iterator]();
            case 2:
              // for-of iterator update
              t$wrappedValue = t$iterator.next();
              if (t$wrappedValue.done) {
                // goto after for-of
                t$goto = 3;
                break;
              }
              asyncScope$.element = t$wrappedValue.value;
              t$goto = !test((t$3634 = asyncScope.index, asyncScope.index = t$3634 + 1, t$3634), asyncScope$.element) ? 4 : 5;
              break;
            case 4:
              // then
              t$goto = 6;
              return t$iterator$[_current$] = asyncScope$.element, 1;
            case 6:
              // after yield
            case 5:
              // join
              // goto for-of iterator update
              t$goto = 2;
              break;
            case 3:
              // after for-of
              // implicit return
              return 0;
            case 1:
              // rethrow
              return t$iterator$[_datum] = t$errorStack.at(-1), 3;
          }
      };
    });
  };
  iterable_extensions['IterableExtension|get#whereNotIndexed'] = function IterableExtension$124get$35whereNotIndexed(T, $this) {
    return dart.fn(test => iterable_extensions['IterableExtension|whereNotIndexed'](T, $this, test), T[_eval]("core|Iterable<0>(core|bool(core|int,0))"));
  };
  iterable_extensions['IterableExtension|expandIndexed'] = function IterableExtension$124expandIndexed(T, R, $this, expand) {
    let t$3636;
    let T$ = T, R$ = R, $this$ = $this, expand$ = expand;
    return async._makeSyncStarIterable(R, () => {
      let T = T$, R = R$, $this = $this$, expand = expand$;
      let t$goto = 0, t$handler = 1, t$errorStack = [], t$wrappedValue, t$iterator, asyncScope = Object.create(null), asyncScope$ = Object.create(null);
      return (t$iterator$, t$errorCode, t$result) => {
        if (t$errorCode === 1) {
          t$errorStack.push(t$result);
          t$goto = t$handler;
        }
        while (true)
          switch (t$goto) {
            case 0:
              // Function start
              asyncScope.index = 0;
              t$iterator = $this[Symbol.iterator]();
            case 2:
              // for-of iterator update
              t$wrappedValue = t$iterator.next();
              if (t$wrappedValue.done) {
                // goto after for-of
                t$goto = 3;
                break;
              }
              asyncScope$.element = t$wrappedValue.value;
              t$goto = 4;
              return t$iterator$[_yieldStar](expand((t$3636 = asyncScope.index, asyncScope.index = t$3636 + 1, t$3636), asyncScope$.element));
            case 4:
              // after yield
              // goto for-of iterator update
              t$goto = 2;
              break;
            case 3:
              // after for-of
              // implicit return
              return 0;
            case 1:
              // rethrow
              return t$iterator$[_datum] = t$errorStack.at(-1), 3;
          }
      };
    });
  };
  iterable_extensions['IterableExtension|get#expandIndexed'] = function IterableExtension$124get$35expandIndexed(T, $this) {
    return dart.gFn((R, expand) => iterable_extensions['IterableExtension|expandIndexed'](T, R, $this, expand), T[_eval]("core|Iterable<0^>(core|Iterable<0^>(core|int,0))<core|Object?>"), dart.constList(dart_rti._Universe.eval(dart_rti._theUniverse(), "@", true), [dart_rti._Universe.eval(dart_rti._theUniverse(), "@", true)]));
  };
  iterable_extensions['IterableExtension|reduceIndexed'] = function IterableExtension$124reduceIndexed(T, $this, combine) {
    let t$3638;
    let iterator = $this[$iterator];
    if (!iterator.moveNext()) {
      dart.throw(new core.StateError.new("no elements"));
    }
    let index = 1;
    let result = iterator.current;
    while (iterator.moveNext()) {
      result = combine((t$3638 = index, index = t$3638 + 1, t$3638), result, iterator.current);
    }
    return result;
  };
  iterable_extensions['IterableExtension|get#reduceIndexed'] = function IterableExtension$124get$35reduceIndexed(T, $this) {
    return dart.fn(combine => iterable_extensions['IterableExtension|reduceIndexed'](T, $this, combine), T[_eval]("0(0(core|int,0,0))"));
  };
  iterable_extensions['IterableExtension|foldIndexed'] = function IterableExtension$124foldIndexed(T, R, $this, initialValue, combine) {
    let t$3640;
    let result = initialValue;
    let index = 0;
    for (let element of $this) {
      result = combine((t$3640 = index, index = t$3640 + 1, t$3640), result, element);
    }
    return result;
  };
  iterable_extensions['IterableExtension|get#foldIndexed'] = function IterableExtension$124get$35foldIndexed(T, $this) {
    return dart.gFn((R, initialValue, combine) => iterable_extensions['IterableExtension|foldIndexed'](T, R, $this, initialValue, combine), T[_eval]("0^(0^,0^(core|int,0^,0))<core|Object?>"), dart.constList(dart_rti._Universe.eval(dart_rti._theUniverse(), "@", true), [dart_rti._Universe.eval(dart_rti._theUniverse(), "@", true)]));
  };
  iterable_extensions['IterableExtension|get#firstWhereOrNull'] = function IterableExtension$124get$35firstWhereOrNull(T, $this) {
    return dart.fn(test => iterable_extensions['IterableExtension|firstWhereOrNull'](T, $this, test), T[_eval]("0?(core|bool(0))"));
  };
  iterable_extensions['IterableExtension|firstWhereOrNull'] = function IterableExtension$124firstWhereOrNull(T, $this, test) {
    for (let element of $this) {
      if (test(element)) return element;
    }
    return null;
  };
  iterable_extensions['IterableExtension|firstWhereIndexedOrNull'] = function IterableExtension$124firstWhereIndexedOrNull(T, $this, test) {
    let t$3644;
    let index = 0;
    for (let element of $this) {
      if (test((t$3644 = index, index = t$3644 + 1, t$3644), element)) return element;
    }
    return null;
  };
  iterable_extensions['IterableExtension|get#firstWhereIndexedOrNull'] = function IterableExtension$124get$35firstWhereIndexedOrNull(T, $this) {
    return dart.fn(test => iterable_extensions['IterableExtension|firstWhereIndexedOrNull'](T, $this, test), T[_eval]("0?(core|bool(core|int,0))"));
  };
  iterable_extensions['IterableExtension|get#firstOrNull'] = function IterableExtension$124get$35firstOrNull(T, $this) {
    let iterator = $this[$iterator];
    if (iterator.moveNext()) return iterator.current;
    return null;
  };
  iterable_extensions['IterableExtension|lastWhereOrNull'] = function IterableExtension$124lastWhereOrNull(T, $this, test) {
    let result = null;
    for (let element of $this) {
      if (test(element)) result = element;
    }
    return result;
  };
  iterable_extensions['IterableExtension|get#lastWhereOrNull'] = function IterableExtension$124get$35lastWhereOrNull(T, $this) {
    return dart.fn(test => iterable_extensions['IterableExtension|lastWhereOrNull'](T, $this, test), T[_eval]("0?(core|bool(0))"));
  };
  iterable_extensions['IterableExtension|lastWhereIndexedOrNull'] = function IterableExtension$124lastWhereIndexedOrNull(T, $this, test) {
    let t$3649;
    let result = null;
    let index = 0;
    for (let element of $this) {
      if (test((t$3649 = index, index = t$3649 + 1, t$3649), element)) result = element;
    }
    return result;
  };
  iterable_extensions['IterableExtension|get#lastWhereIndexedOrNull'] = function IterableExtension$124get$35lastWhereIndexedOrNull(T, $this) {
    return dart.fn(test => iterable_extensions['IterableExtension|lastWhereIndexedOrNull'](T, $this, test), T[_eval]("0?(core|bool(core|int,0))"));
  };
  iterable_extensions['IterableExtension|get#lastOrNull'] = function IterableExtension$124get$35lastOrNull(T, $this) {
    if ($this[$isEmpty]) return null;
    return $this[$last];
  };
  iterable_extensions['IterableExtension|singleWhereOrNull'] = function IterableExtension$124singleWhereOrNull(T, $this, test) {
    let result = null;
    let found = false;
    for (let element of $this) {
      if (test(element)) {
        if (!found) {
          result = element;
          found = true;
        } else {
          return null;
        }
      }
    }
    return result;
  };
  iterable_extensions['IterableExtension|get#singleWhereOrNull'] = function IterableExtension$124get$35singleWhereOrNull(T, $this) {
    return dart.fn(test => iterable_extensions['IterableExtension|singleWhereOrNull'](T, $this, test), T[_eval]("0?(core|bool(0))"));
  };
  iterable_extensions['IterableExtension|get#singleWhereIndexedOrNull'] = function IterableExtension$124get$35singleWhereIndexedOrNull(T, $this) {
    return dart.fn(test => iterable_extensions['IterableExtension|singleWhereIndexedOrNull'](T, $this, test), T[_eval]("0?(core|bool(core|int,0))"));
  };
  iterable_extensions['IterableExtension|singleWhereIndexedOrNull'] = function IterableExtension$124singleWhereIndexedOrNull(T, $this, test) {
    let t$3655;
    let result = null;
    let found = false;
    let index = 0;
    for (let element of $this) {
      if (test((t$3655 = index, index = t$3655 + 1, t$3655), element)) {
        if (!found) {
          result = element;
          found = true;
        } else {
          return null;
        }
      }
    }
    return result;
  };
  iterable_extensions['IterableExtension|get#singleOrNull'] = function IterableExtension$124get$35singleOrNull(T, $this) {
    let iterator = $this[$iterator];
    if (iterator.moveNext()) {
      let result = iterator.current;
      if (!iterator.moveNext()) {
        return result;
      }
    }
    return null;
  };
  iterable_extensions['IterableExtension|elementAtOrNull'] = function IterableExtension$124elementAtOrNull(T, $this, index) {
    return iterable_extensions['IterableExtension|get#firstOrNull'](T, $this[$skip](index));
  };
  iterable_extensions['IterableExtension|get#elementAtOrNull'] = function IterableExtension$124get$35elementAtOrNull(T, $this) {
    return dart.fn(index => iterable_extensions['IterableExtension|elementAtOrNull'](T, $this, index), T[_eval]("0?(core|int)"));
  };
  iterable_extensions['IterableExtension|lastBy'] = function IterableExtension$124lastBy(T, K, $this, key) {
    return functions.lastBy(T, K, $this, key);
  };
  iterable_extensions['IterableExtension|get#lastBy'] = function IterableExtension$124get$35lastBy(T, $this) {
    return dart.gFn((K, key) => iterable_extensions['IterableExtension|lastBy'](T, K, $this, key), T[_eval]("core|Map<0^,0>(0^(0))<core|Object?>"), dart.constList(dart_rti._Universe.eval(dart_rti._theUniverse(), "@", true), [dart_rti._Universe.eval(dart_rti._theUniverse(), "@", true)]));
  };
  iterable_extensions['IterableExtension|groupFoldBy'] = function IterableExtension$124groupFoldBy(T, K, G, $this, keyOf, combine) {
    let result = new _js_helper.LinkedMap.new(K[_eval]("@<0>")[_bind](G)[_eval]("_js_helper|LinkedMap<1,2>"));
    for (let element of $this) {
      let key = keyOf(element);
      result[$_set](key, combine(result[$_get](key), element));
    }
    return result;
  };
  iterable_extensions['IterableExtension|get#groupFoldBy'] = function IterableExtension$124get$35groupFoldBy(T, $this) {
    return dart.gFn((K, G, keyOf, combine) => iterable_extensions['IterableExtension|groupFoldBy'](T, K, G, $this, keyOf, combine), T[_eval]("core|Map<0^,1^>(0^(0),1^(1^?,0))<core|Object?,core|Object?>"), dart.constList(dart_rti._Universe.eval(dart_rti._theUniverse(), "@", true), [dart_rti._Universe.eval(dart_rti._theUniverse(), "@", true), dart_rti._Universe.eval(dart_rti._theUniverse(), "@", true)]));
  };
  iterable_extensions['IterableExtension|groupSetsBy'] = function IterableExtension$124groupSetsBy(T, K, $this, keyOf) {
    let t$3666, t$3665, t$3664, t$3663;
    let result = new _js_helper.LinkedMap.new(T[_eval]("@<0>")[_bind](K)[_eval]("_js_helper|LinkedMap<2,core|Set<1>>"));
    for (let element of $this) {
      (t$3663 = result, t$3664 = keyOf(element), t$3665 = t$3663[$_get](t$3664), t$3665 == null ? (t$3666 = collection.LinkedHashSet.new(T[_eval]("collection|LinkedHashSet<0>")), t$3663[$_set](t$3664, t$3666), t$3666) : t$3665).add(element);
    }
    return result;
  };
  iterable_extensions['IterableExtension|get#groupSetsBy'] = function IterableExtension$124get$35groupSetsBy(T, $this) {
    return dart.gFn((K, keyOf) => iterable_extensions['IterableExtension|groupSetsBy'](T, K, $this, keyOf), T[_eval]("core|Map<0^,core|Set<0>>(0^(0))<core|Object?>"), dart.constList(dart_rti._Universe.eval(dart_rti._theUniverse(), "@", true), [dart_rti._Universe.eval(dart_rti._theUniverse(), "@", true)]));
  };
  iterable_extensions['IterableExtension|groupListsBy'] = function IterableExtension$124groupListsBy(T, K, $this, keyOf) {
    let t$3668, t$3667, t$3666, t$3665;
    let result = new _js_helper.LinkedMap.new(T[_eval]("@<0>")[_bind](K)[_eval]("_js_helper|LinkedMap<2,core|List<1>>"));
    for (let element of $this) {
      (t$3665 = result, t$3666 = keyOf(element), t$3667 = t$3665[$_get](t$3666), t$3667 == null ? (t$3668 = _interceptors.JSArray.of(T[_eval]("_interceptors|JSArray<0>"), []), t$3665[$_set](t$3666, t$3668), t$3668) : t$3667)[$add](element);
    }
    return result;
  };
  iterable_extensions['IterableExtension|get#groupListsBy'] = function IterableExtension$124get$35groupListsBy(T, $this) {
    return dart.gFn((K, keyOf) => iterable_extensions['IterableExtension|groupListsBy'](T, K, $this, keyOf), T[_eval]("core|Map<0^,core|List<0>>(0^(0))<core|Object?>"), dart.constList(dart_rti._Universe.eval(dart_rti._theUniverse(), "@", true), [dart_rti._Universe.eval(dart_rti._theUniverse(), "@", true)]));
  };
  iterable_extensions['IterableExtension|get#splitBefore'] = function IterableExtension$124get$35splitBefore(T, $this) {
    return dart.fn(test => iterable_extensions['IterableExtension|splitBefore'](T, $this, test), T[_eval]("core|Iterable<core|List<0>>(core|bool(0))"));
  };
  iterable_extensions['IterableExtension|splitBefore'] = function IterableExtension$124splitBefore(T, $this, test) {
    return iterable_extensions['IterableExtension|splitBeforeIndexed'](T, $this, dart.fn((_, element) => test(element), T[_eval]("core|bool(core|int,0)")));
  };
  iterable_extensions['IterableExtension|splitAfter'] = function IterableExtension$124splitAfter(T, $this, test) {
    return iterable_extensions['IterableExtension|splitAfterIndexed'](T, $this, dart.fn((_, element) => test(element), T[_eval]("core|bool(core|int,0)")));
  };
  iterable_extensions['IterableExtension|get#splitAfter'] = function IterableExtension$124get$35splitAfter(T, $this) {
    return dart.fn(test => iterable_extensions['IterableExtension|splitAfter'](T, $this, test), T[_eval]("core|Iterable<core|List<0>>(core|bool(0))"));
  };
  iterable_extensions['IterableExtension|splitBetween'] = function IterableExtension$124splitBetween(T, $this, test) {
    return iterable_extensions['IterableExtension|splitBetweenIndexed'](T, $this, dart.fn((_, first, second) => test(first, second), T[_eval]("core|bool(core|int,0,0)")));
  };
  iterable_extensions['IterableExtension|get#splitBetween'] = function IterableExtension$124get$35splitBetween(T, $this) {
    return dart.fn(test => iterable_extensions['IterableExtension|splitBetween'](T, $this, test), T[_eval]("core|Iterable<core|List<0>>(core|bool(0,0))"));
  };
  iterable_extensions['IterableExtension|splitBeforeIndexed'] = function IterableExtension$124splitBeforeIndexed(T, $this, test) {
    let t$3673;
    let T$ = T, $this$ = $this, test$ = test;
    return async._makeSyncStarIterable(T[_eval]("core|List<0>"), () => {
      let T = T$, $this = $this$, test = test$;
      let t$goto = 0, t$handler = 1, t$errorStack = [], asyncScope = Object.create(null), asyncScope$ = Object.create(null);
      return (t$iterator, t$errorCode, t$result) => {
        if (t$errorCode === 1) {
          t$errorStack.push(t$result);
          t$goto = t$handler;
        }
        while (true)
          switch (t$goto) {
            case 0:
              // Function start
              asyncScope.iterator = $this[$iterator];
              if (!asyncScope.iterator.moveNext()) {
                // goto return
                t$goto = 2;
                break;
              }
              asyncScope.index = 1;
              asyncScope.chunk = _interceptors.JSArray.of(T[_eval]("_interceptors|JSArray<0>"), [asyncScope.iterator.current]);
            case 3:
              // while condition
              if (!asyncScope.iterator.moveNext()) {
                // goto after while
                t$goto = 4;
                break;
              }
              asyncScope$.element = asyncScope.iterator.current;
              t$goto = test((t$3673 = asyncScope.index, asyncScope.index = t$3673 + 1, t$3673), asyncScope$.element) ? 5 : 6;
              break;
            case 5:
              // then
              t$goto = 7;
              return t$iterator[_current$] = asyncScope.chunk, 1;
            case 7:
              // after yield
              asyncScope.chunk = _interceptors.JSArray.of(T[_eval]("_interceptors|JSArray<0>"), []);
            case 6:
              // join
              asyncScope.chunk[$add](asyncScope$.element);
              // goto while condition
              t$goto = 3;
              break;
            case 4:
              // after while
              t$goto = 8;
              return t$iterator[_current$] = asyncScope.chunk, 1;
            case 8:
              // after yield
            case 2:
              // return
              return 0;
            case 1:
              // rethrow
              return t$iterator[_datum] = t$errorStack.at(-1), 3;
          }
      };
    });
  };
  iterable_extensions['IterableExtension|get#splitBeforeIndexed'] = function IterableExtension$124get$35splitBeforeIndexed(T, $this) {
    return dart.fn(test => iterable_extensions['IterableExtension|splitBeforeIndexed'](T, $this, test), T[_eval]("core|Iterable<core|List<0>>(core|bool(core|int,0))"));
  };
  iterable_extensions['IterableExtension|splitAfterIndexed'] = function IterableExtension$124splitAfterIndexed(T, $this, test) {
    let t$3675, t$3675$;
    let T$ = T, $this$ = $this, test$ = test;
    return async._makeSyncStarIterable(T[_eval]("core|List<0>"), () => {
      let T = T$, $this = $this$, test = test$;
      let t$goto = 0, t$handler = 1, t$errorStack = [], t$wrappedValue, t$iterator, asyncScope = Object.create(null), asyncScope$ = Object.create(null);
      return (t$iterator$, t$errorCode, t$result) => {
        if (t$errorCode === 1) {
          t$errorStack.push(t$result);
          t$goto = t$handler;
        }
        while (true)
          switch (t$goto) {
            case 0:
              // Function start
              asyncScope.index = 0;
              asyncScope.chunk = null;
              t$iterator = $this[Symbol.iterator]();
            case 2:
              // for-of iterator update
              t$wrappedValue = t$iterator.next();
              if (t$wrappedValue.done) {
                // goto after for-of
                t$goto = 3;
                break;
              }
              asyncScope$.element = t$wrappedValue.value;
              (t$3675 = asyncScope.chunk, t$3675 == null ? asyncScope.chunk = _interceptors.JSArray.of(T[_eval]("_interceptors|JSArray<0>"), []) : t$3675)[$add](asyncScope$.element);
              t$goto = test((t$3675$ = asyncScope.index, asyncScope.index = t$3675$ + 1, t$3675$), asyncScope$.element) ? 4 : 5;
              break;
            case 4:
              // then
              t$goto = 6;
              return t$iterator$[_current$] = asyncScope.chunk, 1;
            case 6:
              // after yield
              asyncScope.chunk = null;
            case 5:
              // join
              // goto for-of iterator update
              t$goto = 2;
              break;
            case 3:
              // after for-of
              t$goto = asyncScope.chunk != null ? 7 : 8;
              break;
            case 7:
              // then
              t$goto = 9;
              return t$iterator$[_current$] = asyncScope.chunk, 1;
            case 9:
              // after yield
            case 8:
              // join
              // implicit return
              return 0;
            case 1:
              // rethrow
              return t$iterator$[_datum] = t$errorStack.at(-1), 3;
          }
      };
    });
  };
  iterable_extensions['IterableExtension|get#splitAfterIndexed'] = function IterableExtension$124get$35splitAfterIndexed(T, $this) {
    return dart.fn(test => iterable_extensions['IterableExtension|splitAfterIndexed'](T, $this, test), T[_eval]("core|Iterable<core|List<0>>(core|bool(core|int,0))"));
  };
  iterable_extensions['IterableExtension|splitBetweenIndexed'] = function IterableExtension$124splitBetweenIndexed(T, $this, test) {
    let t$3677;
    let T$ = T, $this$ = $this, test$ = test;
    return async._makeSyncStarIterable(T[_eval]("core|List<0>"), () => {
      let T = T$, $this = $this$, test = test$;
      let t$goto = 0, t$handler = 1, t$errorStack = [], asyncScope = Object.create(null), asyncScope$ = Object.create(null);
      return (t$iterator, t$errorCode, t$result) => {
        if (t$errorCode === 1) {
          t$errorStack.push(t$result);
          t$goto = t$handler;
        }
        while (true)
          switch (t$goto) {
            case 0:
              // Function start
              asyncScope.iterator = $this[$iterator];
              if (!asyncScope.iterator.moveNext()) {
                // goto return
                t$goto = 2;
                break;
              }
              asyncScope.previous = asyncScope.iterator.current;
              asyncScope.chunk = _interceptors.JSArray.of(T[_eval]("_interceptors|JSArray<0>"), [asyncScope.previous]);
              asyncScope.index = 1;
            case 3:
              // while condition
              if (!asyncScope.iterator.moveNext()) {
                // goto after while
                t$goto = 4;
                break;
              }
              asyncScope$.element = asyncScope.iterator.current;
              t$goto = test((t$3677 = asyncScope.index, asyncScope.index = t$3677 + 1, t$3677), asyncScope.previous, asyncScope$.element) ? 5 : 6;
              break;
            case 5:
              // then
              t$goto = 7;
              return t$iterator[_current$] = asyncScope.chunk, 1;
            case 7:
              // after yield
              asyncScope.chunk = _interceptors.JSArray.of(T[_eval]("_interceptors|JSArray<0>"), []);
            case 6:
              // join
              asyncScope.chunk[$add](asyncScope$.element);
              asyncScope.previous = asyncScope$.element;
              // goto while condition
              t$goto = 3;
              break;
            case 4:
              // after while
              t$goto = 8;
              return t$iterator[_current$] = asyncScope.chunk, 1;
            case 8:
              // after yield
            case 2:
              // return
              return 0;
            case 1:
              // rethrow
              return t$iterator[_datum] = t$errorStack.at(-1), 3;
          }
      };
    });
  };
  iterable_extensions['IterableExtension|get#splitBetweenIndexed'] = function IterableExtension$124get$35splitBetweenIndexed(T, $this) {
    return dart.fn(test => iterable_extensions['IterableExtension|splitBetweenIndexed'](T, $this, test), T[_eval]("core|Iterable<core|List<0>>(core|bool(core|int,0,0))"));
  };
  iterable_extensions['IterableExtension|get#none'] = function IterableExtension$124get$35none(T, $this) {
    return dart.fn(test => iterable_extensions['IterableExtension|none'](T, $this, test), T[_eval]("core|bool(core|bool(0))"));
  };
  iterable_extensions['IterableExtension|none'] = function IterableExtension$124none(T, $this, test) {
    for (let element of $this) {
      if (test(element)) return false;
    }
    return true;
  };
  iterable_extensions['IterableExtension|slices'] = function IterableExtension$124slices(T, $this, length) {
    let T$ = T, $this$ = $this, length$ = length;
    return async._makeSyncStarIterable(T[_eval]("core|List<0>"), () => {
      let T = T$, $this = $this$, length = length$;
      let t$goto = 0, t$handler = 1, t$errorStack = [], asyncScope = Object.create(null), asyncScope$ = Object.create(null);
      return (t$iterator, t$errorCode, t$result) => {
        if (t$errorCode === 1) {
          t$errorStack.push(t$result);
          t$goto = t$handler;
        }
        while (true)
          switch (t$goto) {
            case 0:
              // Function start
              if (length < 1) dart.throw(new core.RangeError.range(length, 1, null, "length"));
              asyncScope.iterator = $this[$iterator];
            case 2:
              // while condition
              if (!asyncScope.iterator.moveNext()) {
                // goto after while
                t$goto = 3;
                break;
              }
              asyncScope$.slice = _interceptors.JSArray.of(T[_eval]("_interceptors|JSArray<0>"), [asyncScope.iterator.current]);
              for (let i = 1; i < length && asyncScope.iterator.moveNext(); i = i + 1)
                asyncScope$.slice[$add](asyncScope.iterator.current);
              t$goto = 4;
              return t$iterator[_current$] = asyncScope$.slice, 1;
            case 4:
              // after yield
              // goto while condition
              t$goto = 2;
              break;
            case 3:
              // after while
              // implicit return
              return 0;
            case 1:
              // rethrow
              return t$iterator[_datum] = t$errorStack.at(-1), 3;
          }
      };
    });
  };
  iterable_extensions['IterableExtension|get#slices'] = function IterableExtension$124get$35slices(T, $this) {
    return dart.fn(length => iterable_extensions['IterableExtension|slices'](T, $this, length), T[_eval]("core|Iterable<core|List<0>>(core|int)"));
  };
  iterable_extensions['IterableNullableExtension|whereNotNull'] = function IterableNullableExtension$124whereNotNull(T, $this) {
    let T$ = T, $this$ = $this;
    return async._makeSyncStarIterable(T, () => {
      let T = T$, $this = $this$;
      let t$goto = 0, t$handler = 1, t$errorStack = [], t$wrappedValue, t$iterator, asyncScope = Object.create(null);
      return (t$iterator$, t$errorCode, t$result) => {
        if (t$errorCode === 1) {
          t$errorStack.push(t$result);
          t$goto = t$handler;
        }
        while (true)
          switch (t$goto) {
            case 0:
              // Function start
              t$iterator = $this[Symbol.iterator]();
            case 2:
              // for-of iterator update
              t$wrappedValue = t$iterator.next();
              if (t$wrappedValue.done) {
                // goto after for-of
                t$goto = 3;
                break;
              }
              asyncScope.element = t$wrappedValue.value;
              t$goto = asyncScope.element != null ? 4 : 5;
              break;
            case 4:
              // then
              t$goto = 6;
              return t$iterator$[_current$] = asyncScope.element, 1;
            case 6:
              // after yield
            case 5:
              // join
              // goto for-of iterator update
              t$goto = 2;
              break;
            case 3:
              // after for-of
              // implicit return
              return 0;
            case 1:
              // rethrow
              return t$iterator$[_datum] = t$errorStack.at(-1), 3;
          }
      };
    });
  };
  iterable_extensions['IterableNullableExtension|get#whereNotNull'] = function IterableNullableExtension$124get$35whereNotNull(T, $this) {
    return dart.fn(() => iterable_extensions['IterableNullableExtension|whereNotNull'](T, $this), T[_eval]("core|Iterable<0>()"));
  };
  iterable_extensions['IterableNumberExtension|get#minOrNull'] = function IterableNumberExtension$124get$35minOrNull($this) {
    let iterator = $this[$iterator];
    if (iterator.moveNext()) {
      let value = iterator.current;
      if (value[$isNaN]) {
        return value;
      }
      while (iterator.moveNext()) {
        let newValue = iterator.current;
        if (newValue[$isNaN]) {
          return newValue;
        }
        if (newValue < value) {
          value = newValue;
        }
      }
      return value;
    }
    return null;
  };
  iterable_extensions['IterableNumberExtension|get#min'] = function IterableNumberExtension$124get$35min($this) {
    let t$3686;
    t$3686 = iterable_extensions['IterableNumberExtension|get#minOrNull']($this);
    return t$3686 == null ? dart.throw(new core.StateError.new("No element")) : t$3686;
  };
  iterable_extensions['IterableNumberExtension|get#maxOrNull'] = function IterableNumberExtension$124get$35maxOrNull($this) {
    let iterator = $this[$iterator];
    if (iterator.moveNext()) {
      let value = iterator.current;
      if (value[$isNaN]) {
        return value;
      }
      while (iterator.moveNext()) {
        let newValue = iterator.current;
        if (newValue[$isNaN]) {
          return newValue;
        }
        if (newValue > value) {
          value = newValue;
        }
      }
      return value;
    }
    return null;
  };
  iterable_extensions['IterableNumberExtension|get#max'] = function IterableNumberExtension$124get$35max($this) {
    let t$3688;
    t$3688 = iterable_extensions['IterableNumberExtension|get#maxOrNull']($this);
    return t$3688 == null ? dart.throw(new core.StateError.new("No element")) : t$3688;
  };
  iterable_extensions['IterableNumberExtension|get#sum'] = function IterableNumberExtension$124get$35sum($this) {
    let result = 0;
    for (let value of $this) {
      result = result + value;
    }
    return result;
  };
  iterable_extensions['IterableNumberExtension|get#average'] = function IterableNumberExtension$124get$35average($this) {
    let result = 0.0;
    let count = 0;
    for (let value of $this) {
      count = count + 1;
      result = result + (value - result) / count;
    }
    if (count === 0) dart.throw(new core.StateError.new("No elements"));
    return result;
  };
  iterable_extensions['IterableIntegerExtension|get#minOrNull'] = function IterableIntegerExtension$124get$35minOrNull($this) {
    let iterator = $this[$iterator];
    if (iterator.moveNext()) {
      let value = iterator.current;
      while (iterator.moveNext()) {
        let newValue = iterator.current;
        if (newValue < value) {
          value = newValue;
        }
      }
      return value;
    }
    return null;
  };
  iterable_extensions['IterableIntegerExtension|get#min'] = function IterableIntegerExtension$124get$35min($this) {
    let t$3692;
    t$3692 = iterable_extensions['IterableIntegerExtension|get#minOrNull']($this);
    return t$3692 == null ? dart.throw(new core.StateError.new("No element")) : t$3692;
  };
  iterable_extensions['IterableIntegerExtension|get#maxOrNull'] = function IterableIntegerExtension$124get$35maxOrNull($this) {
    let iterator = $this[$iterator];
    if (iterator.moveNext()) {
      let value = iterator.current;
      while (iterator.moveNext()) {
        let newValue = iterator.current;
        if (newValue > value) {
          value = newValue;
        }
      }
      return value;
    }
    return null;
  };
  iterable_extensions['IterableIntegerExtension|get#max'] = function IterableIntegerExtension$124get$35max($this) {
    let t$3694;
    t$3694 = iterable_extensions['IterableIntegerExtension|get#maxOrNull']($this);
    return t$3694 == null ? dart.throw(new core.StateError.new("No element")) : t$3694;
  };
  iterable_extensions['IterableIntegerExtension|get#sum'] = function IterableIntegerExtension$124get$35sum($this) {
    let result = 0;
    for (let value of $this) {
      result = result + value;
    }
    return result;
  };
  iterable_extensions['IterableIntegerExtension|get#average'] = function IterableIntegerExtension$124get$35average($this) {
    let average = 0;
    let remainder = 0;
    let count = 0;
    for (let value of $this) {
      count = count + 1;
      let delta = value - average + remainder;
      average = average + (delta / count)[$truncate]();
      remainder = delta[$remainder](count);
    }
    if (count === 0) dart.throw(new core.StateError.new("No elements"));
    return average + remainder / count;
  };
  iterable_extensions['IterableDoubleExtension|get#minOrNull'] = function IterableDoubleExtension$124get$35minOrNull($this) {
    let iterator = $this[$iterator];
    if (iterator.moveNext()) {
      let value = iterator.current;
      if (value[$isNaN]) {
        return value;
      }
      while (iterator.moveNext()) {
        let newValue = iterator.current;
        if (newValue[$isNaN]) {
          return newValue;
        }
        if (newValue < value) {
          value = newValue;
        }
      }
      return value;
    }
    return null;
  };
  iterable_extensions['IterableDoubleExtension|get#min'] = function IterableDoubleExtension$124get$35min($this) {
    let t$3698;
    t$3698 = iterable_extensions['IterableDoubleExtension|get#minOrNull']($this);
    return t$3698 == null ? dart.throw(new core.StateError.new("No element")) : t$3698;
  };
  iterable_extensions['IterableDoubleExtension|get#maxOrNull'] = function IterableDoubleExtension$124get$35maxOrNull($this) {
    let iterator = $this[$iterator];
    if (iterator.moveNext()) {
      let value = iterator.current;
      if (value[$isNaN]) {
        return value;
      }
      while (iterator.moveNext()) {
        let newValue = iterator.current;
        if (newValue[$isNaN]) {
          return newValue;
        }
        if (newValue > value) {
          value = newValue;
        }
      }
      return value;
    }
    return null;
  };
  iterable_extensions['IterableDoubleExtension|get#max'] = function IterableDoubleExtension$124get$35max($this) {
    let t$36100;
    t$36100 = iterable_extensions['IterableDoubleExtension|get#maxOrNull']($this);
    return t$36100 == null ? dart.throw(new core.StateError.new("No element")) : t$36100;
  };
  iterable_extensions['IterableDoubleExtension|get#sum'] = function IterableDoubleExtension$124get$35sum($this) {
    let result = 0.0;
    for (let value of $this) {
      result = result + value;
    }
    return result;
  };
  iterable_extensions['IterableIterableExtension|get#flattened'] = function IterableIterableExtension$124get$35flattened(T, $this) {
    let T$ = T, $this$ = $this;
    return async._makeSyncStarIterable(T, () => {
      let T = T$, $this = $this$;
      let t$goto = 0, t$handler = 1, t$errorStack = [], t$wrappedValue, t$iterator, asyncScope = Object.create(null);
      return (t$iterator$, t$errorCode, t$result) => {
        if (t$errorCode === 1) {
          t$errorStack.push(t$result);
          t$goto = t$handler;
        }
        while (true)
          switch (t$goto) {
            case 0:
              // Function start
              t$iterator = $this[Symbol.iterator]();
            case 2:
              // for-of iterator update
              t$wrappedValue = t$iterator.next();
              if (t$wrappedValue.done) {
                // goto after for-of
                t$goto = 3;
                break;
              }
              asyncScope.elements = t$wrappedValue.value;
              t$goto = 4;
              return t$iterator$[_yieldStar](asyncScope.elements);
            case 4:
              // after yield
              // goto for-of iterator update
              t$goto = 2;
              break;
            case 3:
              // after for-of
              // implicit return
              return 0;
            case 1:
              // rethrow
              return t$iterator$[_datum] = t$errorStack.at(-1), 3;
          }
      };
    });
  };
  iterable_extensions['IterableIterableExtension|get#flattenedToList'] = function IterableIterableExtension$124get$35flattenedToList(T, $this) {
    return (() => {
      let t$36103 = _interceptors.JSArray.of(T[_eval]("_interceptors|JSArray<0>"), []);
      for (let elements of $this)
        t$36103[$addAll](elements);
      return t$36103;
    })();
  };
  iterable_extensions['IterableIterableExtension|get#flattenedToSet'] = function IterableIterableExtension$124get$35flattenedToSet(T, $this) {
    return (() => {
      let t$36105 = collection.LinkedHashSet.new(T[_eval]("collection|LinkedHashSet<0>"));
      for (let elements of $this)
        for (let t$36107 of elements) {
          let t$36106 = T[_as](t$36107);
          t$36105.add(t$36106);
        }
      return t$36105;
    })();
  };
  iterable_extensions['IterableComparableExtension|get#minOrNull'] = function IterableComparableExtension$124get$35minOrNull(T, $this) {
    let iterator = $this[$iterator];
    if (iterator.moveNext()) {
      let value = iterator.current;
      while (iterator.moveNext()) {
        let newValue = iterator.current;
        if (value[$compareTo](newValue) > 0) {
          value = newValue;
        }
      }
      return value;
    }
    return null;
  };
  iterable_extensions['IterableComparableExtension|get#min'] = function IterableComparableExtension$124get$35min(T, $this) {
    let t$36110;
    t$36110 = iterable_extensions['IterableComparableExtension|get#minOrNull'](T, $this);
    return t$36110 == null ? dart.throw(new core.StateError.new("No element")) : t$36110;
  };
  iterable_extensions['IterableComparableExtension|get#maxOrNull'] = function IterableComparableExtension$124get$35maxOrNull(T, $this) {
    let iterator = $this[$iterator];
    if (iterator.moveNext()) {
      let value = iterator.current;
      while (iterator.moveNext()) {
        let newValue = iterator.current;
        if (value[$compareTo](newValue) < 0) {
          value = newValue;
        }
      }
      return value;
    }
    return null;
  };
  iterable_extensions['IterableComparableExtension|get#max'] = function IterableComparableExtension$124get$35max(T, $this) {
    let t$36112;
    t$36112 = iterable_extensions['IterableComparableExtension|get#maxOrNull'](T, $this);
    return t$36112 == null ? dart.throw(new core.StateError.new("No element")) : t$36112;
  };
  iterable_extensions['IterableComparableExtension|sorted'] = function IterableComparableExtension$124sorted(T, $this, compare = null) {
    let t$36114;
    t$36114 = (() => {
      let t$36113 = core.List.of(T[_eval]("core|List<0>"), $this);
      return t$36113;
    })();
    return (() => {
      t$36114[$sort](compare);
      return t$36114;
    })();
  };
  iterable_extensions['IterableComparableExtension|get#sorted'] = function IterableComparableExtension$124get$35sorted(T, $this) {
    return dart.fn((compare = null) => iterable_extensions['IterableComparableExtension|sorted'](T, $this, compare), T[_eval]("core|List<0>([core|int(0,0)?])"));
  };
  iterable_extensions['IterableComparableExtension|isSorted'] = function IterableComparableExtension$124isSorted(T, $this, compare = null) {
    if (compare != null) {
      return iterable_extensions['IterableExtension|isSorted'](T, $this, compare);
    }
    let iterator = $this[$iterator];
    if (!iterator.moveNext()) return true;
    let previousElement = iterator.current;
    while (iterator.moveNext()) {
      let element = iterator.current;
      if (previousElement[$compareTo](element) > 0) return false;
      previousElement = element;
    }
    return true;
  };
  iterable_extensions['IterableComparableExtension|get#isSorted'] = function IterableComparableExtension$124get$35isSorted(T, $this) {
    return dart.fn((compare = null) => iterable_extensions['IterableComparableExtension|isSorted'](T, $this, compare), T[_eval]("core|bool([core|int(0,0)?])"));
  };
  iterable_extensions['ComparatorExtension|get#inverse'] = function ComparatorExtension$124get$35inverse(T, $this) {
    return dart.fn((a, b) => $this(b, a), T[_eval]("core|int(0,0)"));
  };
  iterable_extensions['ComparatorExtension|compareBy'] = function ComparatorExtension$124compareBy(T, R, $this, keyOf) {
    return dart.fn((a, b) => $this(keyOf(a), keyOf(b)), R[_eval]("core|int(0,0)"));
  };
  iterable_extensions['ComparatorExtension|get#compareBy'] = function ComparatorExtension$124get$35compareBy(T, $this) {
    return dart.gFn((R, keyOf) => iterable_extensions['ComparatorExtension|compareBy'](T, R, $this, keyOf), T[_eval]("core|int(0^,0^)(0(0^))<core|Object?>"), dart.constList(dart_rti._Universe.eval(dart_rti._theUniverse(), "@", true), [dart_rti._Universe.eval(dart_rti._theUniverse(), "@", true)]));
  };
  iterable_extensions['ComparatorExtension|then'] = function ComparatorExtension$124then(T, $this, tieBreaker) {
    return dart.fn((a, b) => {
      let result = $this(a, b);
      if (result === 0) result = tieBreaker(a, b);
      return result;
    }, T[_eval]("core|int(0,0)"));
  };
  iterable_extensions['ComparatorExtension|get#then'] = function ComparatorExtension$124get$35then(T, $this) {
    return dart.fn(tieBreaker => iterable_extensions['ComparatorExtension|then'](T, $this, tieBreaker), T[_eval]("core|int(0,0)(core|int(0,0))"));
  };
  functions.mapMap = function mapMap(K1, V1, K2, V2, map, opts) {
    let t$36122, t$36122$;
    let key = opts && 'key' in opts ? opts.key : null;
    let value = opts && 'value' in opts ? opts.value : null;
    let keyFn = (t$36122 = key, t$36122 == null ? dart.fn((mapKey, _) => K2[_as](mapKey), K1[_eval]("@<0>")[_bind](V1)[_bind](K2)[_eval]("3(1,2)")) : t$36122);
    let valueFn = (t$36122$ = value, t$36122$ == null ? dart.fn((_, mapValue) => V2[_as](mapValue), K1[_eval]("@<0>")[_bind](V1)[_bind](V2)[_eval]("3(1,2)")) : t$36122$);
    let result = new _js_helper.LinkedMap.new(K2[_eval]("@<0>")[_bind](V2)[_eval]("_js_helper|LinkedMap<1,2>"));
    map[$forEach](dart.fn((mapKey, mapValue) => {
      result[$_set](keyFn(mapKey, mapValue), valueFn(mapKey, mapValue));
    }, K1[_eval]("@<0>")[_bind](V1)[_eval]("~(1,2)")));
    return result;
  };
  functions.mergeMaps = function mergeMaps(K, V, map1, map2, opts) {
    let t$36122;
    let value = opts && 'value' in opts ? opts.value : null;
    let result = collection.LinkedHashMap.of(K[_eval]("@<0>")[_bind](V)[_eval]("collection|LinkedHashMap<1,2>"), map1);
    if (value == null) {
      t$36122 = result;
      return (() => {
        t$36122[$addAll](map2);
        return t$36122;
      })();
    }
    map2[$forEach](dart.fn((key, mapValue) => {
      result[$_set](key, result[$containsKey](key) ? value(V[_as](result[$_get](key)), mapValue) : mapValue);
    }, K[_eval]("@<0>")[_bind](V)[_eval]("~(1,2)")));
    return result;
  };
  functions.lastBy = function lastBy(S, T, values, key) {
    return (() => {
      let t$36122 = new _js_helper.LinkedMap.new(S[_eval]("@<0>")[_bind](T)[_eval]("_js_helper|LinkedMap<2,1>"));
      for (let element of values)
        t$36122[$_set](key(element), element);
      return t$36122;
    })();
  };
  functions.groupBy = function groupBy(S, T, values, key) {
    let t$36126, t$36125, t$36124, t$36123;
    let map = new _js_helper.LinkedMap.new(S[_eval]("@<0>")[_bind](T)[_eval]("_js_helper|LinkedMap<2,core|List<1>>"));
    for (let element of values) {
      (t$36123 = map, t$36124 = key(element), t$36125 = t$36123[$_get](t$36124), t$36125 == null ? (t$36126 = _interceptors.JSArray.of(S[_eval]("_interceptors|JSArray<0>"), []), t$36123[$_set](t$36124, t$36126), t$36126) : t$36125)[$add](element);
    }
    return map;
  };
  functions.minBy = function minBy(S, T, values, orderBy, opts) {
    let compare = opts && 'compare' in opts ? opts.compare : null;
    compare == null ? compare = C[1] || CT.C1 : null;
    let minValue = null;
    let minOrderBy = null;
    for (let element of values) {
      let elementOrderBy = orderBy(element);
      if (minOrderBy == null || compare(elementOrderBy, minOrderBy) < 0) {
        minValue = element;
        minOrderBy = elementOrderBy;
      }
    }
    return minValue;
  };
  functions.maxBy = function maxBy(S, T, values, orderBy, opts) {
    let compare = opts && 'compare' in opts ? opts.compare : null;
    compare == null ? compare = C[1] || CT.C1 : null;
    let maxValue = null;
    let maxOrderBy = null;
    for (let element of values) {
      let elementOrderBy = orderBy(element);
      if (maxOrderBy == null || compare(elementOrderBy, maxOrderBy) > 0) {
        maxValue = element;
        maxOrderBy = elementOrderBy;
      }
    }
    return maxValue;
  };
  functions.transitiveClosure = function transitiveClosure(T, graph) {
    let result = new _js_helper.LinkedMap.new(T[_eval]("_js_helper|LinkedMap<0,core|Set<0>>"));
    graph[$forEach](dart.fn((vertex, edges) => {
      result[$_set](vertex, collection.LinkedHashSet.from(T[_eval]("collection|LinkedHashSet<0>"), edges));
    }, T[_eval]("~(0,core|Iterable<0>)")));
    let keys = graph[$keys][$toList]();
    for (let vertex1 of keys) {
      for (let vertex2 of keys) {
        for (let vertex3 of keys) {
          if (dart.nullCheck(result[$_get](vertex2)).contains(vertex1) && dart.nullCheck(result[$_get](vertex1)).contains(vertex3)) {
            dart.nullCheck(result[$_get](vertex2)).add(vertex3);
          }
        }
      }
    }
    return result;
  };
  functions.stronglyConnectedComponents = function stronglyConnectedComponents(T, graph) {
    let index = 0;
    let stack = _interceptors.JSArray.of(T[_eval]("_interceptors|JSArray<0?>"), []);
    let result = _interceptors.JSArray.of(T[_eval]("_interceptors|JSArray<core|Set<0>>"), []);
    let indices = new _js_helper.LinkedMap.new(T[_eval]("_js_helper|LinkedMap<0,core|int>"));
    let lowLinks = new _js_helper.LinkedMap.new(T[_eval]("_js_helper|LinkedMap<0,core|int>"));
    let onStack = new _js_helper.LinkedSet.new(T[_eval]("_js_helper|LinkedSet<0>"));
    function strongConnect(vertex) {
      indices[$_set](vertex, index);
      lowLinks[$_set](vertex, index);
      index = index + 1;
      stack[$add](vertex);
      onStack.add(vertex);
      for (let successor of dart.nullCheck(graph[$_get](vertex))) {
        if (!indices[$containsKey](successor)) {
          strongConnect(successor);
          lowLinks[$_set](vertex, math.min(dart_rti._Universe.eval(dart_rti._theUniverse(), "core|int", true), dart.nullCheck(lowLinks[$_get](vertex)), dart.nullCheck(lowLinks[$_get](successor))));
        } else if (onStack.contains(successor)) {
          lowLinks[$_set](vertex, math.min(dart_rti._Universe.eval(dart_rti._theUniverse(), "core|int", true), dart.nullCheck(lowLinks[$_get](vertex)), dart.nullCheck(lowLinks[$_get](successor))));
        }
      }
      if (lowLinks[$_get](vertex) == indices[$_get](vertex)) {
        let component = collection.LinkedHashSet.new(T[_eval]("collection|LinkedHashSet<0>"));
        let neighbor = null;
        do {
          neighbor = stack[$removeLast]();
          onStack.remove(neighbor);
          component.add(T[_as](neighbor));
        } while (!dart.equals(neighbor, vertex));
        result[$add](component);
      }
    }
    dart.fn(strongConnect, T[_eval]("~(0)"));
    for (let vertex of graph[$keys]) {
      if (!indices[$containsKey](vertex)) strongConnect(vertex);
    }
    return result[$reversed][$toList]();
  };
  var _iterators = dart.privateName(combined_iterator, "_iterators");
  combined_iterator.CombinedIterator = class CombinedIterator extends core.Object {
    static ['_#new#tearOff'](T, iterators) {
      return new combined_iterator.CombinedIterator.new(dart_rti.instanceType(this)[_bind](T)[_eval]("collection__src__combined_wrappers__combined_iterator|CombinedIterator<1>"), iterators);
    }
    get current() {
      let iterators = this[_iterators];
      if (iterators != null) return iterators.current.current;
      return dart_rti.instanceType(this)[_eval]("CombinedIterator.T")[_as](null);
    }
    moveNext() {
      let iterators = this[_iterators];
      if (iterators != null) {
        do {
          if (iterators.current.moveNext()) {
            return true;
          }
        } while (iterators.moveNext());
        this[_iterators] = null;
      }
      return false;
    }
  };
  (combined_iterator.CombinedIterator.new = function(_ti, iterators) {
    this.$ti = this.$ti || _ti || dart.getReifiedType(this);
    this[_iterators] = iterators;
    if (!iterators.moveNext()) this[_iterators] = null;
  }).prototype = combined_iterator.CombinedIterator.prototype;
  dart.addRtiResources(combined_iterator.CombinedIterator, ["collection__src__combined_wrappers__combined_iterator|CombinedIterator", "core|Iterator"]);
  dart.setMethodSignature(combined_iterator.CombinedIterator, () => dart.global.Object.setPrototypeOf({
    moveNext: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|bool()", true)
  }, dart.getMethods(dart.global.Object.getPrototypeOf(combined_iterator.CombinedIterator))));
  dart.setGetterSignature(combined_iterator.CombinedIterator, () => dart.global.Object.setPrototypeOf({
    current: _ti => _ti[_eval]("CombinedIterator.T")
  }, dart.getGetters(dart.global.Object.getPrototypeOf(combined_iterator.CombinedIterator))));
  dart.setLibraryUri(combined_iterator.CombinedIterator, I[8]);
  dart.setFieldSignature(combined_iterator.CombinedIterator, () => dart.global.Object.setPrototypeOf({[_iterators]: {
      type: _ti => _ti[_eval]("core|Iterator<core|Iterator<CombinedIterator.T>>?"),
      isConst: false,
      isFinal: false,
      libraryUri: I[1]
    }}, dart.getFields(dart.global.Object.getPrototypeOf(combined_iterator.CombinedIterator))));
  var _iterables = dart.privateName(combined_iterable, "CombinedIterableView._iterables");
  var _iterables$ = dart.privateName(combined_iterable, "_iterables");
  combined_iterable.CombinedIterableView = class CombinedIterableView extends core.Iterable {
    get [_iterables$]() {
      return this[_iterables];
    }
    set [_iterables$](value) {
      super[_iterables$] = value;
    }
    static ['_#new#tearOff'](T, _iterables) {
      return new combined_iterable.CombinedIterableView.new(dart_rti.instanceType(this)[_bind](T)[_eval]("collection__src__combined_wrappers__combined_iterable|CombinedIterableView<1>"), _iterables);
    }
    get iterator() {
      return new combined_iterator.CombinedIterator.new(dart_rti.instanceType(this)[_eval]("collection__src__combined_wrappers__combined_iterator|CombinedIterator<CombinedIterableView.T>"), this[_iterables$][$map](dart_rti.instanceType(this)[_eval]("core|Iterator<CombinedIterableView.T>"), dart.fn(i => i[$iterator], dart_rti.instanceType(this)[_eval]("core|Iterator<CombinedIterableView.T>(core|Iterable<CombinedIterableView.T>)")))[$iterator]);
    }
    contains(element) {
      return this[_iterables$][$any](dart.fn(i => i[$contains](element), dart_rti.instanceType(this)[_eval]("core|bool(core|Iterable<CombinedIterableView.T>)")));
    }
    get isEmpty() {
      return this[_iterables$][$every](dart.fn(i => i[$isEmpty], dart_rti.instanceType(this)[_eval]("core|bool(core|Iterable<CombinedIterableView.T>)")));
    }
    get length() {
      return this[_iterables$][$fold](dart_rti._Universe.eval(dart_rti._theUniverse(), "core|int", true), 0, dart.fn((length, i) => length + i[$length], dart_rti.instanceType(this)[_eval]("core|int(core|int,core|Iterable<CombinedIterableView.T>)")));
    }
  };
  (combined_iterable.CombinedIterableView.new = function(_ti, _iterables$) {
    this.$ti = this.$ti || _ti || dart.getReifiedType(this);
    this[_iterables] = _iterables$;
    dart.global.Object.getPrototypeOf(combined_iterable.CombinedIterableView).new.call(this, null);
    ;
  }).prototype = combined_iterable.CombinedIterableView.prototype;
  dart.addRtiResources(combined_iterable.CombinedIterableView, ["collection__src__combined_wrappers__combined_iterable|CombinedIterableView"]);
  dart.setGetterSignature(combined_iterable.CombinedIterableView, () => dart.global.Object.setPrototypeOf({
    iterator: _ti => _ti[_eval]("core|Iterator<CombinedIterableView.T>"),
    [$iterator]: _ti => _ti[_eval]("core|Iterator<CombinedIterableView.T>")
  }, dart.getGetters(dart.global.Object.getPrototypeOf(combined_iterable.CombinedIterableView))));
  dart.setLibraryUri(combined_iterable.CombinedIterableView, I[9]);
  dart.setFieldSignature(combined_iterable.CombinedIterableView, () => dart.global.Object.setPrototypeOf({[_iterables$]: {
      type: _ti => _ti[_eval]("core|Iterable<core|Iterable<CombinedIterableView.T>>"),
      isConst: false,
      isFinal: true,
      libraryUri: I[1]
    }}, dart.getFields(dart.global.Object.getPrototypeOf(combined_iterable.CombinedIterableView))));
  dart.defineExtensionMethods(combined_iterable.CombinedIterableView, ['contains']);
  dart.defineExtensionAccessors(combined_iterable.CombinedIterableView, ['iterator', 'isEmpty', 'length']);
  var _lists = dart.privateName(combined_list, "_lists");
  var _source = dart.privateName(combined_list, "_source");
  var _source$ = dart.privateName(collection, "_source");
  combined_list.CombinedListView = class CombinedListView extends collection.ListBase {
    static _throw() {
      dart.throw(new core.UnsupportedError.new("Cannot modify an unmodifiable List"));
    }
    static ['_#new#tearOff'](T, _lists) {
      return new combined_list.CombinedListView.new(dart_rti.instanceType(this)[_bind](T)[_eval]("collection__src__combined_wrappers__combined_list|CombinedListView<1>"), _lists);
    }
    get iterator() {
      return new combined_iterator.CombinedIterator.new(dart_rti.instanceType(this)[_eval]("collection__src__combined_wrappers__combined_iterator|CombinedIterator<CombinedListView.T>"), this[_lists][$map](dart_rti.instanceType(this)[_eval]("core|Iterator<CombinedListView.T>"), dart.fn(i => i[$iterator], dart_rti.instanceType(this)[_eval]("core|Iterator<CombinedListView.T>(core|List<CombinedListView.T>)")))[$iterator]);
    }
    set length(length) {
      combined_list.CombinedListView._throw();
    }
    get length() {
      return this[_lists][$fold](dart_rti._Universe.eval(dart_rti._theUniverse(), "core|int", true), 0, dart.fn((length, list) => length + list[$length], dart_rti.instanceType(this)[_eval]("core|int(core|int,core|List<CombinedListView.T>)")));
    }
    _get(index) {
      let initialIndex = index;
      for (let i = 0; i < this[_lists][$length]; i = i + 1) {
        let list = this[_lists][$_get](i);
        if (index < list[$length]) {
          return list[$_get](index);
        }
        index = index - list[$length];
      }
      dart.throw(new core.IndexError.new(initialIndex, this, "index", null, this.length));
    }
    _set(index, value) {
      let value$ = value;
      dart_rti.instanceType(this)[_eval]("CombinedListView.T")[_as](value$);
      combined_list.CombinedListView._throw();
      return value;
    }
    clear() {
      combined_list.CombinedListView._throw();
    }
    remove(element) {
      combined_list.CombinedListView._throw();
    }
    removeWhere(test) {
      combined_list.CombinedListView._throw();
    }
    retainWhere(test) {
      combined_list.CombinedListView._throw();
    }
    get [_source$]() {
      return dart.throw(core.NoSuchMethodError.withInvocation(this, new core._Invocation.getter(C[2] || CT.C2)));
    }
  };
  (combined_list.CombinedListView.new = function(_ti, _lists$) {
    this.$ti = this.$ti || _ti || dart.getReifiedType(this);
    this[_lists] = _lists$;
    dart.global.Object.getPrototypeOf(combined_list.CombinedListView).new.call(this, null);
    ;
  }).prototype = combined_list.CombinedListView.prototype;
  dart.addRtiResources(combined_list.CombinedListView, ["collection__src__combined_wrappers__combined_list|CombinedListView", "collection|UnmodifiableListView", "_internal|UnmodifiableListBase", "collection|ListBase", "_internal|UnmodifiableListMixin", "core|List", "core|List", "core|Iterable", "core|_ListIterable", "_internal|EfficientLengthIterable", "_internal|HideEfficientLengthIterable", "core|Iterable", "core|Iterable"]);
  dart.setMethodSignature(combined_list.CombinedListView, () => dart.global.Object.setPrototypeOf({
    _get: _ti => _ti[_eval]("CombinedListView.T(core|int)"),
    [$_get]: _ti => _ti[_eval]("CombinedListView.T(core|int)"),
    _set: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "~(core|int,core|Object?)", true),
    [$_set]: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "~(core|int,core|Object?)", true)
  }, dart.getMethods(dart.global.Object.getPrototypeOf(combined_list.CombinedListView))));
  dart.setStaticMethodSignature(combined_list.CombinedListView, () => ['_throw']);
  dart.setGetterSignature(combined_list.CombinedListView, () => dart.global.Object.setPrototypeOf({
    length: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|int", true),
    [$length]: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|int", true),
    [_source$]: _ti => _ti[_eval]("core|Iterable<CombinedListView.T>")
  }, dart.getGetters(dart.global.Object.getPrototypeOf(combined_list.CombinedListView))));
  dart.setSetterSignature(combined_list.CombinedListView, () => dart.global.Object.setPrototypeOf({
    length: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|int", true),
    [$length]: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|int", true)
  }, dart.getSetters(dart.global.Object.getPrototypeOf(combined_list.CombinedListView))));
  dart.setLibraryUri(combined_list.CombinedListView, I[10]);
  dart.setFieldSignature(combined_list.CombinedListView, () => dart.global.Object.setPrototypeOf({[_lists]: {
      type: _ti => _ti[_eval]("core|List<core|List<CombinedListView.T>>"),
      isConst: false,
      isFinal: true,
      libraryUri: I[1]
    }}, dart.getFields(dart.global.Object.getPrototypeOf(combined_list.CombinedListView))));
  dart.defineExtensionMethods(combined_list.CombinedListView, [
    '_get',
    '_set',
    'clear',
    'remove',
    'removeWhere',
    'retainWhere'
  ]);
  dart.defineExtensionAccessors(combined_list.CombinedListView, ['iterator', 'length']);
  var source = dart.privateName(list_extensions, "ListSlice.source");
  var start = dart.privateName(list_extensions, "ListSlice.start");
  var length = dart.privateName(list_extensions, "ListSlice.length");
  var _initialSize = dart.privateName(list_extensions, "_initialSize");
  list_extensions.ListSlice = class ListSlice extends collection.ListBase {
    get source() {
      return this[source];
    }
    set source(value) {
      super.source = value;
    }
    get start() {
      return this[start];
    }
    set start(value) {
      super.start = value;
    }
    get length() {
      return this[length];
    }
    set length(value) {
      super.length = value;
    }
    static ['_#new#tearOff'](E, source, start, end) {
      return new list_extensions.ListSlice.new(dart_rti.instanceType(this)[_bind](E)[_eval]("collection__src__list_extensions|ListSlice<1>"), source, start, end);
    }
    static ['_#_#tearOff'](E, _initialSize, source, start, length) {
      return new list_extensions.ListSlice.__(dart_rti.instanceType(this)[_bind](E)[_eval]("collection__src__list_extensions|ListSlice<1>"), _initialSize, source, start, length);
    }
    get end() {
      return this.start + this.length;
    }
    _get(index) {
      if (this.source[$length] !== this[_initialSize]) {
        dart.throw(new core.ConcurrentModificationError.new(this.source));
      }
      core.RangeError.checkValidIndex(index, this, null, this.length);
      return this.source[$_get](this.start + index);
    }
    _set(index, value) {
      let value$ = value;
      dart_rti.instanceType(this)[_eval]("ListSlice.E")[_as](value$);
      if (this.source[$length] !== this[_initialSize]) {
        dart.throw(new core.ConcurrentModificationError.new(this.source));
      }
      core.RangeError.checkValidIndex(index, this, null, this.length);
      this.source[$_set](this.start + index, value$);
      return value;
    }
    setRange(start, end, iterable, skipCount = 0) {
      dart_rti.instanceType(this)[_eval]("core|Iterable<ListSlice.E>")[_as](iterable);
      if (this.source[$length] !== this[_initialSize]) {
        dart.throw(new core.ConcurrentModificationError.new(this.source));
      }
      core.RangeError.checkValidRange(start, end, this.length);
      this.source[$setRange](start + start, start + end, iterable, skipCount);
    }
    slice(start, end = null) {
      end = core.RangeError.checkValidRange(start, end, this.length);
      return new list_extensions.ListSlice.__(dart_rti.instanceType(this)[_eval]("collection__src__list_extensions|ListSlice<ListSlice.E>"), this[_initialSize], this.source, this.start + start, dart.notNull(end) - start);
    }
    shuffle(random = null) {
      if (this.source[$length] !== this[_initialSize]) {
        dart.throw(new core.ConcurrentModificationError.new(this.source));
      }
      algorithms.shuffle(this.source, this.start, this.end, random);
    }
    sort(compare = null) {
      if (this.source[$length] !== this[_initialSize]) {
        dart.throw(new core.ConcurrentModificationError.new(this.source));
      }
      compare == null ? compare = C[1] || CT.C1 : null;
      algorithms.quickSort(dart_rti.instanceType(this)[_eval]("ListSlice.E"), this.source, compare, this.start, this.start + this.length);
    }
    sortRange(start, end, compare) {
      if (this.source[$length] !== this[_initialSize]) {
        dart.throw(new core.ConcurrentModificationError.new(this.source));
      }
      list_extensions['ListExtensions|sortRange'](dart_rti.instanceType(this)[_eval]("ListSlice.E"), this.source, start, end, compare);
    }
    shuffleRange(start, end, random = null) {
      if (this.source[$length] !== this[_initialSize]) {
        dart.throw(new core.ConcurrentModificationError.new(this.source));
      }
      core.RangeError.checkValidRange(start, end, this.length);
      algorithms.shuffle(this.source, this.start + start, this.start + end, random);
    }
    reverseRange(start, end) {
      core.RangeError.checkValidRange(start, end, this.length);
      list_extensions['ListExtensions|reverseRange'](dart_rti.instanceType(this)[_eval]("ListSlice.E"), this.source, this.start + start, this.start + end);
    }
    set length(newLength) {
      dart.throw(new core.UnsupportedError.new("Cannot change the length of a fixed-length list"));
    }
    add(element) {
      dart_rti.instanceType(this)[_eval]("ListSlice.E")[_as](element);
      dart.throw(new core.UnsupportedError.new("Cannot add to a fixed-length list"));
    }
    insert(index, element) {
      dart_rti.instanceType(this)[_eval]("ListSlice.E")[_as](element);
      dart.throw(new core.UnsupportedError.new("Cannot add to a fixed-length list"));
    }
    insertAll(index, iterable) {
      dart_rti.instanceType(this)[_eval]("core|Iterable<ListSlice.E>")[_as](iterable);
      dart.throw(new core.UnsupportedError.new("Cannot add to a fixed-length list"));
    }
    addAll(iterable) {
      dart_rti.instanceType(this)[_eval]("core|Iterable<ListSlice.E>")[_as](iterable);
      dart.throw(new core.UnsupportedError.new("Cannot add to a fixed-length list"));
    }
    remove(element) {
      dart.throw(new core.UnsupportedError.new("Cannot remove from a fixed-length list"));
    }
    removeWhere(test) {
      dart.throw(new core.UnsupportedError.new("Cannot remove from a fixed-length list"));
    }
    retainWhere(test) {
      dart.throw(new core.UnsupportedError.new("Cannot remove from a fixed-length list"));
    }
    clear() {
      dart.throw(new core.UnsupportedError.new("Cannot clear a fixed-length list"));
    }
    removeAt(index) {
      dart.throw(new core.UnsupportedError.new("Cannot remove from a fixed-length list"));
    }
    removeLast() {
      dart.throw(new core.UnsupportedError.new("Cannot remove from a fixed-length list"));
    }
    removeRange(start, end) {
      dart.throw(new core.UnsupportedError.new("Cannot remove from a fixed-length list"));
    }
    replaceRange(start, end, newContents) {
      dart_rti.instanceType(this)[_eval]("core|Iterable<ListSlice.E>")[_as](newContents);
      dart.throw(new core.UnsupportedError.new("Cannot remove from a fixed-length list"));
    }
  };
  (list_extensions.ListSlice.new = function(_ti, source$, start$, end) {
    this.$ti = this.$ti || _ti || dart.getReifiedType(this);
    this[source] = source$;
    this[start] = start$;
    this[length] = end - start$;
    this[_initialSize] = source$[$length];
    dart.global.Object.getPrototypeOf(list_extensions.ListSlice).new.call(this, null);
    core.RangeError.checkValidRange(this.start, end, this.source[$length]);
  }).prototype = list_extensions.ListSlice.prototype;
  (list_extensions.ListSlice.__ = function(_ti, _initialSize$, source$, start$, length$) {
    this.$ti = this.$ti || _ti || dart.getReifiedType(this);
    this[_initialSize] = _initialSize$;
    this[source] = source$;
    this[start] = start$;
    this[length] = length$;
    dart.global.Object.getPrototypeOf(list_extensions.ListSlice).new.call(this, null);
    ;
  }).prototype = list_extensions.ListSlice.prototype;
  dart.addRtiResources(list_extensions.ListSlice, ["collection__src__list_extensions|ListSlice"]);
  dart.setMethodSignature(list_extensions.ListSlice, () => dart.global.Object.setPrototypeOf({
    _get: _ti => _ti[_eval]("ListSlice.E(core|int)"),
    [$_get]: _ti => _ti[_eval]("ListSlice.E(core|int)"),
    _set: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "~(core|int,core|Object?)", true),
    [$_set]: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "~(core|int,core|Object?)", true),
    slice: _ti => _ti[_eval]("collection__src__list_extensions|ListSlice<ListSlice.E>(core|int[core|int?])"),
    sortRange: _ti => _ti[_eval]("~(core|int,core|int,core|int(ListSlice.E,ListSlice.E))"),
    shuffleRange: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "~(core|int,core|int[math|Random?])", true),
    reverseRange: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "~(core|int,core|int)", true)
  }, dart.getMethods(dart.global.Object.getPrototypeOf(list_extensions.ListSlice))));
  dart.setGetterSignature(list_extensions.ListSlice, () => dart.global.Object.setPrototypeOf({
    end: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|int", true)
  }, dart.getGetters(dart.global.Object.getPrototypeOf(list_extensions.ListSlice))));
  dart.setSetterSignature(list_extensions.ListSlice, () => dart.global.Object.setPrototypeOf({
    length: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|int", true),
    [$length]: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|int", true)
  }, dart.getSetters(dart.global.Object.getPrototypeOf(list_extensions.ListSlice))));
  dart.setLibraryUri(list_extensions.ListSlice, I[11]);
  dart.setFieldSignature(list_extensions.ListSlice, () => dart.global.Object.setPrototypeOf({
    [_initialSize]: {
      type: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|int", true),
      isConst: false,
      isFinal: true,
      libraryUri: I[1]
    },
    source: {
      type: _ti => _ti[_eval]("core|List<ListSlice.E>"),
      isConst: false,
      isFinal: true,
      libraryUri: I[1]
    },
    start: {
      type: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|int", true),
      isConst: false,
      isFinal: true,
      libraryUri: I[1]
    },
    length: {
      type: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|int", true),
      isConst: false,
      isFinal: true,
      libraryUri: I[1]
    }
  }, dart.getFields(dart.global.Object.getPrototypeOf(list_extensions.ListSlice))));
  dart.defineExtensionMethods(list_extensions.ListSlice, [
    '_get',
    '_set',
    'setRange',
    'shuffle',
    'sort',
    'add',
    'insert',
    'insertAll',
    'addAll',
    'remove',
    'removeWhere',
    'retainWhere',
    'clear',
    'removeAt',
    'removeLast',
    'removeRange',
    'replaceRange'
  ]);
  dart.defineExtensionAccessors(list_extensions.ListSlice, ['length']);
  list_extensions['ListExtensions|binarySearch'] = function ListExtensions$124binarySearch(E, $this, element, compare) {
    return algorithms.binarySearchBy(E, E, $this, dart.gbind(C[3] || CT.C3, E), compare, element);
  };
  list_extensions['ListExtensions|get#binarySearch'] = function ListExtensions$124get$35binarySearch(E, $this) {
    return dart.fn((element, compare) => list_extensions['ListExtensions|binarySearch'](E, $this, element, compare), E[_eval]("core|int(0,core|int(0,0))"));
  };
  list_extensions['ListExtensions|binarySearchByCompare'] = function ListExtensions$124binarySearchByCompare(E, K, $this, element, keyOf, compare, start = 0, end = null) {
    return algorithms.binarySearchBy(E, K, $this, keyOf, compare, element, start, end);
  };
  list_extensions['ListExtensions|get#binarySearchByCompare'] = function ListExtensions$124get$35binarySearchByCompare(E, $this) {
    return dart.gFn((K, element, keyOf, compare, start = 0, end = null) => list_extensions['ListExtensions|binarySearchByCompare'](E, K, $this, element, keyOf, compare, start, end), E[_eval]("core|int(0,0^(0),core|int(0^,0^)[core|int,core|int?])<core|Object?>"), dart.constList(dart_rti._Universe.eval(dart_rti._theUniverse(), "@", true), [dart_rti._Universe.eval(dart_rti._theUniverse(), "@", true)]));
  };
  list_extensions['ListExtensions|binarySearchBy'] = function ListExtensions$124binarySearchBy(E, K, $this, element, keyOf, start = 0, end = null) {
    return algorithms.binarySearchBy(E, K, $this, keyOf, dart.fn((a, b) => a[$compareTo](b), K[_eval]("core|int(0,0)")), element, start, end);
  };
  list_extensions['ListExtensions|get#binarySearchBy'] = function ListExtensions$124get$35binarySearchBy(E, $this) {
    return dart.gFn((K, element, keyOf, start = 0, end = null) => list_extensions['ListExtensions|binarySearchBy'](E, K, $this, element, keyOf, start, end), E[_eval]("core|int(0,0^(0)[core|int,core|int?])<core|Comparable<0^>>"), dart.constList(dart_rti._Universe.eval(dart_rti._theUniverse(), "@", true), [dart_rti._Universe.eval(dart_rti._theUniverse(), "core|Comparable<@>", true)]));
  };
  list_extensions['ListExtensions|lowerBound'] = function ListExtensions$124lowerBound(E, $this, element, compare) {
    return algorithms.lowerBoundBy(E, E, $this, dart.gbind(C[3] || CT.C3, E), compare, element);
  };
  list_extensions['ListExtensions|get#lowerBound'] = function ListExtensions$124get$35lowerBound(E, $this) {
    return dart.fn((element, compare) => list_extensions['ListExtensions|lowerBound'](E, $this, element, compare), E[_eval]("core|int(0,core|int(0,0))"));
  };
  list_extensions['ListExtensions|lowerBoundByCompare'] = function ListExtensions$124lowerBoundByCompare(E, K, $this, element, keyOf, compare, start = 0, end = null) {
    return algorithms.lowerBoundBy(E, K, $this, keyOf, compare, element, start, end);
  };
  list_extensions['ListExtensions|get#lowerBoundByCompare'] = function ListExtensions$124get$35lowerBoundByCompare(E, $this) {
    return dart.gFn((K, element, keyOf, compare, start = 0, end = null) => list_extensions['ListExtensions|lowerBoundByCompare'](E, K, $this, element, keyOf, compare, start, end), E[_eval]("core|int(0,0^(0),core|int(0^,0^)[core|int,core|int?])<core|Object?>"), dart.constList(dart_rti._Universe.eval(dart_rti._theUniverse(), "@", true), [dart_rti._Universe.eval(dart_rti._theUniverse(), "@", true)]));
  };
  list_extensions['ListExtensions|lowerBoundBy'] = function ListExtensions$124lowerBoundBy(E, K, $this, element, keyOf, start = 0, end = null) {
    return algorithms.lowerBoundBy(E, K, $this, keyOf, dart.gbind(C[0] || CT.C0, K), element, start, end);
  };
  list_extensions['ListExtensions|get#lowerBoundBy'] = function ListExtensions$124get$35lowerBoundBy(E, $this) {
    return dart.gFn((K, element, keyOf, start = 0, end = null) => list_extensions['ListExtensions|lowerBoundBy'](E, K, $this, element, keyOf, start, end), E[_eval]("core|int(0,0^(0)[core|int,core|int?])<core|Comparable<0^>>"), dart.constList(dart_rti._Universe.eval(dart_rti._theUniverse(), "@", true), [dart_rti._Universe.eval(dart_rti._theUniverse(), "core|Comparable<@>", true)]));
  };
  list_extensions['ListExtensions|forEachIndexed'] = function ListExtensions$124forEachIndexed(E, $this, action) {
    for (let index = 0; index < $this[$length]; index = index + 1) {
      action(index, $this[$_get](index));
    }
  };
  list_extensions['ListExtensions|get#forEachIndexed'] = function ListExtensions$124get$35forEachIndexed(E, $this) {
    return dart.fn(action => list_extensions['ListExtensions|forEachIndexed'](E, $this, action), E[_eval]("~(~(core|int,0))"));
  };
  list_extensions['ListExtensions|forEachWhile'] = function ListExtensions$124forEachWhile(E, $this, action) {
    for (let index = 0; index < $this[$length]; index = index + 1) {
      if (!action($this[$_get](index))) break;
    }
  };
  list_extensions['ListExtensions|get#forEachWhile'] = function ListExtensions$124get$35forEachWhile(E, $this) {
    return dart.fn(action => list_extensions['ListExtensions|forEachWhile'](E, $this, action), E[_eval]("~(core|bool(0))"));
  };
  list_extensions['ListExtensions|get#forEachIndexedWhile'] = function ListExtensions$124get$35forEachIndexedWhile(E, $this) {
    return dart.fn(action => list_extensions['ListExtensions|forEachIndexedWhile'](E, $this, action), E[_eval]("~(core|bool(core|int,0))"));
  };
  list_extensions['ListExtensions|forEachIndexedWhile'] = function ListExtensions$124forEachIndexedWhile(E, $this, action) {
    for (let index = 0; index < $this[$length]; index = index + 1) {
      if (!action(index, $this[$_get](index))) break;
    }
  };
  list_extensions['ListExtensions|mapIndexed'] = function ListExtensions$124mapIndexed(E, R, $this, convert) {
    let E$ = E, R$ = R, $this$ = $this, convert$ = convert;
    return async._makeSyncStarIterable(R, () => {
      let E = E$, R = R$, $this = $this$, convert = convert$;
      let t$goto = 0, t$handler = 1, t$errorStack = [], asyncScope = Object.create(null);
      return (t$iterator, t$errorCode, t$result) => {
        if (t$errorCode === 1) {
          t$errorStack.push(t$result);
          t$goto = t$handler;
        }
        while (true)
          switch (t$goto) {
            case 0:
              // Function start
              asyncScope.index = 0;
            case 2:
              // for condition
              if (!(asyncScope.index < $this[$length])) {
                // goto after for
                t$goto = 4;
                break;
              }
              t$goto = 5;
              return t$iterator[_current$] = convert(asyncScope.index, $this[$_get](asyncScope.index)), 1;
            case 5:
              // after yield
            case 3:
              // for update
              asyncScope.index = asyncScope.index + 1;
              // goto for condition
              t$goto = 2;
              break;
            case 4:
              // after for
              // implicit return
              return 0;
            case 1:
              // rethrow
              return t$iterator[_datum] = t$errorStack.at(-1), 3;
          }
      };
    });
  };
  list_extensions['ListExtensions|get#mapIndexed'] = function ListExtensions$124get$35mapIndexed(E, $this) {
    return dart.gFn((R, convert) => list_extensions['ListExtensions|mapIndexed'](E, R, $this, convert), E[_eval]("core|Iterable<0^>(0^(core|int,0))<core|Object?>"), dart.constList(dart_rti._Universe.eval(dart_rti._theUniverse(), "@", true), [dart_rti._Universe.eval(dart_rti._theUniverse(), "@", true)]));
  };
  list_extensions['ListExtensions|whereIndexed'] = function ListExtensions$124whereIndexed(E, $this, test) {
    let E$ = E, $this$ = $this, test$ = test;
    return async._makeSyncStarIterable(E, () => {
      let E = E$, $this = $this$, test = test$;
      let t$goto = 0, t$handler = 1, t$errorStack = [], asyncScope = Object.create(null), asyncScope$ = Object.create(null);
      return (t$iterator, t$errorCode, t$result) => {
        if (t$errorCode === 1) {
          t$errorStack.push(t$result);
          t$goto = t$handler;
        }
        while (true)
          switch (t$goto) {
            case 0:
              // Function start
              asyncScope$.index = 0;
            case 2:
              // for condition
              if (!(asyncScope$.index < $this[$length])) {
                // goto after for
                t$goto = 4;
                break;
              }
              asyncScope.element = $this[$_get](asyncScope$.index);
              t$goto = test(asyncScope$.index, asyncScope.element) ? 5 : 6;
              break;
            case 5:
              // then
              t$goto = 7;
              return t$iterator[_current$] = asyncScope.element, 1;
            case 7:
              // after yield
            case 6:
              // join
            case 3:
              // for update
              asyncScope$.index = asyncScope$.index + 1;
              // goto for condition
              t$goto = 2;
              break;
            case 4:
              // after for
              // implicit return
              return 0;
            case 1:
              // rethrow
              return t$iterator[_datum] = t$errorStack.at(-1), 3;
          }
      };
    });
  };
  list_extensions['ListExtensions|get#whereIndexed'] = function ListExtensions$124get$35whereIndexed(E, $this) {
    return dart.fn(test => list_extensions['ListExtensions|whereIndexed'](E, $this, test), E[_eval]("core|Iterable<0>(core|bool(core|int,0))"));
  };
  list_extensions['ListExtensions|whereNotIndexed'] = function ListExtensions$124whereNotIndexed(E, $this, test) {
    let E$ = E, $this$ = $this, test$ = test;
    return async._makeSyncStarIterable(E, () => {
      let E = E$, $this = $this$, test = test$;
      let t$goto = 0, t$handler = 1, t$errorStack = [], asyncScope = Object.create(null), asyncScope$ = Object.create(null);
      return (t$iterator, t$errorCode, t$result) => {
        if (t$errorCode === 1) {
          t$errorStack.push(t$result);
          t$goto = t$handler;
        }
        while (true)
          switch (t$goto) {
            case 0:
              // Function start
              asyncScope$.index = 0;
            case 2:
              // for condition
              if (!(asyncScope$.index < $this[$length])) {
                // goto after for
                t$goto = 4;
                break;
              }
              asyncScope.element = $this[$_get](asyncScope$.index);
              t$goto = !test(asyncScope$.index, asyncScope.element) ? 5 : 6;
              break;
            case 5:
              // then
              t$goto = 7;
              return t$iterator[_current$] = asyncScope.element, 1;
            case 7:
              // after yield
            case 6:
              // join
            case 3:
              // for update
              asyncScope$.index = asyncScope$.index + 1;
              // goto for condition
              t$goto = 2;
              break;
            case 4:
              // after for
              // implicit return
              return 0;
            case 1:
              // rethrow
              return t$iterator[_datum] = t$errorStack.at(-1), 3;
          }
      };
    });
  };
  list_extensions['ListExtensions|get#whereNotIndexed'] = function ListExtensions$124get$35whereNotIndexed(E, $this) {
    return dart.fn(test => list_extensions['ListExtensions|whereNotIndexed'](E, $this, test), E[_eval]("core|Iterable<0>(core|bool(core|int,0))"));
  };
  list_extensions['ListExtensions|expandIndexed'] = function ListExtensions$124expandIndexed(E, R, $this, expand) {
    let E$ = E, R$ = R, $this$ = $this, expand$ = expand;
    return async._makeSyncStarIterable(R, () => {
      let E = E$, R = R$, $this = $this$, expand = expand$;
      let t$goto = 0, t$handler = 1, t$errorStack = [], asyncScope = Object.create(null);
      return (t$iterator, t$errorCode, t$result) => {
        if (t$errorCode === 1) {
          t$errorStack.push(t$result);
          t$goto = t$handler;
        }
        while (true)
          switch (t$goto) {
            case 0:
              // Function start
              asyncScope.index = 0;
            case 2:
              // for condition
              if (!(asyncScope.index < $this[$length])) {
                // goto after for
                t$goto = 4;
                break;
              }
              t$goto = 5;
              return t$iterator[_yieldStar](expand(asyncScope.index, $this[$_get](asyncScope.index)));
            case 5:
              // after yield
            case 3:
              // for update
              asyncScope.index = asyncScope.index + 1;
              // goto for condition
              t$goto = 2;
              break;
            case 4:
              // after for
              // implicit return
              return 0;
            case 1:
              // rethrow
              return t$iterator[_datum] = t$errorStack.at(-1), 3;
          }
      };
    });
  };
  list_extensions['ListExtensions|get#expandIndexed'] = function ListExtensions$124get$35expandIndexed(E, $this) {
    return dart.gFn((R, expand) => list_extensions['ListExtensions|expandIndexed'](E, R, $this, expand), E[_eval]("core|Iterable<0^>(core|Iterable<0^>(core|int,0))<core|Object?>"), dart.constList(dart_rti._Universe.eval(dart_rti._theUniverse(), "@", true), [dart_rti._Universe.eval(dart_rti._theUniverse(), "@", true)]));
  };
  list_extensions['ListExtensions|sortRange'] = function ListExtensions$124sortRange(E, $this, start, end, compare) {
    algorithms.quickSortBy(E, E, $this, dart.gbind(C[3] || CT.C3, E), compare, start, end);
  };
  list_extensions['ListExtensions|get#sortRange'] = function ListExtensions$124get$35sortRange(E, $this) {
    return dart.fn((start, end, compare) => list_extensions['ListExtensions|sortRange'](E, $this, start, end, compare), E[_eval]("~(core|int,core|int,core|int(0,0))"));
  };
  list_extensions['ListExtensions|sortByCompare'] = function ListExtensions$124sortByCompare(E, K, $this, keyOf, compare, start = 0, end = null) {
    algorithms.quickSortBy(E, K, $this, keyOf, compare, start, end);
  };
  list_extensions['ListExtensions|get#sortByCompare'] = function ListExtensions$124get$35sortByCompare(E, $this) {
    return dart.gFn((K, keyOf, compare, start = 0, end = null) => list_extensions['ListExtensions|sortByCompare'](E, K, $this, keyOf, compare, start, end), E[_eval]("~(0^(0),core|int(0^,0^)[core|int,core|int?])<core|Object?>"), dart.constList(dart_rti._Universe.eval(dart_rti._theUniverse(), "@", true), [dart_rti._Universe.eval(dart_rti._theUniverse(), "@", true)]));
  };
  list_extensions['ListExtensions|sortBy'] = function ListExtensions$124sortBy(E, K, $this, keyOf, start = 0, end = null) {
    algorithms.quickSortBy(E, K, $this, keyOf, dart.gbind(C[0] || CT.C0, K), start, end);
  };
  list_extensions['ListExtensions|get#sortBy'] = function ListExtensions$124get$35sortBy(E, $this) {
    return dart.gFn((K, keyOf, start = 0, end = null) => list_extensions['ListExtensions|sortBy'](E, K, $this, keyOf, start, end), E[_eval]("~(0^(0)[core|int,core|int?])<core|Comparable<0^>>"), dart.constList(dart_rti._Universe.eval(dart_rti._theUniverse(), "@", true), [dart_rti._Universe.eval(dart_rti._theUniverse(), "core|Comparable<@>", true)]));
  };
  list_extensions['ListExtensions|shuffleRange'] = function ListExtensions$124shuffleRange(E, $this, start, end, random = null) {
    core.RangeError.checkValidRange(start, end, $this[$length]);
    algorithms.shuffle($this, start, end, random);
  };
  list_extensions['ListExtensions|get#shuffleRange'] = function ListExtensions$124get$35shuffleRange(E, $this) {
    return dart.fn((start, end, random = null) => list_extensions['ListExtensions|shuffleRange'](E, $this, start, end, random), dart_rti._Universe.eval(dart_rti._theUniverse(), "~(core|int,core|int[math|Random?])", true));
  };
  list_extensions['ListExtensions|reverseRange'] = function ListExtensions$124reverseRange(E, $this, start, end) {
    core.RangeError.checkValidRange(start, end, $this[$length]);
    while (start < (end = end - 1)) {
      let tmp = $this[$_get](start);
      $this[$_set](start, $this[$_get](end));
      $this[$_set](end, tmp);
      start = start + 1;
    }
  };
  list_extensions['ListExtensions|get#reverseRange'] = function ListExtensions$124get$35reverseRange(E, $this) {
    return dart.fn((start, end) => list_extensions['ListExtensions|reverseRange'](E, $this, start, end), dart_rti._Universe.eval(dart_rti._theUniverse(), "~(core|int,core|int)", true));
  };
  list_extensions['ListExtensions|swap'] = function ListExtensions$124swap(E, $this, index1, index2) {
    core.RangeError.checkValidIndex(index1, $this, "index1");
    core.RangeError.checkValidIndex(index2, $this, "index2");
    let tmp = $this[$_get](index1);
    $this[$_set](index1, $this[$_get](index2));
    $this[$_set](index2, tmp);
  };
  list_extensions['ListExtensions|get#swap'] = function ListExtensions$124get$35swap(E, $this) {
    return dart.fn((index1, index2) => list_extensions['ListExtensions|swap'](E, $this, index1, index2), dart_rti._Universe.eval(dart_rti._theUniverse(), "~(core|int,core|int)", true));
  };
  list_extensions['ListExtensions|slice'] = function ListExtensions$124slice(E, $this, start, end = null) {
    end = core.RangeError.checkValidRange(start, end, $this[$length]);
    let self = $this;
    if (E[_eval]("collection__src__list_extensions|ListSlice<0>")[_is](self)) return self.slice(start, end);
    return new list_extensions.ListSlice.new(E[_eval]("collection__src__list_extensions|ListSlice<0>"), $this, start, end);
  };
  list_extensions['ListExtensions|get#slice'] = function ListExtensions$124get$35slice(E, $this) {
    return dart.fn((start, end = null) => list_extensions['ListExtensions|slice'](E, $this, start, end), E[_eval]("collection__src__list_extensions|ListSlice<0>(core|int[core|int?])"));
  };
  list_extensions['ListExtensions|equals'] = function ListExtensions$124equals(E, $this, other, equality = C[4] || CT.C4) {
    if ($this[$length] !== other[$length]) return false;
    for (let i = 0; i < $this[$length]; i = i + 1) {
      if (!equality.equals($this[$_get](i), other[$_get](i))) return false;
    }
    return true;
  };
  list_extensions['ListExtensions|get#equals'] = function ListExtensions$124get$35equals(E, $this) {
    return dart.fn((other, equality = C[4] || CT.C4) => list_extensions['ListExtensions|equals'](E, $this, other, equality), E[_eval]("core|bool(core|List<0>[collection__src__equality|Equality<0>])"));
  };
  list_extensions['ListExtensions|elementAtOrNull'] = function ListExtensions$124elementAtOrNull(E, $this, index) {
    return index < $this[$length] ? $this[$_get](index) : null;
  };
  list_extensions['ListExtensions|get#elementAtOrNull'] = function ListExtensions$124get$35elementAtOrNull(E, $this) {
    return dart.fn(index => list_extensions['ListExtensions|elementAtOrNull'](E, $this, index), E[_eval]("0?(core|int)"));
  };
  list_extensions['ListExtensions|slices'] = function ListExtensions$124slices(E, $this, length) {
    let E$ = E, $this$ = $this, length$ = length;
    return async._makeSyncStarIterable(E[_eval]("core|List<0>"), () => {
      let E = E$, $this = $this$, length = length$;
      let t$goto = 0, t$handler = 1, t$errorStack = [], asyncScope = Object.create(null);
      return (t$iterator, t$errorCode, t$result) => {
        if (t$errorCode === 1) {
          t$errorStack.push(t$result);
          t$goto = t$handler;
        }
        while (true)
          switch (t$goto) {
            case 0:
              // Function start
              if (length < 1) dart.throw(new core.RangeError.range(length, 1, null, "length"));
              asyncScope.i = 0;
            case 2:
              // for condition
              if (!(asyncScope.i < $this[$length])) {
                // goto after for
                t$goto = 4;
                break;
              }
              t$goto = 5;
              return t$iterator[_current$] = list_extensions['ListExtensions|slice'](E, $this, asyncScope.i, math.min(dart_rti._Universe.eval(dart_rti._theUniverse(), "core|int", true), asyncScope.i + length, $this[$length])), 1;
            case 5:
              // after yield
            case 3:
              // for update
              asyncScope.i = asyncScope.i + length;
              // goto for condition
              t$goto = 2;
              break;
            case 4:
              // after for
              // implicit return
              return 0;
            case 1:
              // rethrow
              return t$iterator[_datum] = t$errorStack.at(-1), 3;
          }
      };
    });
  };
  list_extensions['ListExtensions|get#slices'] = function ListExtensions$124get$35slices(E, $this) {
    return dart.fn(length => list_extensions['ListExtensions|slices'](E, $this, length), E[_eval]("core|Iterable<core|List<0>>(core|int)"));
  };
  list_extensions['ListComparableExtensions|binarySearch'] = function ListComparableExtensions$124binarySearch(E, $this, element, compare = null) {
    let t$36170;
    return algorithms.binarySearchBy(E, E, $this, dart.gbind(C[3] || CT.C3, E), (t$36170 = compare, t$36170 == null ? dart.gbind(C[0] || CT.C0, E) : t$36170), element);
  };
  list_extensions['ListComparableExtensions|get#binarySearch'] = function ListComparableExtensions$124get$35binarySearch(E, $this) {
    return dart.fn((element, compare = null) => list_extensions['ListComparableExtensions|binarySearch'](E, $this, element, compare), E[_eval]("core|int(0[core|int(0,0)?])"));
  };
  list_extensions['ListComparableExtensions|lowerBound'] = function ListComparableExtensions$124lowerBound(E, $this, element, compare = null) {
    let t$36172;
    return algorithms.lowerBoundBy(E, E, $this, dart.gbind(C[3] || CT.C3, E), (t$36172 = compare, t$36172 == null ? dart.gbind(C[0] || CT.C0, E) : t$36172), element);
  };
  list_extensions['ListComparableExtensions|get#lowerBound'] = function ListComparableExtensions$124get$35lowerBound(E, $this) {
    return dart.fn((element, compare = null) => list_extensions['ListComparableExtensions|lowerBound'](E, $this, element, compare), E[_eval]("core|int(0[core|int(0,0)?])"));
  };
  list_extensions['ListComparableExtensions|sortRange'] = function ListComparableExtensions$124sortRange(E, $this, start, end, compare = null) {
    let t$36174;
    core.RangeError.checkValidRange(start, end, $this[$length]);
    algorithms.quickSortBy(E, E, $this, dart.gbind(C[3] || CT.C3, E), (t$36174 = compare, t$36174 == null ? dart.gbind(C[0] || CT.C0, E) : t$36174), start, end);
  };
  list_extensions['ListComparableExtensions|get#sortRange'] = function ListComparableExtensions$124get$35sortRange(E, $this) {
    return dart.fn((start, end, compare = null) => list_extensions['ListComparableExtensions|sortRange'](E, $this, start, end, compare), E[_eval]("~(core|int,core|int[core|int(0,0)?])"));
  };
  var _maps = dart.privateName(combined_map, "_maps");
  combined_map.CombinedMapView = class CombinedMapView extends collection.UnmodifiableMapBase {
    static ['_#new#tearOff'](K, V, _maps) {
      return new combined_map.CombinedMapView.new(dart_rti.instanceType(this)[_bind](K)[_bind](V)[_eval]("collection__src__combined_wrappers__combined_map|CombinedMapView<1,2>"), _maps);
    }
    _get(key) {
      for (let map of this[_maps]) {
        let value = map[$_get](key);
        if (value != null || map[$containsKey](value)) {
          return value;
        }
      }
      return null;
    }
    get keys() {
      return new combined_map._DeduplicatingIterableView.new(dart_rti.instanceType(this)[_eval]("collection__src__combined_wrappers__combined_map|_DeduplicatingIterableView<CombinedMapView.K>"), new combined_iterable.CombinedIterableView.new(dart_rti.instanceType(this)[_eval]("collection__src__combined_wrappers__combined_iterable|CombinedIterableView<CombinedMapView.K>"), this[_maps][$map](dart_rti.instanceType(this)[_eval]("core|Iterable<CombinedMapView.K>"), dart.fn(m => m[$keys], dart_rti.instanceType(this)[_eval]("core|Iterable<CombinedMapView.K>(core|Map<CombinedMapView.K,CombinedMapView.V>)")))));
    }
  };
  (combined_map.CombinedMapView.new = function(_ti, _maps$) {
    this.$ti = this.$ti || _ti || dart.getReifiedType(this);
    this[_maps] = _maps$;
    dart.global.Object.getPrototypeOf(combined_map.CombinedMapView).new.call(this, null);
    ;
  }).prototype = combined_map.CombinedMapView.prototype;
  dart.addRtiResources(combined_map.CombinedMapView, ["collection__src__combined_wrappers__combined_map|CombinedMapView"]);
  dart.setMethodSignature(combined_map.CombinedMapView, () => dart.global.Object.setPrototypeOf({
    _get: _ti => _ti[_eval]("CombinedMapView.V?(core|Object?)"),
    [$_get]: _ti => _ti[_eval]("CombinedMapView.V?(core|Object?)")
  }, dart.getMethods(dart.global.Object.getPrototypeOf(combined_map.CombinedMapView))));
  dart.setGetterSignature(combined_map.CombinedMapView, () => dart.global.Object.setPrototypeOf({
    keys: _ti => _ti[_eval]("core|Iterable<CombinedMapView.K>"),
    [$keys]: _ti => _ti[_eval]("core|Iterable<CombinedMapView.K>")
  }, dart.getGetters(dart.global.Object.getPrototypeOf(combined_map.CombinedMapView))));
  dart.setLibraryUri(combined_map.CombinedMapView, I[12]);
  dart.setFieldSignature(combined_map.CombinedMapView, () => dart.global.Object.setPrototypeOf({[_maps]: {
      type: _ti => _ti[_eval]("core|Iterable<core|Map<CombinedMapView.K,CombinedMapView.V>>"),
      isConst: false,
      isFinal: true,
      libraryUri: I[1]
    }}, dart.getFields(dart.global.Object.getPrototypeOf(combined_map.CombinedMapView))));
  dart.defineExtensionMethods(combined_map.CombinedMapView, ['_get']);
  dart.defineExtensionAccessors(combined_map.CombinedMapView, ['keys']);
  var _iterable$ = dart.privateName(combined_map, "_DeduplicatingIterableView._iterable");
  var _iterable$0 = dart.privateName(combined_map, "_iterable");
  combined_map._DeduplicatingIterableView = class _DeduplicatingIterableView extends core.Iterable {
    get [_iterable$0]() {
      return this[_iterable$];
    }
    set [_iterable$0](value) {
      super[_iterable$0] = value;
    }
    static ['_#new#tearOff'](T, _iterable) {
      return new combined_map._DeduplicatingIterableView.new(dart_rti.instanceType(this)[_bind](T)[_eval]("collection__src__combined_wrappers__combined_map|_DeduplicatingIterableView<1>"), _iterable);
    }
    get iterator() {
      return new combined_map._DeduplicatingIterator.new(dart_rti.instanceType(this)[_eval]("collection__src__combined_wrappers__combined_map|_DeduplicatingIterator<_DeduplicatingIterableView.T>"), this[_iterable$0][$iterator]);
    }
    contains(element) {
      return this[_iterable$0][$contains](element);
    }
    get isEmpty() {
      return this[_iterable$0][$isEmpty];
    }
  };
  (combined_map._DeduplicatingIterableView.new = function(_ti, _iterable) {
    this.$ti = this.$ti || _ti || dart.getReifiedType(this);
    this[_iterable$] = _iterable;
    dart.global.Object.getPrototypeOf(combined_map._DeduplicatingIterableView).new.call(this, null);
    ;
  }).prototype = combined_map._DeduplicatingIterableView.prototype;
  dart.addRtiResources(combined_map._DeduplicatingIterableView, ["collection__src__combined_wrappers__combined_map|_DeduplicatingIterableView"]);
  dart.setGetterSignature(combined_map._DeduplicatingIterableView, () => dart.global.Object.setPrototypeOf({
    iterator: _ti => _ti[_eval]("core|Iterator<_DeduplicatingIterableView.T>"),
    [$iterator]: _ti => _ti[_eval]("core|Iterator<_DeduplicatingIterableView.T>")
  }, dart.getGetters(dart.global.Object.getPrototypeOf(combined_map._DeduplicatingIterableView))));
  dart.setLibraryUri(combined_map._DeduplicatingIterableView, I[12]);
  dart.setFieldSignature(combined_map._DeduplicatingIterableView, () => dart.global.Object.setPrototypeOf({[_iterable$0]: {
      type: _ti => _ti[_eval]("core|Iterable<_DeduplicatingIterableView.T>"),
      isConst: false,
      isFinal: true,
      libraryUri: I[1]
    }}, dart.getFields(dart.global.Object.getPrototypeOf(combined_map._DeduplicatingIterableView))));
  dart.defineExtensionMethods(combined_map._DeduplicatingIterableView, ['contains']);
  dart.defineExtensionAccessors(combined_map._DeduplicatingIterableView, ['iterator', 'isEmpty']);
  var _emitted = dart.privateName(combined_map, "_emitted");
  var _iterator = dart.privateName(combined_map, "_iterator");
  combined_map._DeduplicatingIterator = class _DeduplicatingIterator extends core.Object {
    static ['_#new#tearOff'](T, _iterator) {
      return new combined_map._DeduplicatingIterator.new(dart_rti.instanceType(this)[_bind](T)[_eval]("collection__src__combined_wrappers__combined_map|_DeduplicatingIterator<1>"), _iterator);
    }
    get current() {
      return this[_iterator].current;
    }
    moveNext() {
      while (this[_iterator].moveNext()) {
        if (this[_emitted].add(this.current)) {
          return true;
        }
      }
      return false;
    }
  };
  (combined_map._DeduplicatingIterator.new = function(_ti, _iterator$) {
    this.$ti = this.$ti || _ti || dart.getReifiedType(this);
    this[_emitted] = new _js_helper.LinkedSet.new(dart_rti.instanceType(this)[_eval]("_js_helper|LinkedSet<_DeduplicatingIterator.T>"));
    this[_iterator] = _iterator$;
    ;
  }).prototype = combined_map._DeduplicatingIterator.prototype;
  dart.addRtiResources(combined_map._DeduplicatingIterator, ["collection__src__combined_wrappers__combined_map|_DeduplicatingIterator", "core|Iterator"]);
  dart.setMethodSignature(combined_map._DeduplicatingIterator, () => dart.global.Object.setPrototypeOf({
    moveNext: _ti => dart_rti._Universe.eval(dart_rti._theUniverse(), "core|bool()", true)
  }, dart.getMethods(dart.global.Object.getPrototypeOf(combined_map._DeduplicatingIterator))));
  dart.setGetterSignature(combined_map._DeduplicatingIterator, () => dart.global.Object.setPrototypeOf({
    current: _ti => _ti[_eval]("_DeduplicatingIterator.T")
  }, dart.getGetters(dart.global.Object.getPrototypeOf(combined_map._DeduplicatingIterator))));
  dart.setLibraryUri(combined_map._DeduplicatingIterator, I[12]);
  dart.setFieldSignature(combined_map._DeduplicatingIterator, () => dart.global.Object.setPrototypeOf({
    [_iterator]: {
      type: _ti => _ti[_eval]("core|Iterator<_DeduplicatingIterator.T>"),
      isConst: false,
      isFinal: true,
      libraryUri: I[1]
    },
    [_emitted]: {
      type: _ti => _ti[_eval]("collection|HashSet<_DeduplicatingIterator.T>"),
      isConst: false,
      isFinal: true,
      libraryUri: I[13]
    }
  }, dart.getFields(dart.global.Object.getPrototypeOf(combined_map._DeduplicatingIterator))));
  equality_set.EqualitySet = class EqualitySet extends wrappers.DelegatingSet {
    static ['_#new#tearOff'](E, equality) {
      return new equality_set.EqualitySet.new(dart_rti.instanceType(this)[_bind](E)[_eval]("collection__src__equality_set|EqualitySet<1>"), equality);
    }
    static ['_#from#tearOff'](E, equality, other) {
      return new equality_set.EqualitySet.from(dart_rti.instanceType(this)[_bind](E)[_eval]("collection__src__equality_set|EqualitySet<1>"), equality, other);
    }
  };
  (equality_set.EqualitySet.new = function(_ti, equality) {
    this.$ti = this.$ti || _ti || dart.getReifiedType(this);
    dart.global.Object.getPrototypeOf(equality_set.EqualitySet).new.call(this, null, collection.LinkedHashSet.new(dart_rti.instanceType(this)[_eval]("collection|LinkedHashSet<EqualitySet.E>"), {equals: dart_rti.instanceType(this)[_eval]("core|bool(EqualitySet.E,EqualitySet.E)")[_as](dart.bind(equality, 'equals')), hashCode: dart_rti.instanceType(this)[_eval]("core|int(EqualitySet.E)")[_as](dart.bind(equality, 'hash')), isValidKey: dart.bind(equality, 'isValidKey')}));
    ;
  }).prototype = equality_set.EqualitySet.prototype;
  (equality_set.EqualitySet.from = function(_ti, equality, other) {
    this.$ti = this.$ti || _ti || dart.getReifiedType(this);
    dart.global.Object.getPrototypeOf(equality_set.EqualitySet).new.call(this, null, collection.LinkedHashSet.new(dart_rti.instanceType(this)[_eval]("collection|LinkedHashSet<EqualitySet.E>"), {equals: dart_rti.instanceType(this)[_eval]("core|bool(EqualitySet.E,EqualitySet.E)")[_as](dart.bind(equality, 'equals')), hashCode: dart_rti.instanceType(this)[_eval]("core|int(EqualitySet.E)")[_as](dart.bind(equality, 'hash')), isValidKey: dart.bind(equality, 'isValidKey')}));
    this.addAll(other);
  }).prototype = equality_set.EqualitySet.prototype;
  dart.addRtiResources(equality_set.EqualitySet, ["collection__src__equality_set|EqualitySet"]);
  dart.setLibraryUri(equality_set.EqualitySet, I[14]);
  dart.moduleConstCaches.set("packages/collection/collection", C);
  dart_rti._Universe.addRules(dart.typeUniverse, JSON.parse('{"collection__src__union_set|UnionSet":{"UnionSet.E":"1","SetBase.E":"1","collection|SetBase":["1"],"UnmodifiableSetMixin.E":"1","collection__src__unmodifiable_wrappers|UnmodifiableSetMixin":["1"],"Set.E":"1","core|Set":["1"],"Iterable.E":"1","core|Iterable":["1"],"_SetIterable.E":"1","core|_SetIterable":["1"],"EfficientLengthIterable.T":"1","_internal|EfficientLengthIterable":["1"],"HideEfficientLengthIterable.T":"1","_internal|HideEfficientLengthIterable":["1"]},"collection|SetBase":{"SetBase.E":"1","Set.E":"1","core|Set":["1"],"Iterable.E":"1","core|Iterable":["1"],"_SetIterable.E":"1","core|_SetIterable":["1"],"EfficientLengthIterable.T":"1","_internal|EfficientLengthIterable":["1"],"HideEfficientLengthIterable.T":"1","_internal|HideEfficientLengthIterable":["1"]},"collection__src__unmodifiable_wrappers|UnmodifiableSetMixin":{"UnmodifiableSetMixin.E":"1","Set.E":"1","core|Set":["1"],"Iterable.E":"1","core|Iterable":["1"],"_SetIterable.E":"1","core|_SetIterable":["1"],"EfficientLengthIterable.T":"1","_internal|EfficientLengthIterable":["1"],"HideEfficientLengthIterable.T":"1","_internal|HideEfficientLengthIterable":["1"]},"core|Set":{"Set.E":"1","Iterable.E":"1","core|Iterable":["1"],"_SetIterable.E":"1","core|_SetIterable":["1"],"EfficientLengthIterable.T":"1","_internal|EfficientLengthIterable":["1"],"HideEfficientLengthIterable.T":"1","_internal|HideEfficientLengthIterable":["1"]},"core|Iterable":{"Iterable.E":"1"},"core|_SetIterable":{"_SetIterable.E":"1","EfficientLengthIterable.T":"1","_internal|EfficientLengthIterable":["1"],"HideEfficientLengthIterable.T":"1","_internal|HideEfficientLengthIterable":["1"],"Iterable.E":"1","core|Iterable":["1"]},"_internal|EfficientLengthIterable":{"EfficientLengthIterable.T":"1","Iterable.E":"1","core|Iterable":["1"]},"_internal|HideEfficientLengthIterable":{"HideEfficientLengthIterable.T":"1","Iterable.E":"1","core|Iterable":["1"]},"core|int":{"core|num":[],"Comparable.T":"core|num","core|Comparable":["core|num"]},"core|num":{"Comparable.T":"core|num","core|Comparable":["core|num"]},"core|Comparable":{"Comparable.T":"1"},"collection|LinkedHashSet":{"LinkedHashSet.E":"1","Set.E":"1","core|Set":["1"],"Iterable.E":"1","core|Iterable":["1"],"_SetIterable.E":"1","core|_SetIterable":["1"],"EfficientLengthIterable.T":"1","_internal|EfficientLengthIterable":["1"],"HideEfficientLengthIterable.T":"1","_internal|HideEfficientLengthIterable":["1"]},"core|Iterator":{"Iterator.E":"1"},"core|List":{"List.E":"1","Iterable.E":"1","core|Iterable":["1"],"_ListIterable.E":"1","core|_ListIterable":["1"],"EfficientLengthIterable.T":"1","_internal|EfficientLengthIterable":["1"],"HideEfficientLengthIterable.T":"1","_internal|HideEfficientLengthIterable":["1"]},"core|_ListIterable":{"_ListIterable.E":"1","EfficientLengthIterable.T":"1","_internal|EfficientLengthIterable":["1"],"HideEfficientLengthIterable.T":"1","_internal|HideEfficientLengthIterable":["1"],"Iterable.E":"1","core|Iterable":["1"]},"collection__src__queue_list|_CastQueueList":{"_CastQueueList.S":"1","_CastQueueList.T":"2","QueueList.E":"2","collection__src__queue_list|QueueList":["2"],"Queue.E":"2","collection|Queue":["2"],"ListBase.E":"2","collection|ListBase":["2"],"Iterable.E":"2","core|Iterable":["2"],"_QueueIterable.E":"2","collection|_QueueIterable":["2"],"List.E":"2","core|List":["2"],"EfficientLengthIterable.T":"2","_internal|EfficientLengthIterable":["2"],"HideEfficientLengthIterable.T":"2","_internal|HideEfficientLengthIterable":["2"],"_ListIterable.E":"2","core|_ListIterable":["2"]},"collection__src__queue_list|QueueList":{"QueueList.E":"1","Queue.E":"1","collection|Queue":["1"],"ListBase.E":"1","collection|ListBase":["1"],"Iterable.E":"1","core|Iterable":["1"],"_QueueIterable.E":"1","collection|_QueueIterable":["1"],"List.E":"1","core|List":["1"],"EfficientLengthIterable.T":"1","_internal|EfficientLengthIterable":["1"],"HideEfficientLengthIterable.T":"1","_internal|HideEfficientLengthIterable":["1"],"_ListIterable.E":"1","core|_ListIterable":["1"]},"collection|Queue":{"Queue.E":"1","Iterable.E":"1","core|Iterable":["1"],"_QueueIterable.E":"1","collection|_QueueIterable":["1"],"EfficientLengthIterable.T":"1","_internal|EfficientLengthIterable":["1"],"HideEfficientLengthIterable.T":"1","_internal|HideEfficientLengthIterable":["1"]},"collection|ListBase":{"ListBase.E":"1","List.E":"1","core|List":["1"],"Iterable.E":"1","core|Iterable":["1"],"_ListIterable.E":"1","core|_ListIterable":["1"],"EfficientLengthIterable.T":"1","_internal|EfficientLengthIterable":["1"],"HideEfficientLengthIterable.T":"1","_internal|HideEfficientLengthIterable":["1"]},"collection|_QueueIterable":{"_QueueIterable.E":"1","EfficientLengthIterable.T":"1","_internal|EfficientLengthIterable":["1"],"HideEfficientLengthIterable.T":"1","_internal|HideEfficientLengthIterable":["1"],"Iterable.E":"1","core|Iterable":["1"]},"collection|LinkedHashMap":{"LinkedHashMap.K":"1","LinkedHashMap.V":"2","Map.K":"1","Map.V":"2","core|Map":["1","2"]},"core|Map":{"Map.K":"1","Map.V":"2"},"collection__src__equality_map|EqualityMap":{"EqualityMap.K":"1","EqualityMap.V":"2","DelegatingMap.K":"1","DelegatingMap.V":"2","collection__src__wrappers|DelegatingMap":["1","2"],"Map.K":"1","Map.V":"2","core|Map":["1","2"]},"collection__src__wrappers|DelegatingMap":{"DelegatingMap.K":"1","DelegatingMap.V":"2","Map.K":"1","Map.V":"2","core|Map":["1","2"]},"collection__src__union_set_controller|UnionSetController":{"UnionSetController.E":"1"},"collection__src__boollist|BoolList":{"ListBase.E":"core|bool","collection|ListBase":["core|bool"],"List.E":"core|bool","core|List":["core|bool"],"Iterable.E":"core|bool","core|Iterable":["core|bool"],"_ListIterable.E":"core|bool","core|_ListIterable":["core|bool"],"EfficientLengthIterable.T":"core|bool","_internal|EfficientLengthIterable":["core|bool"],"HideEfficientLengthIterable.T":"core|bool","_internal|HideEfficientLengthIterable":["core|bool"]},"typed_data|Uint32List":{"typed_data|_TypedIntList":[],"TypedDataList.E":"core|int","typed_data|TypedDataList":["core|int"],"typed_data|TypedData":[],"List.E":"core|int","core|List":["core|int"],"Iterable.E":"core|int","core|Iterable":["core|int"],"_ListIterable.E":"core|int","core|_ListIterable":["core|int"],"EfficientLengthIterable.T":"core|int","_internal|EfficientLengthIterable":["core|int"],"HideEfficientLengthIterable.T":"core|int","_internal|HideEfficientLengthIterable":["core|int"]},"typed_data|_TypedIntList":{"TypedDataList.E":"core|int","typed_data|TypedDataList":["core|int"],"typed_data|TypedData":[],"List.E":"core|int","core|List":["core|int"],"Iterable.E":"core|int","core|Iterable":["core|int"],"_ListIterable.E":"core|int","core|_ListIterable":["core|int"],"EfficientLengthIterable.T":"core|int","_internal|EfficientLengthIterable":["core|int"],"HideEfficientLengthIterable.T":"core|int","_internal|HideEfficientLengthIterable":["core|int"]},"typed_data|TypedDataList":{"TypedDataList.E":"1","typed_data|TypedData":[],"List.E":"1","core|List":["1"],"Iterable.E":"1","core|Iterable":["1"],"_ListIterable.E":"1","core|_ListIterable":["1"],"EfficientLengthIterable.T":"1","_internal|EfficientLengthIterable":["1"],"HideEfficientLengthIterable.T":"1","_internal|HideEfficientLengthIterable":["1"]},"_native_typed_data|NativeUint32List":{"_native_typed_data|NativeTypedArrayOfInt":[],"typed_data|Uint32List":[],"List.E":"core|int","core|List":["core|int"],"typed_data|_TypedIntList":[],"FixedLengthListMixin.E":"core|int","_internal|FixedLengthListMixin":["core|int"],"Iterable.E":"core|int","core|Iterable":["core|int"],"_ListIterable.E":"core|int","core|_ListIterable":["core|int"],"TypedDataList.E":"core|int","typed_data|TypedDataList":["core|int"],"NativeTypedArray.E":"core|int","_native_typed_data|NativeTypedArray":["core|int"],"ListBase.E":"core|int","collection|ListBase":["core|int"],"EfficientLengthIterable.T":"core|int","_internal|EfficientLengthIterable":["core|int"],"HideEfficientLengthIterable.T":"core|int","_internal|HideEfficientLengthIterable":["core|int"],"typed_data|TypedData":[],"_native_typed_data|NativeTypedData":[],"JavaScriptIndexingBehavior.E":"core|int","_js_helper|JavaScriptIndexingBehavior":["core|int"],"_interceptors|JavaScriptObject":[],"JSMutableIndexable.E":"core|int","_interceptors|JSMutableIndexable":["core|int"],"_interceptors|Interceptor":[],"_interceptors|JSObject":[],"JSIndexable.E":"core|int","_interceptors|JSIndexable":["core|int"]},"_native_typed_data|NativeTypedArrayOfInt":{"List.E":"core|int","core|List":["core|int"],"FixedLengthListMixin.E":"core|int","_internal|FixedLengthListMixin":["core|int"],"Iterable.E":"core|int","core|Iterable":["core|int"],"_ListIterable.E":"core|int","core|_ListIterable":["core|int"],"NativeTypedArray.E":"core|int","_native_typed_data|NativeTypedArray":["core|int"],"ListBase.E":"core|int","collection|ListBase":["core|int"],"EfficientLengthIterable.T":"core|int","_internal|EfficientLengthIterable":["core|int"],"HideEfficientLengthIterable.T":"core|int","_internal|HideEfficientLengthIterable":["core|int"],"_native_typed_data|NativeTypedData":[],"JavaScriptIndexingBehavior.E":"core|int","_js_helper|JavaScriptIndexingBehavior":["core|int"],"_interceptors|JavaScriptObject":[],"typed_data|TypedData":[],"JSMutableIndexable.E":"core|int","_interceptors|JSMutableIndexable":["core|int"],"_interceptors|Interceptor":[],"_interceptors|JSObject":[],"JSIndexable.E":"core|int","_interceptors|JSIndexable":["core|int"]},"_internal|FixedLengthListMixin":{"FixedLengthListMixin.E":"1"},"_native_typed_data|NativeTypedArray":{"NativeTypedArray.E":"1","_native_typed_data|NativeTypedData":[],"JavaScriptIndexingBehavior.E":"1","_js_helper|JavaScriptIndexingBehavior":["1"],"_interceptors|JavaScriptObject":[],"typed_data|TypedData":[],"JSMutableIndexable.E":"1","_interceptors|JSMutableIndexable":["1"],"_interceptors|Interceptor":[],"_interceptors|JSObject":[],"JSIndexable.E":"1","_interceptors|JSIndexable":["1"]},"_native_typed_data|NativeTypedData":{"_interceptors|JavaScriptObject":[],"typed_data|TypedData":[],"_interceptors|Interceptor":[],"_interceptors|JSObject":[]},"_js_helper|JavaScriptIndexingBehavior":{"JavaScriptIndexingBehavior.E":"1","JSMutableIndexable.E":"1","_interceptors|JSMutableIndexable":["1"],"JSIndexable.E":"1","_interceptors|JSIndexable":["1"]},"_interceptors|JavaScriptObject":{"_interceptors|Interceptor":[],"_interceptors|JSObject":[]},"_interceptors|JSMutableIndexable":{"JSMutableIndexable.E":"1","JSIndexable.E":"1","_interceptors|JSIndexable":["1"]},"_interceptors|JSIndexable":{"JSIndexable.E":"1"},"_interceptors|JSArray":{"JSArray.E":"1","_interceptors|JavaScriptObject":[],"List.E":"1","core|List":["1"],"JSIndexable.E":"1","_interceptors|JSIndexable":["1"],"_js_helper|TrustedGetRuntimeType":[],"_interceptors|Interceptor":[],"_interceptors|JSObject":[],"Iterable.E":"1","core|Iterable":["1"],"_ListIterable.E":"1","core|_ListIterable":["1"],"EfficientLengthIterable.T":"1","_internal|EfficientLengthIterable":["1"],"HideEfficientLengthIterable.T":"1","_internal|HideEfficientLengthIterable":["1"]},"_js_helper|LinkedMap":{"LinkedMap.K":"1","LinkedMap.V":"2","InternalMap.K":"1","InternalMap.V":"2","_js_helper|InternalMap":["1","2"],"MapBase.K":"1","MapBase.V":"2","collection|MapBase":["1","2"],"LinkedHashMap.K":"1","LinkedHashMap.V":"2","collection|LinkedHashMap":["1","2"],"HashMap.K":"1","HashMap.V":"2","collection|HashMap":["1","2"],"Map.K":"1","Map.V":"2","core|Map":["1","2"]},"_js_helper|InternalMap":{"InternalMap.K":"1","InternalMap.V":"2","MapBase.K":"1","MapBase.V":"2","collection|MapBase":["1","2"],"LinkedHashMap.K":"1","LinkedHashMap.V":"2","collection|LinkedHashMap":["1","2"],"HashMap.K":"1","HashMap.V":"2","collection|HashMap":["1","2"],"Map.K":"1","Map.V":"2","core|Map":["1","2"]},"collection|MapBase":{"MapBase.K":"1","MapBase.V":"2","Map.K":"1","Map.V":"2","core|Map":["1","2"]},"collection|HashMap":{"HashMap.K":"1","HashMap.V":"2","Map.K":"1","Map.V":"2","core|Map":["1","2"]},"_js_helper|LinkedSet":{"LinkedSet.E":"1","InternalSet.E":"1","_js_helper|InternalSet":["1"],"SetBase.E":"1","collection|SetBase":["1"],"LinkedHashSet.E":"1","collection|LinkedHashSet":["1"],"HashSet.E":"1","collection|HashSet":["1"],"Set.E":"1","core|Set":["1"],"Iterable.E":"1","core|Iterable":["1"],"_SetIterable.E":"1","core|_SetIterable":["1"],"EfficientLengthIterable.T":"1","_internal|EfficientLengthIterable":["1"],"HideEfficientLengthIterable.T":"1","_internal|HideEfficientLengthIterable":["1"]},"_js_helper|InternalSet":{"InternalSet.E":"1","SetBase.E":"1","collection|SetBase":["1"],"LinkedHashSet.E":"1","collection|LinkedHashSet":["1"],"HashSet.E":"1","collection|HashSet":["1"],"Set.E":"1","core|Set":["1"],"Iterable.E":"1","core|Iterable":["1"],"_SetIterable.E":"1","core|_SetIterable":["1"],"EfficientLengthIterable.T":"1","_internal|EfficientLengthIterable":["1"],"HideEfficientLengthIterable.T":"1","_internal|HideEfficientLengthIterable":["1"]},"collection|HashSet":{"HashSet.E":"1","Set.E":"1","core|Set":["1"],"Iterable.E":"1","core|Iterable":["1"],"_SetIterable.E":"1","core|_SetIterable":["1"],"EfficientLengthIterable.T":"1","_internal|EfficientLengthIterable":["1"],"HideEfficientLengthIterable.T":"1","_internal|HideEfficientLengthIterable":["1"]},"collection__src__combined_wrappers__combined_iterator|CombinedIterator":{"CombinedIterator.T":"1","Iterator.E":"1","core|Iterator":["1"]},"collection__src__combined_wrappers__combined_iterable|CombinedIterableView":{"CombinedIterableView.T":"1","Iterable.E":"1","core|Iterable":["1"]},"collection__src__combined_wrappers__combined_list|CombinedListView":{"CombinedListView.T":"1","ListBase.E":"1","collection|ListBase":["1"],"UnmodifiableListView.E":"1","collection|UnmodifiableListView":["1"],"List.E":"1","core|List":["1"],"UnmodifiableListBase.E":"1","_internal|UnmodifiableListBase":["1"],"Iterable.E":"1","core|Iterable":["1"],"_ListIterable.E":"1","core|_ListIterable":["1"],"UnmodifiableListMixin.E":"1","_internal|UnmodifiableListMixin":["1"],"EfficientLengthIterable.T":"1","_internal|EfficientLengthIterable":["1"],"HideEfficientLengthIterable.T":"1","_internal|HideEfficientLengthIterable":["1"]},"collection|UnmodifiableListView":{"UnmodifiableListView.E":"1","UnmodifiableListBase.E":"1","_internal|UnmodifiableListBase":["1"],"ListBase.E":"1","collection|ListBase":["1"],"UnmodifiableListMixin.E":"1","_internal|UnmodifiableListMixin":["1"],"List.E":"1","core|List":["1"],"Iterable.E":"1","core|Iterable":["1"],"_ListIterable.E":"1","core|_ListIterable":["1"],"EfficientLengthIterable.T":"1","_internal|EfficientLengthIterable":["1"],"HideEfficientLengthIterable.T":"1","_internal|HideEfficientLengthIterable":["1"]},"_internal|UnmodifiableListBase":{"UnmodifiableListBase.E":"1","ListBase.E":"1","collection|ListBase":["1"],"UnmodifiableListMixin.E":"1","_internal|UnmodifiableListMixin":["1"],"List.E":"1","core|List":["1"],"Iterable.E":"1","core|Iterable":["1"],"_ListIterable.E":"1","core|_ListIterable":["1"],"EfficientLengthIterable.T":"1","_internal|EfficientLengthIterable":["1"],"HideEfficientLengthIterable.T":"1","_internal|HideEfficientLengthIterable":["1"]},"_internal|UnmodifiableListMixin":{"UnmodifiableListMixin.E":"1","List.E":"1","core|List":["1"],"Iterable.E":"1","core|Iterable":["1"],"_ListIterable.E":"1","core|_ListIterable":["1"],"EfficientLengthIterable.T":"1","_internal|EfficientLengthIterable":["1"],"HideEfficientLengthIterable.T":"1","_internal|HideEfficientLengthIterable":["1"]},"collection__src__list_extensions|ListSlice":{"ListSlice.E":"1","ListBase.E":"1","collection|ListBase":["1"],"List.E":"1","core|List":["1"],"Iterable.E":"1","core|Iterable":["1"],"_ListIterable.E":"1","core|_ListIterable":["1"],"EfficientLengthIterable.T":"1","_internal|EfficientLengthIterable":["1"],"HideEfficientLengthIterable.T":"1","_internal|HideEfficientLengthIterable":["1"]},"collection__src__equality|DefaultEquality":{"DefaultEquality.E":"1","Equality.E":"1","collection__src__equality|Equality":["1"]},"collection__src__equality|Equality":{"Equality.E":"1"},"collection__src__combined_wrappers__combined_map|CombinedMapView":{"CombinedMapView.K":"1","CombinedMapView.V":"2","UnmodifiableMapBase.K":"1","UnmodifiableMapBase.V":"2","collection|UnmodifiableMapBase":["1","2"],"MapBase.K":"1","MapBase.V":"2","collection|MapBase":["1","2"],"_UnmodifiableMapMixin.K":"1","_UnmodifiableMapMixin.V":"2","collection|_UnmodifiableMapMixin":["1","2"],"Map.K":"1","Map.V":"2","core|Map":["1","2"]},"collection|UnmodifiableMapBase":{"UnmodifiableMapBase.K":"1","UnmodifiableMapBase.V":"2","MapBase.K":"1","MapBase.V":"2","collection|MapBase":["1","2"],"_UnmodifiableMapMixin.K":"1","_UnmodifiableMapMixin.V":"2","collection|_UnmodifiableMapMixin":["1","2"],"Map.K":"1","Map.V":"2","core|Map":["1","2"]},"collection|_UnmodifiableMapMixin":{"_UnmodifiableMapMixin.K":"1","_UnmodifiableMapMixin.V":"2","Map.K":"1","Map.V":"2","core|Map":["1","2"]},"collection__src__combined_wrappers__combined_map|_DeduplicatingIterableView":{"_DeduplicatingIterableView.T":"1","Iterable.E":"1","core|Iterable":["1"]},"collection__src__combined_wrappers__combined_map|_DeduplicatingIterator":{"_DeduplicatingIterator.T":"1","Iterator.E":"1","core|Iterator":["1"]},"collection__src__equality_set|EqualitySet":{"EqualitySet.E":"1","DelegatingSet.E":"1","collection__src__wrappers|DelegatingSet":["1"],"_DelegatingIterableBase.E":"1","collection__src__wrappers|_DelegatingIterableBase":["1"],"Set.E":"1","core|Set":["1"],"Iterable.E":"1","core|Iterable":["1"],"_SetIterable.E":"1","core|_SetIterable":["1"],"EfficientLengthIterable.T":"1","_internal|EfficientLengthIterable":["1"],"HideEfficientLengthIterable.T":"1","_internal|HideEfficientLengthIterable":["1"]},"collection__src__wrappers|DelegatingSet":{"DelegatingSet.E":"1","_DelegatingIterableBase.E":"1","collection__src__wrappers|_DelegatingIterableBase":["1"],"Set.E":"1","core|Set":["1"],"Iterable.E":"1","core|Iterable":["1"],"_SetIterable.E":"1","core|_SetIterable":["1"],"EfficientLengthIterable.T":"1","_internal|EfficientLengthIterable":["1"],"HideEfficientLengthIterable.T":"1","_internal|HideEfficientLengthIterable":["1"]},"collection__src__wrappers|_DelegatingIterableBase":{"_DelegatingIterableBase.E":"1","Iterable.E":"1","core|Iterable":["1"]},"collection__src__boollist|_GrowableBoolList":{"collection__src__boollist|BoolList":[],"ListBase.E":"core|bool","collection|ListBase":["core|bool"],"List.E":"core|bool","core|List":["core|bool"],"Iterable.E":"core|bool","core|Iterable":["core|bool"],"_ListIterable.E":"core|bool","core|_ListIterable":["core|bool"],"EfficientLengthIterable.T":"core|bool","_internal|EfficientLengthIterable":["core|bool"],"HideEfficientLengthIterable.T":"core|bool","_internal|HideEfficientLengthIterable":["core|bool"]},"collection__src__unmodifiable_wrappers|NonGrowableListMixin":{"NonGrowableListMixin.E":"1","List.E":"1","core|List":["1"],"Iterable.E":"1","core|Iterable":["1"],"_ListIterable.E":"1","core|_ListIterable":["1"],"EfficientLengthIterable.T":"1","_internal|EfficientLengthIterable":["1"],"HideEfficientLengthIterable.T":"1","_internal|HideEfficientLengthIterable":["1"]},"collection__src__boollist|_NonGrowableBoolList":{"collection__src__boollist|BoolList":[],"NonGrowableListMixin.E":"core|bool","collection__src__unmodifiable_wrappers|NonGrowableListMixin":["core|bool"],"List.E":"core|bool","core|List":["core|bool"],"ListBase.E":"core|bool","collection|ListBase":["core|bool"],"Iterable.E":"core|bool","core|Iterable":["core|bool"],"_ListIterable.E":"core|bool","core|_ListIterable":["core|bool"],"EfficientLengthIterable.T":"core|bool","_internal|EfficientLengthIterable":["core|bool"],"HideEfficientLengthIterable.T":"core|bool","_internal|HideEfficientLengthIterable":["core|bool"]},"collection__src__boollist|_BoolListIterator":{"Iterator.E":"core|bool","core|Iterator":["core|bool"]}}'));
  dart.trackLibraries("packages/collection/collection", {
    "package:collection/src/union_set.dart": union_set,
    "package:collection/src/queue_list.dart": queue_list,
    "package:collection/src/equality_map.dart": equality_map,
    "package:collection/src/union_set_controller.dart": union_set_controller,
    "package:collection/src/boollist.dart": boollist,
    "package:collection/src/iterable_extensions.dart": iterable_extensions,
    "package:collection/src/functions.dart": functions,
    "package:collection/src/combined_wrappers/combined_iterator.dart": combined_iterator,
    "package:collection/src/combined_wrappers/combined_iterable.dart": combined_iterable,
    "package:collection/src/combined_wrappers/combined_list.dart": combined_list,
    "package:collection/src/list_extensions.dart": list_extensions,
    "package:collection/src/combined_wrappers/combined_map.dart": combined_map,
    "package:collection/collection.dart": collection$,
    "package:collection/src/equality_set.dart": equality_set
  }, {
  }, '{"version":3,"sourceRoot":"","sources":["src/union_set.dart","src/queue_list.dart","src/equality_map.dart","src/union_set_controller.dart","src/boollist.dart","src/iterable_extensions.dart","src/functions.dart","src/combined_wrappers/combined_iterator.dart","src/combined_wrappers/combined_iterable.dart","src/combined_wrappers/combined_list.dart","src/list_extensions.dart","src/combined_wrappers/combined_map.dart","src/equality_set.dart"],"names":[],"mappings":"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","file":"collection.ddc.js"}');
  // Exports:
  return {
    src__union_set: union_set,
    src__queue_list: queue_list,
    src__equality_map: equality_map,
    src__union_set_controller: union_set_controller,
    src__boollist: boollist,
    src__iterable_extensions: iterable_extensions,
    src__functions: functions,
    src__combined_wrappers__combined_iterator: combined_iterator,
    src__combined_wrappers__combined_iterable: combined_iterable,
    src__combined_wrappers__combined_list: combined_list,
    src__list_extensions: list_extensions,
    src__combined_wrappers__combined_map: combined_map,
    collection: collection$,
    src__equality_set: equality_set
  };
}));

//# sourceMappingURL=collection.ddc.js.map
